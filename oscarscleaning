{"cells":[{"cell_type":"markdown","metadata":{"id":"1Cy7EuSMCpEz"},"source":["# Introduction"]},{"cell_type":"markdown","metadata":{"id":"TpUqlKTbCskO"},"source":["The Oscars highlight a film’s artistic and technical merits in the movie industry. Each year, the excitement and speculation around the nominations demonstrate the importance of the awards that go beyond the screen. Campaigning for nominations is a high-stakes effort for studios and filmmakers, given the prestige, opportunities, and lucrative media coverage the award show offers. However, the journey to securing a nomination is often opaque and subject to a great deal of uncertainty. As a result, forecasting Oscar nominations can be challenging and difficult due to the weight of cultural, economic, and political factors that contribute to them.\n","\n","We believe that the use of machine learning can help\n","us better understand the Oscar nomination process. Our\n","project aims to use machine learning algorithms to predict\n","Oscar nominations in different categories. We take a multi-label approach to analyze various factors that contribute to a movie’s chances of receiving a nomination, aiming to make the Oscar nomination process more transparent.\n","\n","Our approach focuses on using a wide range of movie-\n","related information, starting from the development stage to the final Oscar nomination announcements. We’ve identified key factors that we believe play a significant role in determining a movie’s nomination prospects.\n","\n","These features include, but not limited to:\n","\n","• Golden Globe and Screen Actors Guild (SAG) Nominations\n","\n","• Genre and Motion Picture Rating (MPAA)\n","\n","• Ratings from IMDb and Rotten Tomatoes\n","\n","• Net worth of the studio and production company, adjusted for inflation\n","\n","• Budget and box office performance\n","\n","• Actor attributes such as sex, age, and previous nomi-\n","nation history"]},{"cell_type":"markdown","metadata":{"id":"5YGlqb5PCMbR"},"source":["# Exploratory Data Analysis"]},{"cell_type":"markdown","metadata":{"id":"ePKEJRf2DjwH"},"source":["We have five main datasets we pull from:\n","\n","1. The Movies Dataset\n","2. IMDb datasets\n","3. Golden Globe nominations dataset\n","4. Oscar nominations dataset\n","5. SAG Award nominations dataset"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":122806,"status":"ok","timestamp":1702242079875,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"},"user_tz":480},"id":"0dvnM6z43TSC","outputId":"8f5c4c6e-ba69-4c84-9516-b2d2f7bcf729"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading...\n","From: https://drive.google.com/uc?id=1-eN4LBpReNHByiaTKUUwDPF4ZjC3gtGS\n","To: /content/download/datasets.zip\n","100% 1.57G/1.57G [00:19<00:00, 79.9MB/s]\n","Archive:  /content/download/datasets.zip\n","  inflating: /content/datasets/goldenglobes.csv  \n","  inflating: /content/datasets/movies/ratings_small.csv  \n","  inflating: /content/datasets/movies/links.csv  \n","  inflating: /content/datasets/movies/links_small.csv  \n","  inflating: /content/datasets/sag.csv  \n","  inflating: /content/datasets/oscars.csv  \n","  inflating: /content/datasets/imdb/title.ratings.tsv.gz  \n","  inflating: /content/datasets/movies/movies_metadata.csv  \n","  inflating: /content/datasets/movies/keywords.csv  \n","  inflating: /content/datasets/imdb/title.episode.tsv.gz  \n","  inflating: /content/datasets/imdb/title.crew.tsv.gz  \n","  inflating: /content/datasets/movies/credits.csv  \n","  inflating: /content/datasets/imdb/title.basics.tsv.gz  \n","  inflating: /content/datasets/imdb/title.akas.tsv.gz  \n","  inflating: /content/datasets/imdb/name.basics.tsv.gz  \n","  inflating: /content/datasets/imdb/title.principals.tsv.gz  \n","  inflating: /content/datasets/movies/ratings.csv  \n"]}],"source":["# Create directories\n","%mkdir /content/download\n","\n","# Download all datasets\n","!gdown 1-eN4LBpReNHByiaTKUUwDPF4ZjC3gtGS -O /content/download/datasets.zip\n","\n","# Unzip all files\n","!unzip /content/download/datasets.zip -d /content/\n","\n","# Decompress all .gz files in /content/datasets/imdb\n","!gunzip -f /content/datasets/imdb/*.gz"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"r_DD4KXoeVfp","executionInfo":{"status":"ok","timestamp":1702242080277,"user_tz":480,"elapsed":407,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import re\n","import ast\n","\n","# Create empty pandas DataFrame to store output\n","output_df = pd.DataFrame()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xGBhpRy3Nq30","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702023694895,"user_tz":480,"elapsed":7468,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"7efdd8ef-dfa6-4f2e-cde7-fb45615aea2e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting tmdbsimple\n","  Downloading tmdbsimple-2.9.1-py3-none-any.whl (38 kB)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from tmdbsimple) (2.31.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->tmdbsimple) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->tmdbsimple) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->tmdbsimple) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->tmdbsimple) (2023.11.17)\n","Installing collected packages: tmdbsimple\n","Successfully installed tmdbsimple-2.9.1\n"]}],"source":["!pip install tmdbsimple\n","\n","# Don't abuse the API KEY\n","TMDB_API_KEY = \"62ae058dd14e44729d519c1356fc7e4b\"\n","TMDB_API_READ_ACCESS_TOKEN = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MmFlMDU4ZGQxNGU0NDcyOWQ1MTljMTM1NmZjN2U0YiIsInN1YiI6IjY1NmQxOTM5NTY4NDYzMDEzMGEwNzhiZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.PU4-B_BolSZ_rkMo365Hg5b9Fy-Z60Qp7rHpOT5Q72Y\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e2akBHnkOO3Y"},"outputs":[],"source":["import tmdbsimple as tmdb\n","\n","tmdb.API_KEY = TMDB_API_KEY"]},{"cell_type":"markdown","metadata":{"id":"dMtSsSkjD21W"},"source":["## IMDb Dataset\n","IMDb. Imdb data files available for download. https://datasets.imdbws.com/, 2023. Documentation can be found at http://www.imdb.com/interfaces/."]},{"cell_type":"markdown","metadata":{"id":"NcSyT8F1i3jE"},"source":["### Extract list of films and basic info from `title.basics.tsv`\n","This contains a list of film titles and some basic information including:\n","* tconst (a unique identifier)\n","* titleType (eg. movie, short, tvseries, etc.)\n","* primaryTitle (popular title)\n","* original title (in original language) -- not used\n","* isAdult (0: non-adult, 1: adult)\n","* startYear (release year)\n","* endYear (series end year) -- not used\n","* runtimeMinutes\n","* genres (string array, up to three genres) -- used to create a feature for each unique genre; can either be a 1 or 0\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27409,"status":"ok","timestamp":1702023722572,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"l0_fRACnjADC","outputId":"b4d7547e-09fc-4f2e-d0c1-591691627a61"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-00ed44570788>:3: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.\n","  imdb_title_basics_df = pd.read_csv(imdb_title_basics_file_path, sep='\\t')\n"]}],"source":["# Open .tsv files from /content/datasets/imdb\n","imdb_title_basics_file_path = '/content/datasets/imdb/title.basics.tsv'\n","imdb_title_basics_df = pd.read_csv(imdb_title_basics_file_path, sep='\\t')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":643},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1702023722573,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"iHOLn9dRmWTR","outputId":"6c2e2583-738d-4182-baf4-b786e7de9139"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (10345990, 9)\n","Columns: Index(['tconst', 'titleType', 'primaryTitle', 'originalTitle', 'isAdult',\n","       'startYear', 'endYear', 'runtimeMinutes', 'genres'],\n","      dtype='object')\n"]},{"output_type":"execute_result","data":{"text/plain":["      tconst titleType                                 primaryTitle  \\\n","0  tt0000001     short                                   Carmencita   \n","1  tt0000002     short                       Le clown et ses chiens   \n","2  tt0000003     short                               Pauvre Pierrot   \n","3  tt0000004     short                                  Un bon bock   \n","4  tt0000005     short                             Blacksmith Scene   \n","5  tt0000006     short                            Chinese Opium Den   \n","6  tt0000007     short  Corbett and Courtney Before the Kinetograph   \n","7  tt0000008     short       Edison Kinetoscopic Record of a Sneeze   \n","8  tt0000009     movie                                   Miss Jerry   \n","9  tt0000010     short                          Leaving the Factory   \n","\n","                                 originalTitle isAdult startYear endYear  \\\n","0                                   Carmencita       0      1894      \\N   \n","1                       Le clown et ses chiens       0      1892      \\N   \n","2                               Pauvre Pierrot       0      1892      \\N   \n","3                                  Un bon bock       0      1892      \\N   \n","4                             Blacksmith Scene       0      1893      \\N   \n","5                            Chinese Opium Den       0      1894      \\N   \n","6  Corbett and Courtney Before the Kinetograph       0      1894      \\N   \n","7       Edison Kinetoscopic Record of a Sneeze       0      1894      \\N   \n","8                                   Miss Jerry       0      1894      \\N   \n","9          La sortie de l'usine Lumière à Lyon       0      1895      \\N   \n","\n","  runtimeMinutes                    genres  \n","0              1         Documentary,Short  \n","1              5           Animation,Short  \n","2              4  Animation,Comedy,Romance  \n","3             12           Animation,Short  \n","4              1              Comedy,Short  \n","5              1                     Short  \n","6              1               Short,Sport  \n","7              1         Documentary,Short  \n","8             45                   Romance  \n","9              1         Documentary,Short  "],"text/html":["\n","  <div id=\"df-f7d68ebc-c0fe-484a-83fb-3c70d14097ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tconst</th>\n","      <th>titleType</th>\n","      <th>primaryTitle</th>\n","      <th>originalTitle</th>\n","      <th>isAdult</th>\n","      <th>startYear</th>\n","      <th>endYear</th>\n","      <th>runtimeMinutes</th>\n","      <th>genres</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>tt0000001</td>\n","      <td>short</td>\n","      <td>Carmencita</td>\n","      <td>Carmencita</td>\n","      <td>0</td>\n","      <td>1894</td>\n","      <td>\\N</td>\n","      <td>1</td>\n","      <td>Documentary,Short</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>tt0000002</td>\n","      <td>short</td>\n","      <td>Le clown et ses chiens</td>\n","      <td>Le clown et ses chiens</td>\n","      <td>0</td>\n","      <td>1892</td>\n","      <td>\\N</td>\n","      <td>5</td>\n","      <td>Animation,Short</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>tt0000003</td>\n","      <td>short</td>\n","      <td>Pauvre Pierrot</td>\n","      <td>Pauvre Pierrot</td>\n","      <td>0</td>\n","      <td>1892</td>\n","      <td>\\N</td>\n","      <td>4</td>\n","      <td>Animation,Comedy,Romance</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>tt0000004</td>\n","      <td>short</td>\n","      <td>Un bon bock</td>\n","      <td>Un bon bock</td>\n","      <td>0</td>\n","      <td>1892</td>\n","      <td>\\N</td>\n","      <td>12</td>\n","      <td>Animation,Short</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>tt0000005</td>\n","      <td>short</td>\n","      <td>Blacksmith Scene</td>\n","      <td>Blacksmith Scene</td>\n","      <td>0</td>\n","      <td>1893</td>\n","      <td>\\N</td>\n","      <td>1</td>\n","      <td>Comedy,Short</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>tt0000006</td>\n","      <td>short</td>\n","      <td>Chinese Opium Den</td>\n","      <td>Chinese Opium Den</td>\n","      <td>0</td>\n","      <td>1894</td>\n","      <td>\\N</td>\n","      <td>1</td>\n","      <td>Short</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>tt0000007</td>\n","      <td>short</td>\n","      <td>Corbett and Courtney Before the Kinetograph</td>\n","      <td>Corbett and Courtney Before the Kinetograph</td>\n","      <td>0</td>\n","      <td>1894</td>\n","      <td>\\N</td>\n","      <td>1</td>\n","      <td>Short,Sport</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>tt0000008</td>\n","      <td>short</td>\n","      <td>Edison Kinetoscopic Record of a Sneeze</td>\n","      <td>Edison Kinetoscopic Record of a Sneeze</td>\n","      <td>0</td>\n","      <td>1894</td>\n","      <td>\\N</td>\n","      <td>1</td>\n","      <td>Documentary,Short</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>tt0000009</td>\n","      <td>movie</td>\n","      <td>Miss Jerry</td>\n","      <td>Miss Jerry</td>\n","      <td>0</td>\n","      <td>1894</td>\n","      <td>\\N</td>\n","      <td>45</td>\n","      <td>Romance</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>tt0000010</td>\n","      <td>short</td>\n","      <td>Leaving the Factory</td>\n","      <td>La sortie de l'usine Lumière à Lyon</td>\n","      <td>0</td>\n","      <td>1895</td>\n","      <td>\\N</td>\n","      <td>1</td>\n","      <td>Documentary,Short</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7d68ebc-c0fe-484a-83fb-3c70d14097ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f7d68ebc-c0fe-484a-83fb-3c70d14097ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f7d68ebc-c0fe-484a-83fb-3c70d14097ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e4b1bc8-cdb9-479f-9422-28e721a8a4bb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e4b1bc8-cdb9-479f-9422-28e721a8a4bb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e4b1bc8-cdb9-479f-9422-28e721a8a4bb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}],"source":["# Read the dataframe\n","print(f\"Shape: {imdb_title_basics_df.shape}\")\n","print(f\"Columns: {imdb_title_basics_df.columns}\")\n","imdb_title_basics_df.head(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13679,"status":"ok","timestamp":1702023736247,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"Z6wynt9ppS8k","outputId":"87ada617-6c8e-4a27-b071-3f5f91a277e3"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-b3dcaef8e4e5>:24: DeprecationWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`\n","  imdb_output_df.loc[:, 'isAdult'] = pd.to_numeric(imdb_output_df['isAdult'], errors='coerce').astype('Int64')\n","<ipython-input-7-b3dcaef8e4e5>:27: DeprecationWarning: In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`\n","  imdb_output_df.loc[:, 'runtimeMinutes'] = pd.to_numeric(imdb_output_df['runtimeMinutes'], errors='coerce')\n"]},{"output_type":"stream","name":"stdout","text":["Unique genres: ['Drama' 'Music' 'Western' 'Romance' 'Action' 'Crime' 'Documentary'\n"," 'Comedy' 'Unknown' 'Mystery' 'Family' 'Musical' 'Adventure' 'Sci-Fi'\n"," 'War' 'Sport' 'Fantasy' 'Horror' 'History' 'Biography' 'Thriller'\n"," 'Film-Noir' 'Animation' 'News' 'Adult' 'Reality-TV' 'Talk-Show'\n"," 'Game-Show' 'Short']\n"]}],"source":["# Extract appropriate columns and store in output\n","imdb_title_basics_cols_to_keep = ['tconst', 'titleType', 'primaryTitle', 'isAdult', 'startYear', 'runtimeMinutes', 'genres']\n","imdb_output_df = imdb_title_basics_df[imdb_title_basics_cols_to_keep]\n","\n","# Filter out all titles which are not movies\n","title_type_to_keep = 'movie'\n","imdb_output_df = imdb_output_df[imdb_output_df['titleType'] == title_type_to_keep]\n","imdb_output_df = imdb_output_df.drop(columns='titleType')\n","\n","# Filter out all titles which are released before 1927 and after 2022\n","imdb_output_df['releaseYear'] = pd.to_datetime(imdb_output_df['startYear'], errors='coerce')\n","start_year = '1927-01-01'\n","end_year = '2022-12-31'\n","imdb_output_df = imdb_output_df[\n","    (imdb_output_df['releaseYear'] >= start_year)\n","    & (imdb_output_df['releaseYear'] <= end_year)]\n","imdb_output_df = imdb_output_df.drop(columns='startYear')\n","imdb_output_df.loc[:, 'releaseYear'] = imdb_output_df['releaseYear'].dt.year.astype('Int64')\n","\n","# Convert film titles to lowercase\n","imdb_output_df.loc[:, 'primaryTitle'] = imdb_output_df['primaryTitle'].str.lower()\n","\n","# Convert isAdult to numeric\n","imdb_output_df.loc[:, 'isAdult'] = pd.to_numeric(imdb_output_df['isAdult'], errors='coerce').astype('Int64')\n","\n","# Convert runtimeMinutes to numeric\n","imdb_output_df.loc[:, 'runtimeMinutes'] = pd.to_numeric(imdb_output_df['runtimeMinutes'], errors='coerce')\n","imdb_output_df.loc[:, 'runtimeMinutes'] = np.where(pd.isna(imdb_output_df['runtimeMinutes']) | (imdb_output_df['runtimeMinutes'] == 0), np.nan, imdb_output_df['runtimeMinutes'])\n","imdb_output_df.loc[:, 'runtimeMinutes'] = imdb_output_df['runtimeMinutes'].astype('Int64')\n","\n","# Create a column for each unique genre, and assign 1 or 0 for each film\n","imdb_output_df.loc[:, 'genres'] = imdb_output_df['genres'].replace('\\\\N', 'Unknown').replace('-', '')\n","unique_genres = imdb_output_df['genres'].str.split(',').explode().unique()\n","print(f'Unique genres: {unique_genres}')\n","for genre in unique_genres:\n","  imdb_output_df.loc[:, f'genre{genre}'] = imdb_output_df['genres'].str.contains(genre).astype('Int64')\n","\n","imdb_output_df = imdb_output_df.drop(columns='genres')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":426,"status":"ok","timestamp":1702023737096,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"6n9zlnbuqHf-","outputId":"bc9dc900-57f7-4f4d-fa4d-4952b85585c8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (521115, 34)\n","Columns: Index(['tconst', 'primaryTitle', 'isAdult', 'runtimeMinutes', 'releaseYear',\n","       'genreDrama', 'genreMusic', 'genreWestern', 'genreRomance',\n","       'genreAction', 'genreCrime', 'genreDocumentary', 'genreComedy',\n","       'genreUnknown', 'genreMystery', 'genreFamily', 'genreMusical',\n","       'genreAdventure', 'genreSci-Fi', 'genreWar', 'genreSport',\n","       'genreFantasy', 'genreHorror', 'genreHistory', 'genreBiography',\n","       'genreThriller', 'genreFilm-Noir', 'genreAnimation', 'genreNews',\n","       'genreAdult', 'genreReality-TV', 'genreTalk-Show', 'genreGame-Show',\n","       'genreShort'],\n","      dtype='object')\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 521115 entries, 3816 to 10345940\n","Data columns (total 34 columns):\n"," #   Column            Non-Null Count   Dtype \n","---  ------            --------------   ----- \n"," 0   tconst            521115 non-null  object\n"," 1   primaryTitle      521115 non-null  object\n"," 2   isAdult           521115 non-null  Int64 \n"," 3   runtimeMinutes    389578 non-null  Int64 \n"," 4   releaseYear       521115 non-null  Int64 \n"," 5   genreDrama        521115 non-null  Int64 \n"," 6   genreMusic        521115 non-null  Int64 \n"," 7   genreWestern      521115 non-null  Int64 \n"," 8   genreRomance      521115 non-null  Int64 \n"," 9   genreAction       521115 non-null  Int64 \n"," 10  genreCrime        521115 non-null  Int64 \n"," 11  genreDocumentary  521115 non-null  Int64 \n"," 12  genreComedy       521115 non-null  Int64 \n"," 13  genreUnknown      521115 non-null  Int64 \n"," 14  genreMystery      521115 non-null  Int64 \n"," 15  genreFamily       521115 non-null  Int64 \n"," 16  genreMusical      521115 non-null  Int64 \n"," 17  genreAdventure    521115 non-null  Int64 \n"," 18  genreSci-Fi       521115 non-null  Int64 \n"," 19  genreWar          521115 non-null  Int64 \n"," 20  genreSport        521115 non-null  Int64 \n"," 21  genreFantasy      521115 non-null  Int64 \n"," 22  genreHorror       521115 non-null  Int64 \n"," 23  genreHistory      521115 non-null  Int64 \n"," 24  genreBiography    521115 non-null  Int64 \n"," 25  genreThriller     521115 non-null  Int64 \n"," 26  genreFilm-Noir    521115 non-null  Int64 \n"," 27  genreAnimation    521115 non-null  Int64 \n"," 28  genreNews         521115 non-null  Int64 \n"," 29  genreAdult        521115 non-null  Int64 \n"," 30  genreReality-TV   521115 non-null  Int64 \n"," 31  genreTalk-Show    521115 non-null  Int64 \n"," 32  genreGame-Show    521115 non-null  Int64 \n"," 33  genreShort        521115 non-null  Int64 \n","dtypes: Int64(32), object(2)\n","memory usage: 155.1+ MB\n"]},{"output_type":"execute_result","data":{"text/plain":["          tconst                 primaryTitle  isAdult  runtimeMinutes  \\\n","3816   tt0003854             dodge city trail        0              56   \n","11551  tt0011715                sol de gloria        0            <NA>   \n","11636  tt0011801             tötet nicht mehr        0            <NA>   \n","13081  tt0013274  istoriya grazhdanskoy voyny        0              94   \n","14751  tt0014985           a hero for a night        0              60   \n","14916  tt0015152            mustalaishurmaaja        0              69   \n","15176  tt0015414       la tierra de los toros        0              60   \n","15484  tt0015724                dama de noche        0             102   \n","15497  tt0015737         a daughter in revolt        0            <NA>   \n","15786  tt0016029           the little colonel        0              81   \n","\n","       releaseYear  genreDrama  genreMusic  genreWestern  genreRomance  \\\n","3816          1936           1           1             1             0   \n","11551         1928           1           0             0             1   \n","11636         2019           0           0             0             0   \n","13081         2021           0           0             0             0   \n","14751         1927           0           0             0             0   \n","14916         1929           1           0             0             1   \n","15176         2000           0           0             0             0   \n","15484         1993           1           0             0             1   \n","15497         1927           0           0             0             0   \n","15786         1935           0           1             0             0   \n","\n","       genreAction  ...  genreBiography  genreThriller  genreFilm-Noir  \\\n","3816             0  ...               0              0               0   \n","11551            0  ...               0              0               0   \n","11636            1  ...               0              0               0   \n","13081            0  ...               0              0               0   \n","14751            0  ...               0              0               0   \n","14916            0  ...               0              0               0   \n","15176            0  ...               0              0               0   \n","15484            0  ...               0              0               0   \n","15497            0  ...               0              0               0   \n","15786            0  ...               0              0               0   \n","\n","       genreAnimation  genreNews  genreAdult  genreReality-TV  genreTalk-Show  \\\n","3816                0          0           0                0               0   \n","11551               0          0           0                0               0   \n","11636               0          0           0                0               0   \n","13081               0          0           0                0               0   \n","14751               0          0           0                0               0   \n","14916               0          0           0                0               0   \n","15176               0          0           0                0               0   \n","15484               0          0           0                0               0   \n","15497               0          0           0                0               0   \n","15786               0          0           0                0               0   \n","\n","       genreGame-Show  genreShort  \n","3816                0           0  \n","11551               0           0  \n","11636               0           0  \n","13081               0           0  \n","14751               0           0  \n","14916               0           0  \n","15176               0           0  \n","15484               0           0  \n","15497               0           0  \n","15786               0           0  \n","\n","[10 rows x 34 columns]"],"text/html":["\n","  <div id=\"df-725ae29f-8693-457f-8e34-e0971ddd1e2a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tconst</th>\n","      <th>primaryTitle</th>\n","      <th>isAdult</th>\n","      <th>runtimeMinutes</th>\n","      <th>releaseYear</th>\n","      <th>genreDrama</th>\n","      <th>genreMusic</th>\n","      <th>genreWestern</th>\n","      <th>genreRomance</th>\n","      <th>genreAction</th>\n","      <th>...</th>\n","      <th>genreBiography</th>\n","      <th>genreThriller</th>\n","      <th>genreFilm-Noir</th>\n","      <th>genreAnimation</th>\n","      <th>genreNews</th>\n","      <th>genreAdult</th>\n","      <th>genreReality-TV</th>\n","      <th>genreTalk-Show</th>\n","      <th>genreGame-Show</th>\n","      <th>genreShort</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3816</th>\n","      <td>tt0003854</td>\n","      <td>dodge city trail</td>\n","      <td>0</td>\n","      <td>56</td>\n","      <td>1936</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11551</th>\n","      <td>tt0011715</td>\n","      <td>sol de gloria</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>1928</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11636</th>\n","      <td>tt0011801</td>\n","      <td>tötet nicht mehr</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>2019</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13081</th>\n","      <td>tt0013274</td>\n","      <td>istoriya grazhdanskoy voyny</td>\n","      <td>0</td>\n","      <td>94</td>\n","      <td>2021</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14751</th>\n","      <td>tt0014985</td>\n","      <td>a hero for a night</td>\n","      <td>0</td>\n","      <td>60</td>\n","      <td>1927</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14916</th>\n","      <td>tt0015152</td>\n","      <td>mustalaishurmaaja</td>\n","      <td>0</td>\n","      <td>69</td>\n","      <td>1929</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15176</th>\n","      <td>tt0015414</td>\n","      <td>la tierra de los toros</td>\n","      <td>0</td>\n","      <td>60</td>\n","      <td>2000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15484</th>\n","      <td>tt0015724</td>\n","      <td>dama de noche</td>\n","      <td>0</td>\n","      <td>102</td>\n","      <td>1993</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15497</th>\n","      <td>tt0015737</td>\n","      <td>a daughter in revolt</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>1927</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15786</th>\n","      <td>tt0016029</td>\n","      <td>the little colonel</td>\n","      <td>0</td>\n","      <td>81</td>\n","      <td>1935</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 34 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-725ae29f-8693-457f-8e34-e0971ddd1e2a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-725ae29f-8693-457f-8e34-e0971ddd1e2a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-725ae29f-8693-457f-8e34-e0971ddd1e2a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8fed6848-ea6c-4f81-8392-579a88da3bfd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8fed6848-ea6c-4f81-8392-579a88da3bfd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8fed6848-ea6c-4f81-8392-579a88da3bfd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}],"source":["print(f\"Shape: {imdb_output_df.shape}\")\n","print(f\"Columns: {imdb_output_df.columns}\")\n","imdb_output_df.info()\n","imdb_output_df.head(10)"]},{"cell_type":"markdown","metadata":{"id":"1kvW6smu5L7r"},"source":["### Extract list of ratings from `title.ratings.tsv`\n","This contains a list of film ids and some rating information including:\n","* tconst (a unique identifier)\n","* averageRating (a weighted average out of 10)\n","* numVotes (number of votes received on imdb)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qJp2fdr65cyI"},"outputs":[],"source":["# Open .tsv files from /content/datasets/imdb\n","imdb_title_ratings_file_path = '/content/datasets/imdb/title.ratings.tsv'\n","imdb_title_ratings_df = pd.read_csv(imdb_title_ratings_file_path, sep='\\t')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":398},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1702023738091,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"erYAJWqu56yx","outputId":"d633cf60-2567-4733-95b4-2eb762891ee4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (1373171, 3)\n","Columns: Index(['tconst', 'averageRating', 'numVotes'], dtype='object')\n"]},{"output_type":"execute_result","data":{"text/plain":["      tconst  averageRating  numVotes\n","0  tt0000001            5.7      2007\n","1  tt0000002            5.8       270\n","2  tt0000003            6.5      1916\n","3  tt0000004            5.5       178\n","4  tt0000005            6.2      2696\n","5  tt0000006            5.0       183\n","6  tt0000007            5.4       843\n","7  tt0000008            5.4      2154\n","8  tt0000009            5.3       208\n","9  tt0000010            6.9      7359"],"text/html":["\n","  <div id=\"df-1a439012-e146-4d00-a8c9-d75e89a54ce0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tconst</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>tt0000001</td>\n","      <td>5.7</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>tt0000002</td>\n","      <td>5.8</td>\n","      <td>270</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>tt0000003</td>\n","      <td>6.5</td>\n","      <td>1916</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>tt0000004</td>\n","      <td>5.5</td>\n","      <td>178</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>tt0000005</td>\n","      <td>6.2</td>\n","      <td>2696</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>tt0000006</td>\n","      <td>5.0</td>\n","      <td>183</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>tt0000007</td>\n","      <td>5.4</td>\n","      <td>843</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>tt0000008</td>\n","      <td>5.4</td>\n","      <td>2154</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>tt0000009</td>\n","      <td>5.3</td>\n","      <td>208</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>tt0000010</td>\n","      <td>6.9</td>\n","      <td>7359</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a439012-e146-4d00-a8c9-d75e89a54ce0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a439012-e146-4d00-a8c9-d75e89a54ce0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a439012-e146-4d00-a8c9-d75e89a54ce0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0c19f2b4-8ac4-4ee2-877f-651392adb7df\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0c19f2b4-8ac4-4ee2-877f-651392adb7df')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0c19f2b4-8ac4-4ee2-877f-651392adb7df button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}],"source":["# Read the dataframe\n","print(f\"Shape: {imdb_title_ratings_df.shape}\")\n","print(f\"Columns: {imdb_title_ratings_df.columns}\")\n","imdb_title_ratings_df.head(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LvDGqjZW6s_n"},"outputs":[],"source":["# Check if 'averageRating' and 'numVotes' are not in imdb_output_df.columns\n","if 'averageRating' not in imdb_output_df.columns or 'numVotes' not in imdb_output_df.columns:\n","    imdb_output_df = pd.merge(imdb_output_df, imdb_title_ratings_df[['tconst', 'averageRating', 'numVotes']], on='tconst', how='left')\n","\n","imdb_output_df['averageRating'] = pd.to_numeric(imdb_output_df['averageRating'], errors='coerce')\n","imdb_output_df['averageRating'] = np.where(pd.isna(imdb_output_df['averageRating']) | imdb_output_df['averageRating'] == 0, np.nan, imdb_output_df['averageRating'])\n","imdb_output_df['averageRating'] = imdb_output_df['averageRating'].astype('Float64')\n","\n","imdb_output_df['numVotes'] = pd.to_numeric(imdb_output_df['numVotes'], errors='coerce')\n","imdb_output_df['numVotes'] = np.where(pd.isna(imdb_output_df['numVotes']) | (imdb_output_df['numVotes'] == 0), np.nan, imdb_output_df['numVotes'])\n","imdb_output_df['numVotes'] = imdb_output_df['numVotes'].astype('Int64')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":324,"status":"ok","timestamp":1702023740257,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"4wjTsALD8Mio","outputId":"9f1e6bbd-e20d-434c-b9b1-a638dbefe8fe"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (521115, 36)\n","Columns: Index(['tconst', 'primaryTitle', 'isAdult', 'runtimeMinutes', 'releaseYear',\n","       'genreDrama', 'genreMusic', 'genreWestern', 'genreRomance',\n","       'genreAction', 'genreCrime', 'genreDocumentary', 'genreComedy',\n","       'genreUnknown', 'genreMystery', 'genreFamily', 'genreMusical',\n","       'genreAdventure', 'genreSci-Fi', 'genreWar', 'genreSport',\n","       'genreFantasy', 'genreHorror', 'genreHistory', 'genreBiography',\n","       'genreThriller', 'genreFilm-Noir', 'genreAnimation', 'genreNews',\n","       'genreAdult', 'genreReality-TV', 'genreTalk-Show', 'genreGame-Show',\n","       'genreShort', 'averageRating', 'numVotes'],\n","      dtype='object')\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 521115 entries, 0 to 521114\n","Data columns (total 36 columns):\n"," #   Column            Non-Null Count   Dtype  \n","---  ------            --------------   -----  \n"," 0   tconst            521115 non-null  object \n"," 1   primaryTitle      521115 non-null  object \n"," 2   isAdult           521115 non-null  Int64  \n"," 3   runtimeMinutes    389578 non-null  Int64  \n"," 4   releaseYear       521115 non-null  Int64  \n"," 5   genreDrama        521115 non-null  Int64  \n"," 6   genreMusic        521115 non-null  Int64  \n"," 7   genreWestern      521115 non-null  Int64  \n"," 8   genreRomance      521115 non-null  Int64  \n"," 9   genreAction       521115 non-null  Int64  \n"," 10  genreCrime        521115 non-null  Int64  \n"," 11  genreDocumentary  521115 non-null  Int64  \n"," 12  genreComedy       521115 non-null  Int64  \n"," 13  genreUnknown      521115 non-null  Int64  \n"," 14  genreMystery      521115 non-null  Int64  \n"," 15  genreFamily       521115 non-null  Int64  \n"," 16  genreMusical      521115 non-null  Int64  \n"," 17  genreAdventure    521115 non-null  Int64  \n"," 18  genreSci-Fi       521115 non-null  Int64  \n"," 19  genreWar          521115 non-null  Int64  \n"," 20  genreSport        521115 non-null  Int64  \n"," 21  genreFantasy      521115 non-null  Int64  \n"," 22  genreHorror       521115 non-null  Int64  \n"," 23  genreHistory      521115 non-null  Int64  \n"," 24  genreBiography    521115 non-null  Int64  \n"," 25  genreThriller     521115 non-null  Int64  \n"," 26  genreFilm-Noir    521115 non-null  Int64  \n"," 27  genreAnimation    521115 non-null  Int64  \n"," 28  genreNews         521115 non-null  Int64  \n"," 29  genreAdult        521115 non-null  Int64  \n"," 30  genreReality-TV   521115 non-null  Int64  \n"," 31  genreTalk-Show    521115 non-null  Int64  \n"," 32  genreGame-Show    521115 non-null  Int64  \n"," 33  genreShort        521115 non-null  Int64  \n"," 34  averageRating     288943 non-null  Float64\n"," 35  numVotes          288943 non-null  Int64  \n","dtypes: Float64(1), Int64(33), object(2)\n","memory usage: 164.0+ MB\n"]},{"output_type":"execute_result","data":{"text/plain":["      tconst                 primaryTitle  isAdult  runtimeMinutes  \\\n","0  tt0003854             dodge city trail        0              56   \n","1  tt0011715                sol de gloria        0            <NA>   \n","2  tt0011801             tötet nicht mehr        0            <NA>   \n","3  tt0013274  istoriya grazhdanskoy voyny        0              94   \n","4  tt0014985           a hero for a night        0              60   \n","5  tt0015152            mustalaishurmaaja        0              69   \n","6  tt0015414       la tierra de los toros        0              60   \n","7  tt0015724                dama de noche        0             102   \n","8  tt0015737         a daughter in revolt        0            <NA>   \n","9  tt0016029           the little colonel        0              81   \n","\n","   releaseYear  genreDrama  genreMusic  genreWestern  genreRomance  \\\n","0         1936           1           1             1             0   \n","1         1928           1           0             0             1   \n","2         2019           0           0             0             0   \n","3         2021           0           0             0             0   \n","4         1927           0           0             0             0   \n","5         1929           1           0             0             1   \n","6         2000           0           0             0             0   \n","7         1993           1           0             0             1   \n","8         1927           0           0             0             0   \n","9         1935           0           1             0             0   \n","\n","   genreAction  ...  genreFilm-Noir  genreAnimation  genreNews  genreAdult  \\\n","0            0  ...               0               0          0           0   \n","1            0  ...               0               0          0           0   \n","2            1  ...               0               0          0           0   \n","3            0  ...               0               0          0           0   \n","4            0  ...               0               0          0           0   \n","5            0  ...               0               0          0           0   \n","6            0  ...               0               0          0           0   \n","7            0  ...               0               0          0           0   \n","8            0  ...               0               0          0           0   \n","9            0  ...               0               0          0           0   \n","\n","   genreReality-TV  genreTalk-Show  genreGame-Show  genreShort  averageRating  \\\n","0                0               0               0           0            3.7   \n","1                0               0               0           0           <NA>   \n","2                0               0               0           0           <NA>   \n","3                0               0               0           0            6.8   \n","4                0               0               0           0            6.4   \n","5                0               0               0           0            6.4   \n","6                0               0               0           0            5.2   \n","7                0               0               0           0            6.1   \n","8                0               0               0           0           <NA>   \n","9                0               0               0           0            7.0   \n","\n","   numVotes  \n","0        28  \n","1      <NA>  \n","2      <NA>  \n","3        61  \n","4        23  \n","5        74  \n","6        16  \n","7        27  \n","8      <NA>  \n","9      1840  \n","\n","[10 rows x 36 columns]"],"text/html":["\n","  <div id=\"df-5c7aba01-2373-4a78-9390-55ff0c23c1f3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tconst</th>\n","      <th>primaryTitle</th>\n","      <th>isAdult</th>\n","      <th>runtimeMinutes</th>\n","      <th>releaseYear</th>\n","      <th>genreDrama</th>\n","      <th>genreMusic</th>\n","      <th>genreWestern</th>\n","      <th>genreRomance</th>\n","      <th>genreAction</th>\n","      <th>...</th>\n","      <th>genreFilm-Noir</th>\n","      <th>genreAnimation</th>\n","      <th>genreNews</th>\n","      <th>genreAdult</th>\n","      <th>genreReality-TV</th>\n","      <th>genreTalk-Show</th>\n","      <th>genreGame-Show</th>\n","      <th>genreShort</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>tt0003854</td>\n","      <td>dodge city trail</td>\n","      <td>0</td>\n","      <td>56</td>\n","      <td>1936</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.7</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>tt0011715</td>\n","      <td>sol de gloria</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>1928</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>tt0011801</td>\n","      <td>tötet nicht mehr</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>2019</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>tt0013274</td>\n","      <td>istoriya grazhdanskoy voyny</td>\n","      <td>0</td>\n","      <td>94</td>\n","      <td>2021</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.8</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>tt0014985</td>\n","      <td>a hero for a night</td>\n","      <td>0</td>\n","      <td>60</td>\n","      <td>1927</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.4</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>tt0015152</td>\n","      <td>mustalaishurmaaja</td>\n","      <td>0</td>\n","      <td>69</td>\n","      <td>1929</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.4</td>\n","      <td>74</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>tt0015414</td>\n","      <td>la tierra de los toros</td>\n","      <td>0</td>\n","      <td>60</td>\n","      <td>2000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5.2</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>tt0015724</td>\n","      <td>dama de noche</td>\n","      <td>0</td>\n","      <td>102</td>\n","      <td>1993</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.1</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>tt0015737</td>\n","      <td>a daughter in revolt</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>1927</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>tt0016029</td>\n","      <td>the little colonel</td>\n","      <td>0</td>\n","      <td>81</td>\n","      <td>1935</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.0</td>\n","      <td>1840</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 36 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c7aba01-2373-4a78-9390-55ff0c23c1f3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5c7aba01-2373-4a78-9390-55ff0c23c1f3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5c7aba01-2373-4a78-9390-55ff0c23c1f3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d2357b78-4346-49c4-8d21-ff7d93f04a77\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d2357b78-4346-49c4-8d21-ff7d93f04a77')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d2357b78-4346-49c4-8d21-ff7d93f04a77 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}],"source":["print(f\"Shape: {imdb_output_df.shape}\")\n","print(f\"Columns: {imdb_output_df.columns}\")\n","imdb_output_df.info()\n","imdb_output_df.head(10)"]},{"cell_type":"markdown","metadata":{"id":"23rH3LpaFIf2"},"source":["### Save IMDb table to `imdb_cleaned.csv`"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uhFjhZepllHd"},"outputs":[],"source":["# Save the cleaned dataset to a CSV file\n","imdb_output_df.to_csv('imdb_cleaned.csv', index=False)"]},{"cell_type":"markdown","metadata":{"id":"fLVNj4LuDxYk"},"source":["## The Movies Dataset\n","R. Banik. The movies dataset. https://www.kaggle.com/datasets/rounakbanik/"]},{"cell_type":"markdown","metadata":{"id":"rJDjoLbvX2eh"},"source":["### Extract list of metadata from `movies_metadata.csv`"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":683,"status":"ok","timestamp":1702023745924,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"aou8Q0H2CnAs","outputId":"0ee8a07d-306a-4665-b026-f31fd41d8490"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-a24d4fb2b86a>:3: DtypeWarning: Columns (10) have mixed types. Specify dtype option on import or set low_memory=False.\n","  movies_metadata_df = pd.read_csv(movies_metadata_file_path)\n"]}],"source":["# Open .csv files from /content/datasets/movies\n","movies_metadata_file_path = '/content/datasets/movies/movies_metadata.csv'\n","movies_metadata_df = pd.read_csv(movies_metadata_file_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":176,"status":"ok","timestamp":1702023746098,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"XD-qdcRhCNmz","outputId":"4baa31ee-d02f-45f7-afcf-ae1131cadea6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (45466, 24)\n","Columns: Index(['adult', 'belongs_to_collection', 'budget', 'genres', 'homepage', 'id',\n","       'imdb_id', 'original_language', 'original_title', 'overview',\n","       'popularity', 'poster_path', 'production_companies',\n","       'production_countries', 'release_date', 'revenue', 'runtime',\n","       'spoken_languages', 'status', 'tagline', 'title', 'video',\n","       'vote_average', 'vote_count'],\n","      dtype='object')\n"]},{"output_type":"execute_result","data":{"text/plain":["   adult                              belongs_to_collection    budget  \\\n","0  False  {'id': 10194, 'name': 'Toy Story Collection', ...  30000000   \n","1  False                                                NaN  65000000   \n","2  False  {'id': 119050, 'name': 'Grumpy Old Men Collect...         0   \n","3  False                                                NaN  16000000   \n","4  False  {'id': 96871, 'name': 'Father of the Bride Col...         0   \n","5  False                                                NaN  60000000   \n","6  False                                                NaN  58000000   \n","7  False                                                NaN         0   \n","8  False                                                NaN  35000000   \n","9  False  {'id': 645, 'name': 'James Bond Collection', '...  58000000   \n","\n","                                              genres  \\\n","0  [{'id': 16, 'name': 'Animation'}, {'id': 35, '...   \n","1  [{'id': 12, 'name': 'Adventure'}, {'id': 14, '...   \n","2  [{'id': 10749, 'name': 'Romance'}, {'id': 35, ...   \n","3  [{'id': 35, 'name': 'Comedy'}, {'id': 18, 'nam...   \n","4                     [{'id': 35, 'name': 'Comedy'}]   \n","5  [{'id': 28, 'name': 'Action'}, {'id': 80, 'nam...   \n","6  [{'id': 35, 'name': 'Comedy'}, {'id': 10749, '...   \n","7  [{'id': 28, 'name': 'Action'}, {'id': 12, 'nam...   \n","8  [{'id': 28, 'name': 'Action'}, {'id': 12, 'nam...   \n","9  [{'id': 12, 'name': 'Adventure'}, {'id': 28, '...   \n","\n","                                       homepage     id    imdb_id  \\\n","0          http://toystory.disney.com/toy-story    862  tt0114709   \n","1                                           NaN   8844  tt0113497   \n","2                                           NaN  15602  tt0113228   \n","3                                           NaN  31357  tt0114885   \n","4                                           NaN  11862  tt0113041   \n","5                                           NaN    949  tt0113277   \n","6                                           NaN  11860  tt0114319   \n","7                                           NaN  45325  tt0112302   \n","8                                           NaN   9091  tt0114576   \n","9  http://www.mgm.com/view/movie/757/Goldeneye/    710  tt0113189   \n","\n","  original_language               original_title  \\\n","0                en                    Toy Story   \n","1                en                      Jumanji   \n","2                en             Grumpier Old Men   \n","3                en            Waiting to Exhale   \n","4                en  Father of the Bride Part II   \n","5                en                         Heat   \n","6                en                      Sabrina   \n","7                en                 Tom and Huck   \n","8                en                 Sudden Death   \n","9                en                    GoldenEye   \n","\n","                                            overview  ... release_date  \\\n","0  Led by Woody, Andy's toys live happily in his ...  ...   1995-10-30   \n","1  When siblings Judy and Peter discover an encha...  ...   1995-12-15   \n","2  A family wedding reignites the ancient feud be...  ...   1995-12-22   \n","3  Cheated on, mistreated and stepped on, the wom...  ...   1995-12-22   \n","4  Just when George Banks has recovered from his ...  ...   1995-02-10   \n","5  Obsessive master thief, Neil McCauley leads a ...  ...   1995-12-15   \n","6  An ugly duckling having undergone a remarkable...  ...   1995-12-15   \n","7  A mischievous young boy, Tom Sawyer, witnesses...  ...   1995-12-22   \n","8  International action superstar Jean Claude Van...  ...   1995-12-22   \n","9  James Bond must unmask the mysterious head of ...  ...   1995-11-16   \n","\n","       revenue runtime                                   spoken_languages  \\\n","0  373554033.0    81.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n","1  262797249.0   104.0  [{'iso_639_1': 'en', 'name': 'English'}, {'iso...   \n","2          0.0   101.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n","3   81452156.0   127.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n","4   76578911.0   106.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n","5  187436818.0   170.0  [{'iso_639_1': 'en', 'name': 'English'}, {'iso...   \n","6          0.0   127.0  [{'iso_639_1': 'fr', 'name': 'Français'}, {'is...   \n","7          0.0    97.0  [{'iso_639_1': 'en', 'name': 'English'}, {'iso...   \n","8   64350171.0   106.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n","9  352194034.0   130.0  [{'iso_639_1': 'en', 'name': 'English'}, {'iso...   \n","\n","     status                                            tagline  \\\n","0  Released                                                NaN   \n","1  Released          Roll the dice and unleash the excitement!   \n","2  Released  Still Yelling. Still Fighting. Still Ready for...   \n","3  Released  Friends are the people who let you be yourself...   \n","4  Released  Just When His World Is Back To Normal... He's ...   \n","5  Released                           A Los Angeles Crime Saga   \n","6  Released  You are cordially invited to the most surprisi...   \n","7  Released                             The Original Bad Boys.   \n","8  Released                         Terror goes into overtime.   \n","9  Released               No limits. No fears. No substitutes.   \n","\n","                         title  video vote_average vote_count  \n","0                    Toy Story  False          7.7     5415.0  \n","1                      Jumanji  False          6.9     2413.0  \n","2             Grumpier Old Men  False          6.5       92.0  \n","3            Waiting to Exhale  False          6.1       34.0  \n","4  Father of the Bride Part II  False          5.7      173.0  \n","5                         Heat  False          7.7     1886.0  \n","6                      Sabrina  False          6.2      141.0  \n","7                 Tom and Huck  False          5.4       45.0  \n","8                 Sudden Death  False          5.5      174.0  \n","9                    GoldenEye  False          6.6     1194.0  \n","\n","[10 rows x 24 columns]"],"text/html":["\n","  <div id=\"df-6f845cfb-3ee2-4fd7-8218-dd526e847201\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>adult</th>\n","      <th>belongs_to_collection</th>\n","      <th>budget</th>\n","      <th>genres</th>\n","      <th>homepage</th>\n","      <th>id</th>\n","      <th>imdb_id</th>\n","      <th>original_language</th>\n","      <th>original_title</th>\n","      <th>overview</th>\n","      <th>...</th>\n","      <th>release_date</th>\n","      <th>revenue</th>\n","      <th>runtime</th>\n","      <th>spoken_languages</th>\n","      <th>status</th>\n","      <th>tagline</th>\n","      <th>title</th>\n","      <th>video</th>\n","      <th>vote_average</th>\n","      <th>vote_count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>{'id': 10194, 'name': 'Toy Story Collection', ...</td>\n","      <td>30000000</td>\n","      <td>[{'id': 16, 'name': 'Animation'}, {'id': 35, '...</td>\n","      <td>http://toystory.disney.com/toy-story</td>\n","      <td>862</td>\n","      <td>tt0114709</td>\n","      <td>en</td>\n","      <td>Toy Story</td>\n","      <td>Led by Woody, Andy's toys live happily in his ...</td>\n","      <td>...</td>\n","      <td>1995-10-30</td>\n","      <td>373554033.0</td>\n","      <td>81.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n","      <td>Released</td>\n","      <td>NaN</td>\n","      <td>Toy Story</td>\n","      <td>False</td>\n","      <td>7.7</td>\n","      <td>5415.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>65000000</td>\n","      <td>[{'id': 12, 'name': 'Adventure'}, {'id': 14, '...</td>\n","      <td>NaN</td>\n","      <td>8844</td>\n","      <td>tt0113497</td>\n","      <td>en</td>\n","      <td>Jumanji</td>\n","      <td>When siblings Judy and Peter discover an encha...</td>\n","      <td>...</td>\n","      <td>1995-12-15</td>\n","      <td>262797249.0</td>\n","      <td>104.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}, {'iso...</td>\n","      <td>Released</td>\n","      <td>Roll the dice and unleash the excitement!</td>\n","      <td>Jumanji</td>\n","      <td>False</td>\n","      <td>6.9</td>\n","      <td>2413.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>{'id': 119050, 'name': 'Grumpy Old Men Collect...</td>\n","      <td>0</td>\n","      <td>[{'id': 10749, 'name': 'Romance'}, {'id': 35, ...</td>\n","      <td>NaN</td>\n","      <td>15602</td>\n","      <td>tt0113228</td>\n","      <td>en</td>\n","      <td>Grumpier Old Men</td>\n","      <td>A family wedding reignites the ancient feud be...</td>\n","      <td>...</td>\n","      <td>1995-12-22</td>\n","      <td>0.0</td>\n","      <td>101.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n","      <td>Released</td>\n","      <td>Still Yelling. Still Fighting. Still Ready for...</td>\n","      <td>Grumpier Old Men</td>\n","      <td>False</td>\n","      <td>6.5</td>\n","      <td>92.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>16000000</td>\n","      <td>[{'id': 35, 'name': 'Comedy'}, {'id': 18, 'nam...</td>\n","      <td>NaN</td>\n","      <td>31357</td>\n","      <td>tt0114885</td>\n","      <td>en</td>\n","      <td>Waiting to Exhale</td>\n","      <td>Cheated on, mistreated and stepped on, the wom...</td>\n","      <td>...</td>\n","      <td>1995-12-22</td>\n","      <td>81452156.0</td>\n","      <td>127.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n","      <td>Released</td>\n","      <td>Friends are the people who let you be yourself...</td>\n","      <td>Waiting to Exhale</td>\n","      <td>False</td>\n","      <td>6.1</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>{'id': 96871, 'name': 'Father of the Bride Col...</td>\n","      <td>0</td>\n","      <td>[{'id': 35, 'name': 'Comedy'}]</td>\n","      <td>NaN</td>\n","      <td>11862</td>\n","      <td>tt0113041</td>\n","      <td>en</td>\n","      <td>Father of the Bride Part II</td>\n","      <td>Just when George Banks has recovered from his ...</td>\n","      <td>...</td>\n","      <td>1995-02-10</td>\n","      <td>76578911.0</td>\n","      <td>106.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n","      <td>Released</td>\n","      <td>Just When His World Is Back To Normal... He's ...</td>\n","      <td>Father of the Bride Part II</td>\n","      <td>False</td>\n","      <td>5.7</td>\n","      <td>173.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>60000000</td>\n","      <td>[{'id': 28, 'name': 'Action'}, {'id': 80, 'nam...</td>\n","      <td>NaN</td>\n","      <td>949</td>\n","      <td>tt0113277</td>\n","      <td>en</td>\n","      <td>Heat</td>\n","      <td>Obsessive master thief, Neil McCauley leads a ...</td>\n","      <td>...</td>\n","      <td>1995-12-15</td>\n","      <td>187436818.0</td>\n","      <td>170.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}, {'iso...</td>\n","      <td>Released</td>\n","      <td>A Los Angeles Crime Saga</td>\n","      <td>Heat</td>\n","      <td>False</td>\n","      <td>7.7</td>\n","      <td>1886.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>58000000</td>\n","      <td>[{'id': 35, 'name': 'Comedy'}, {'id': 10749, '...</td>\n","      <td>NaN</td>\n","      <td>11860</td>\n","      <td>tt0114319</td>\n","      <td>en</td>\n","      <td>Sabrina</td>\n","      <td>An ugly duckling having undergone a remarkable...</td>\n","      <td>...</td>\n","      <td>1995-12-15</td>\n","      <td>0.0</td>\n","      <td>127.0</td>\n","      <td>[{'iso_639_1': 'fr', 'name': 'Français'}, {'is...</td>\n","      <td>Released</td>\n","      <td>You are cordially invited to the most surprisi...</td>\n","      <td>Sabrina</td>\n","      <td>False</td>\n","      <td>6.2</td>\n","      <td>141.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>[{'id': 28, 'name': 'Action'}, {'id': 12, 'nam...</td>\n","      <td>NaN</td>\n","      <td>45325</td>\n","      <td>tt0112302</td>\n","      <td>en</td>\n","      <td>Tom and Huck</td>\n","      <td>A mischievous young boy, Tom Sawyer, witnesses...</td>\n","      <td>...</td>\n","      <td>1995-12-22</td>\n","      <td>0.0</td>\n","      <td>97.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}, {'iso...</td>\n","      <td>Released</td>\n","      <td>The Original Bad Boys.</td>\n","      <td>Tom and Huck</td>\n","      <td>False</td>\n","      <td>5.4</td>\n","      <td>45.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>35000000</td>\n","      <td>[{'id': 28, 'name': 'Action'}, {'id': 12, 'nam...</td>\n","      <td>NaN</td>\n","      <td>9091</td>\n","      <td>tt0114576</td>\n","      <td>en</td>\n","      <td>Sudden Death</td>\n","      <td>International action superstar Jean Claude Van...</td>\n","      <td>...</td>\n","      <td>1995-12-22</td>\n","      <td>64350171.0</td>\n","      <td>106.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n","      <td>Released</td>\n","      <td>Terror goes into overtime.</td>\n","      <td>Sudden Death</td>\n","      <td>False</td>\n","      <td>5.5</td>\n","      <td>174.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>False</td>\n","      <td>{'id': 645, 'name': 'James Bond Collection', '...</td>\n","      <td>58000000</td>\n","      <td>[{'id': 12, 'name': 'Adventure'}, {'id': 28, '...</td>\n","      <td>http://www.mgm.com/view/movie/757/Goldeneye/</td>\n","      <td>710</td>\n","      <td>tt0113189</td>\n","      <td>en</td>\n","      <td>GoldenEye</td>\n","      <td>James Bond must unmask the mysterious head of ...</td>\n","      <td>...</td>\n","      <td>1995-11-16</td>\n","      <td>352194034.0</td>\n","      <td>130.0</td>\n","      <td>[{'iso_639_1': 'en', 'name': 'English'}, {'iso...</td>\n","      <td>Released</td>\n","      <td>No limits. No fears. No substitutes.</td>\n","      <td>GoldenEye</td>\n","      <td>False</td>\n","      <td>6.6</td>\n","      <td>1194.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 24 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f845cfb-3ee2-4fd7-8218-dd526e847201')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f845cfb-3ee2-4fd7-8218-dd526e847201 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f845cfb-3ee2-4fd7-8218-dd526e847201');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-09de818a-198c-4a7d-a63e-64b06ee5a261\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-09de818a-198c-4a7d-a63e-64b06ee5a261')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-09de818a-198c-4a7d-a63e-64b06ee5a261 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}],"source":["# Read the dataframe\n","print(f\"Shape: {movies_metadata_df.shape}\")\n","print(f\"Columns: {movies_metadata_df.columns}\")\n","movies_metadata_df.head(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3056,"status":"ok","timestamp":1702023892980,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"NoVCwLmbGJNK","outputId":"0fd4c17e-6ad2-4201-8c99-45c13551fbe3"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-18-5c03bbde3bc7>:12: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  movies_output_df['releaseDate'] = pd.to_datetime(movies_output_df['release_date'], errors='coerce')\n"]},{"output_type":"stream","name":"stdout","text":["Production Companies Top 60:\n","WarnerBros                             1245\n","MetroGoldwynMayerMGM                   1054\n","ParamountPictures                       990\n","TwentiethCenturyFoxFilmCorporation      836\n","UniversalPictures                       827\n","ColumbiaPicturesCorporation             448\n","Canal                                   438\n","ColumbiaPictures                        431\n","RKORadioPictures                        290\n","NewLineCinema                           277\n","UnitedArtists                           277\n","WaltDisneyPictures                      263\n","FranceCinma                             253\n","TouchstonePictures                      225\n","TriStarPictures                         197\n","Mosfilm                                 187\n","MiramaxFilms                            183\n","StudioCanal                             166\n","CentreNationaldelaCinmatographieCNC     163\n","TohoCompany                             142\n","BBCFilms                                131\n","Gaumont                                 126\n","RelativityMedia                         119\n","WaltDisneyProductions                   117\n","TFFilmsProduction                       117\n","BritishBroadcastingCorporationBBC       117\n","OrionPictures                           111\n","Film                                    107\n","RegencyEnterprises                      106\n","VillageRoadshowPictures                 106\n","UniversalInternationalPicturesUI         98\n","Lionsgate                                97\n","ZweitesDeutschesFernsehenZDF             96\n","DimensionFilms                           96\n","DreamWorksSKG                            95\n","WildBunch                                93\n","FoxSearchlightPictures                   92\n","HammerFilmProductions                    90\n","AmericanInternationalPicturesAIP         88\n","RaiCinema                                87\n","WorkingTitleFilms                        86\n","ShawBrothers                             84\n","HollywoodPictures                        84\n","ChannelFourFilms                         84\n","LionsGateFilms                           84\n","SvenskFilmindustriSF                     83\n","FilmiVst                                 81\n","NordiskFilm                              79\n","CastleRockEntertainment                  78\n","TLAReleasing                             78\n","AmblinEntertainment                      76\n","MillenniumFilms                          76\n","CJEntertainment                          76\n","Cin                                      74\n","EuropaCorp                               74\n","ShchikuEiga                              73\n","TheRankOrganisation                      72\n","SummitEntertainment                      72\n","WestdeutscherRundfunkWDR                 72\n","Nikkatsu                                 72\n","Name: production_companies, dtype: int64\n","\n","Production Companies Top 10:\n","['WarnerBros', 'MetroGoldwynMayerMGM', 'ParamountPictures', 'TwentiethCenturyFoxFilmCorporation', 'UniversalPictures', 'ColumbiaPicturesCorporation', 'Canal', 'ColumbiaPictures', 'RKORadioPictures', 'NewLineCinema']\n","\n","Production Countries Top 20:\n","UnitedStatesofAmerica    20840\n","UnitedKingdom             4072\n","France                    3844\n","Germany                   2211\n","Italy                     2166\n","Canada                    1764\n","Japan                     1647\n","Spain                      963\n","Russia                     892\n","India                      827\n","HongKong                   596\n","Sweden                     578\n","Australia                  568\n","SouthKorea                 495\n","Belgium                    447\n","Finland                    383\n","Denmark                    380\n","Netherlands                375\n","China                      372\n","Mexico                     329\n","Name: production_countries, dtype: int64\n","\n","Production Countries Top 5:\n","['UnitedStatesofAmerica', 'UnitedKingdom', 'France', 'Germany', 'Italy']\n","\n"]}],"source":["# Extract appropriate columns and store in output\n","movies_metadata_columns_to_keep = ['adult', 'budget', 'genres', 'id', 'imdb_id',\n","                                   'original_language', 'production_companies',\n","                                   'production_countries', 'release_date',\n","                                   'revenue', 'runtime', 'title',\n","                                   'vote_average', 'vote_count']\n","movies_output_df = movies_metadata_df[movies_metadata_columns_to_keep]\n","\n","# *** Use same column headings as imdb_output_df ***\n","\n","# Filter out all titles which are released between 1927-08-01 and 2022-12-31\n","movies_output_df['releaseDate'] = pd.to_datetime(movies_output_df['release_date'], errors='coerce')\n","movies_output_df = movies_output_df.drop(columns='release_date')\n","start_date = '1927-08-01'\n","end_date = '2022-12-31'\n","movies_output_df = movies_output_df[\n","    (movies_output_df['releaseDate'] >= start_date)\n","    & (movies_output_df['releaseDate'] <= end_date)]\n","\n","# Extract the year and create new column\n","movies_output_df.loc[:, 'releaseYear'] = movies_output_df['releaseDate'].dt.year.astype('Int64')\n","\n","# Extract the month and create new columns\n","months = [month for month in range(1, 13)]\n","for month in months:\n","    movies_output_df.loc[:, f'releaseMonth{month:02d}'] = (movies_output_df['releaseDate'].dt.month == month).astype('Int64')\n","\n","# Convert id to 'Int64'\n","movies_output_df['id'] = pd.to_numeric(movies_output_df['id'], errors='coerce').astype('Int64')\n","\n","# Convert imdb_id column to nconst column\n","movies_output_df['tconst'] = movies_output_df['imdb_id']\n","movies_output_df = movies_output_df.drop(columns='imdb_id')\n","\n","# Convert film titles to lowercase\n","movies_output_df['primaryTitle'] = movies_output_df['title'].str.lower()\n","movies_output_df = movies_output_df.drop(columns='title')\n","\n","# Convert adult (strings) to numeric: 1 if True, 0 if False, NaN otherwise\n","movies_output_df['isAdult'] = movies_output_df['adult'].fillna(np.nan).map({'True': 1, 'False': 0}).astype('Int64')\n","movies_output_df = movies_output_df.drop(columns='adult')\n","\n","# Convert budget to int, if budget == 0, use NaN\n","movies_output_df['budget'] = pd.to_numeric(movies_output_df['budget'], errors='coerce')\n","movies_output_df['budget'] = np.where(pd.isna(movies_output_df['budget']) | movies_output_df['budget'] == 0, np.nan, movies_output_df['budget'])\n","movies_output_df['budget'] = movies_output_df['budget'].astype('Int64')\n","\n","# Convert revenue to int, if revenue == 0, use NaN\n","movies_output_df['revenue'] = movies_output_df['revenue']\n","movies_output_df['revenue'] = np.where(pd.isna(movies_output_df['revenue']) | movies_output_df['revenue'] == 0, np.nan, movies_output_df['revenue'])\n","movies_output_df['revenue'] = movies_output_df['revenue'].astype('Int64')\n","\n","# Convert original_language column into 'languageEnglish' and 'languageOther'\n","# Assign 1 if True, 0 if False, NaN otherwise\n","movies_output_df['original_language'].fillna(np.nan)\n","movies_output_df['languageEnglish'] = 0\n","movies_output_df['languageOther'] = 0\n","movies_output_df.loc[movies_output_df['original_language'] == 'en', 'languageEnglish'] = 1\n","movies_output_df.loc[movies_output_df['original_language'] != 'en', 'languageOther'] = 1\n","movies_output_df['languageEnglish'] = movies_output_df['languageEnglish'].astype('Int64')\n","movies_output_df['languageOther'] = movies_output_df['languageOther'].astype('Int64')\n","movies_output_df = movies_output_df.drop(columns='original_language')\n","\n","# Convert 'production_companies' into top 10 production companies\n","# Assign 1 if True, 0 if False, NaN otherwise\n","movies_output_df['production_companies'] = movies_output_df['production_companies'].fillna('Unknown')\n","production_companies_series = movies_output_df['production_companies'].apply(lambda x: [item['name'] for item in eval(x)] if pd.notna(x) else [])\n","production_companies_series = production_companies_series.apply(lambda lst: [re.sub(r'[^a-zA-Z]', '', company) for company in lst])\n","top_production_companies = production_companies_series.explode().value_counts().head(10).index.tolist()\n","\n","print(f\"Production Companies Top 60:\\n{production_companies_series.explode().value_counts().head(60)}\\n\")\n","print(f\"Production Companies Top 10:\\n{top_production_companies}\\n\")\n","\n","for company in top_production_companies:\n","    movies_output_df[f'productionCompany{company}'] = production_companies_series.apply(lambda x: company in x).astype('Int64')\n","movies_output_df['productionCompanyOther'] = 1 - movies_output_df[[f'productionCompany{company}' for company in top_production_companies]].max(axis=1).astype('Int64')\n","movies_output_df[[f'productionCompany{company}' for company in top_production_companies] + ['productionCompanyOther']] = movies_output_df[[f'productionCompany{company}' for company in top_production_companies] + ['productionCompanyOther']].fillna(0)\n","movies_output_df = movies_output_df.drop(columns='production_companies')\n","\n","# Convert 'production_countries' into top 5 production countries\n","# Assign 1 if True, 0 if False, NaN otherwise\n","movies_output_df['production_countries'] = movies_output_df['production_countries'].fillna('Unknown')\n","production_countries_series = movies_output_df['production_countries'].apply(lambda x: [item['name'] for item in eval(x)] if pd.notna(x) else [])\n","production_countries_series = production_countries_series.apply(lambda lst: [re.sub(r'[^a-zA-Z]', '', countries) for countries in lst])\n","top_production_countries = production_countries_series.explode().value_counts().head(5).index.tolist()\n","\n","print(f\"Production Countries Top 20:\\n{production_countries_series.explode().value_counts().head(20)}\\n\")\n","print(f\"Production Countries Top 5:\\n{top_production_countries}\\n\")\n","\n","for country in top_production_countries:\n","    movies_output_df[f'productionCountry{country}'] = production_countries_series.apply(lambda x: country in x).astype('Int64')\n","movies_output_df['productionCountryOther'] = 1 - movies_output_df[[f'productionCountry{country}' for country in top_production_countries]].max(axis=1).astype('Int64')\n","movies_output_df[[f'productionCountry{country}' for country in top_production_countries] + ['productionCountryOther']] = movies_output_df[[f'productionCountry{country}' for country in top_production_countries] + ['productionCountryOther']].fillna(0)\n","movies_output_df = movies_output_df.drop(columns='production_countries')\n","\n","# Convert runtime to integers\n","movies_output_df['runtimeMinutes'] = pd.to_numeric(movies_output_df['runtime'], errors='coerce')\n","movies_output_df['runtimeMinutes'] = np.where(movies_output_df['runtimeMinutes'] == 0, np.nan, movies_output_df['runtimeMinutes'])\n","movies_output_df['runtimeMinutes'] = movies_output_df['runtimeMinutes'].astype('Int64')\n","movies_output_df = movies_output_df.drop(columns='runtime')\n","\n","# Convert vote_average\n","movies_output_df['averageRating'] = pd.to_numeric(movies_output_df['vote_average'], errors='coerce')\n","movies_output_df['averageRating'] = np.where(pd.isna(movies_output_df['averageRating']) | movies_output_df['averageRating'] == 0, np.nan, movies_output_df['averageRating'])\n","movies_output_df['averageRating'] = movies_output_df['averageRating'].astype('Float64')\n","movies_output_df = movies_output_df.drop(columns='vote_average')\n","\n","# Convert vote_count to integers\n","movies_output_df['numVotes'] = movies_output_df['vote_count']\n","movies_output_df['numVotes'] = np.where(pd.isna(movies_output_df['numVotes']) | movies_output_df['numVotes'] == 0, np.nan, movies_output_df['numVotes'])\n","movies_output_df['numVotes'] = movies_output_df['numVotes'].astype('Int64')\n","\n","movies_output_df = movies_output_df.drop(columns='vote_count')\n","\n","# Rearrange columns so 'nconst' and 'primaryTitle' are at the beginning\n","movies_output_df = movies_output_df[['tconst', 'primaryTitle', 'id', 'releaseDate', 'releaseYear',\n","                                     *[f'releaseMonth{f\"{month:02d}\"}' for month in months],\n","                                     'isAdult', 'languageEnglish', 'languageOther', 'budget', 'revenue', 'runtimeMinutes',\n","                                     *[f'productionCompany{company}' for company in top_production_companies], 'productionCompanyOther',\n","                                     *[f'productionCountry{country}' for country in top_production_countries], 'productionCountryOther',\n","                                     'averageRating', 'numVotes']]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":175,"status":"ok","timestamp":1702023903935,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"XSyS94mzSQNN","outputId":"bf374338-6187-486c-acb4-ebbfe5eedb38"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (44767, 42)\n","Columns: Index(['tconst', 'primaryTitle', 'id', 'releaseDate', 'releaseYear',\n","       'releaseMonth01', 'releaseMonth02', 'releaseMonth03', 'releaseMonth04',\n","       'releaseMonth05', 'releaseMonth06', 'releaseMonth07', 'releaseMonth08',\n","       'releaseMonth09', 'releaseMonth10', 'releaseMonth11', 'releaseMonth12',\n","       'isAdult', 'languageEnglish', 'languageOther', 'budget', 'revenue',\n","       'runtimeMinutes', 'productionCompanyWarnerBros',\n","       'productionCompanyMetroGoldwynMayerMGM',\n","       'productionCompanyParamountPictures',\n","       'productionCompanyTwentiethCenturyFoxFilmCorporation',\n","       'productionCompanyUniversalPictures',\n","       'productionCompanyColumbiaPicturesCorporation',\n","       'productionCompanyCanal', 'productionCompanyColumbiaPictures',\n","       'productionCompanyRKORadioPictures', 'productionCompanyNewLineCinema',\n","       'productionCompanyOther', 'productionCountryUnitedStatesofAmerica',\n","       'productionCountryUnitedKingdom', 'productionCountryFrance',\n","       'productionCountryGermany', 'productionCountryItaly',\n","       'productionCountryOther', 'averageRating', 'numVotes'],\n","      dtype='object')\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 44767 entries, 0 to 45465\n","Data columns (total 42 columns):\n"," #   Column                                               Non-Null Count  Dtype         \n","---  ------                                               --------------  -----         \n"," 0   tconst                                               44753 non-null  object        \n"," 1   primaryTitle                                         44767 non-null  object        \n"," 2   id                                                   44767 non-null  Int64         \n"," 3   releaseDate                                          44767 non-null  datetime64[ns]\n"," 4   releaseYear                                          44767 non-null  Int64         \n"," 5   releaseMonth01                                       44767 non-null  Int64         \n"," 6   releaseMonth02                                       44767 non-null  Int64         \n"," 7   releaseMonth03                                       44767 non-null  Int64         \n"," 8   releaseMonth04                                       44767 non-null  Int64         \n"," 9   releaseMonth05                                       44767 non-null  Int64         \n"," 10  releaseMonth06                                       44767 non-null  Int64         \n"," 11  releaseMonth07                                       44767 non-null  Int64         \n"," 12  releaseMonth08                                       44767 non-null  Int64         \n"," 13  releaseMonth09                                       44767 non-null  Int64         \n"," 14  releaseMonth10                                       44767 non-null  Int64         \n"," 15  releaseMonth11                                       44767 non-null  Int64         \n"," 16  releaseMonth12                                       44767 non-null  Int64         \n"," 17  isAdult                                              44767 non-null  Int64         \n"," 18  languageEnglish                                      44767 non-null  Int64         \n"," 19  languageOther                                        44767 non-null  Int64         \n"," 20  budget                                               8849 non-null   Int64         \n"," 21  revenue                                              7390 non-null   Int64         \n"," 22  runtimeMinutes                                       42991 non-null  Int64         \n"," 23  productionCompanyWarnerBros                          44767 non-null  Int64         \n"," 24  productionCompanyMetroGoldwynMayerMGM                44767 non-null  Int64         \n"," 25  productionCompanyParamountPictures                   44767 non-null  Int64         \n"," 26  productionCompanyTwentiethCenturyFoxFilmCorporation  44767 non-null  Int64         \n"," 27  productionCompanyUniversalPictures                   44767 non-null  Int64         \n"," 28  productionCompanyColumbiaPicturesCorporation         44767 non-null  Int64         \n"," 29  productionCompanyCanal                               44767 non-null  Int64         \n"," 30  productionCompanyColumbiaPictures                    44767 non-null  Int64         \n"," 31  productionCompanyRKORadioPictures                    44767 non-null  Int64         \n"," 32  productionCompanyNewLineCinema                       44767 non-null  Int64         \n"," 33  productionCompanyOther                               44767 non-null  Int64         \n"," 34  productionCountryUnitedStatesofAmerica               44767 non-null  Int64         \n"," 35  productionCountryUnitedKingdom                       44767 non-null  Int64         \n"," 36  productionCountryFrance                              44767 non-null  Int64         \n"," 37  productionCountryGermany                             44767 non-null  Int64         \n"," 38  productionCountryItaly                               44767 non-null  Int64         \n"," 39  productionCountryOther                               44767 non-null  Int64         \n"," 40  averageRating                                        41870 non-null  Float64       \n"," 41  numVotes                                             41967 non-null  Int64         \n","dtypes: Float64(1), Int64(38), datetime64[ns](1), object(2)\n","memory usage: 16.4+ MB\n"]},{"output_type":"execute_result","data":{"text/plain":["      tconst                 primaryTitle     id releaseDate  releaseYear  \\\n","0  tt0114709                    toy story    862  1995-10-30         1995   \n","1  tt0113497                      jumanji   8844  1995-12-15         1995   \n","2  tt0113228             grumpier old men  15602  1995-12-22         1995   \n","3  tt0114885            waiting to exhale  31357  1995-12-22         1995   \n","4  tt0113041  father of the bride part ii  11862  1995-02-10         1995   \n","5  tt0113277                         heat    949  1995-12-15         1995   \n","6  tt0114319                      sabrina  11860  1995-12-15         1995   \n","7  tt0112302                 tom and huck  45325  1995-12-22         1995   \n","8  tt0114576                 sudden death   9091  1995-12-22         1995   \n","9  tt0113189                    goldeneye    710  1995-11-16         1995   \n","\n","   releaseMonth01  releaseMonth02  releaseMonth03  releaseMonth04  \\\n","0               0               0               0               0   \n","1               0               0               0               0   \n","2               0               0               0               0   \n","3               0               0               0               0   \n","4               0               1               0               0   \n","5               0               0               0               0   \n","6               0               0               0               0   \n","7               0               0               0               0   \n","8               0               0               0               0   \n","9               0               0               0               0   \n","\n","   releaseMonth05  ...  productionCompanyNewLineCinema  \\\n","0               0  ...                               0   \n","1               0  ...                               0   \n","2               0  ...                               0   \n","3               0  ...                               0   \n","4               0  ...                               0   \n","5               0  ...                               0   \n","6               0  ...                               0   \n","7               0  ...                               0   \n","8               0  ...                               0   \n","9               0  ...                               0   \n","\n","   productionCompanyOther  productionCountryUnitedStatesofAmerica  \\\n","0                       1                                       1   \n","1                       1                                       1   \n","2                       0                                       1   \n","3                       0                                       1   \n","4                       1                                       1   \n","5                       0                                       1   \n","6                       0                                       1   \n","7                       1                                       1   \n","8                       0                                       1   \n","9                       1                                       1   \n","\n","   productionCountryUnitedKingdom  productionCountryFrance  \\\n","0                               0                        0   \n","1                               0                        0   \n","2                               0                        0   \n","3                               0                        0   \n","4                               0                        0   \n","5                               0                        0   \n","6                               0                        0   \n","7                               0                        0   \n","8                               0                        0   \n","9                               1                        0   \n","\n","   productionCountryGermany  productionCountryItaly  productionCountryOther  \\\n","0                         0                       0                       0   \n","1                         0                       0                       0   \n","2                         0                       0                       0   \n","3                         0                       0                       0   \n","4                         0                       0                       0   \n","5                         0                       0                       0   \n","6                         1                       0                       0   \n","7                         0                       0                       0   \n","8                         0                       0                       0   \n","9                         0                       0                       0   \n","\n","   averageRating  numVotes  \n","0            7.7      5415  \n","1            6.9      2413  \n","2            6.5        92  \n","3            6.1        34  \n","4            5.7       173  \n","5            7.7      1886  \n","6            6.2       141  \n","7            5.4        45  \n","8            5.5       174  \n","9            6.6      1194  \n","\n","[10 rows x 42 columns]"],"text/html":["\n","  <div id=\"df-f84ca762-37d6-4db9-b539-c81eeabbe99e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tconst</th>\n","      <th>primaryTitle</th>\n","      <th>id</th>\n","      <th>releaseDate</th>\n","      <th>releaseYear</th>\n","      <th>releaseMonth01</th>\n","      <th>releaseMonth02</th>\n","      <th>releaseMonth03</th>\n","      <th>releaseMonth04</th>\n","      <th>releaseMonth05</th>\n","      <th>...</th>\n","      <th>productionCompanyNewLineCinema</th>\n","      <th>productionCompanyOther</th>\n","      <th>productionCountryUnitedStatesofAmerica</th>\n","      <th>productionCountryUnitedKingdom</th>\n","      <th>productionCountryFrance</th>\n","      <th>productionCountryGermany</th>\n","      <th>productionCountryItaly</th>\n","      <th>productionCountryOther</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>tt0114709</td>\n","      <td>toy story</td>\n","      <td>862</td>\n","      <td>1995-10-30</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7</td>\n","      <td>5415</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>tt0113497</td>\n","      <td>jumanji</td>\n","      <td>8844</td>\n","      <td>1995-12-15</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.9</td>\n","      <td>2413</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>tt0113228</td>\n","      <td>grumpier old men</td>\n","      <td>15602</td>\n","      <td>1995-12-22</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.5</td>\n","      <td>92</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>tt0114885</td>\n","      <td>waiting to exhale</td>\n","      <td>31357</td>\n","      <td>1995-12-22</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.1</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>tt0113041</td>\n","      <td>father of the bride part ii</td>\n","      <td>11862</td>\n","      <td>1995-02-10</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5.7</td>\n","      <td>173</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>tt0113277</td>\n","      <td>heat</td>\n","      <td>949</td>\n","      <td>1995-12-15</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7</td>\n","      <td>1886</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>tt0114319</td>\n","      <td>sabrina</td>\n","      <td>11860</td>\n","      <td>1995-12-15</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.2</td>\n","      <td>141</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>tt0112302</td>\n","      <td>tom and huck</td>\n","      <td>45325</td>\n","      <td>1995-12-22</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5.4</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>tt0114576</td>\n","      <td>sudden death</td>\n","      <td>9091</td>\n","      <td>1995-12-22</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5.5</td>\n","      <td>174</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>tt0113189</td>\n","      <td>goldeneye</td>\n","      <td>710</td>\n","      <td>1995-11-16</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>6.6</td>\n","      <td>1194</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 42 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f84ca762-37d6-4db9-b539-c81eeabbe99e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f84ca762-37d6-4db9-b539-c81eeabbe99e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f84ca762-37d6-4db9-b539-c81eeabbe99e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fa051cf0-d719-4af5-a56e-453ac73b4750\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fa051cf0-d719-4af5-a56e-453ac73b4750')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fa051cf0-d719-4af5-a56e-453ac73b4750 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}],"source":["print(f\"Shape: {movies_output_df.shape}\")\n","print(f\"Columns: {movies_output_df.columns}\")\n","movies_output_df.info()\n","movies_output_df.head(10)"]},{"cell_type":"markdown","metadata":{"id":"I9RpTutrYAtb"},"source":["### Extract list of cast/crew from `credits.csv`"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oPxcCL8uYRUG"},"outputs":[],"source":["# Open .csv files from /content/datasets/movies\n","movies_credits_file_path = '/content/datasets/movies/credits.csv'\n","movies_credits_df = pd.read_csv(movies_credits_file_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":398},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1702023910773,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"BLM6MybSYX0R","outputId":"520689ac-7239-4bee-d77f-cf79714c2796"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (45476, 3)\n","Columns: Index(['cast', 'crew', 'id'], dtype='object')\n"]},{"output_type":"execute_result","data":{"text/plain":["                                                cast  \\\n","0  [{'cast_id': 14, 'character': 'Woody (voice)',...   \n","1  [{'cast_id': 1, 'character': 'Alan Parrish', '...   \n","2  [{'cast_id': 2, 'character': 'Max Goldman', 'c...   \n","3  [{'cast_id': 1, 'character': \"Savannah 'Vannah...   \n","4  [{'cast_id': 1, 'character': 'George Banks', '...   \n","5  [{'cast_id': 25, 'character': 'Lt. Vincent Han...   \n","6  [{'cast_id': 1, 'character': 'Linus Larrabee',...   \n","7  [{'cast_id': 2, 'character': 'Tom Sawyer', 'cr...   \n","8  [{'cast_id': 1, 'character': 'Darren Francis T...   \n","9  [{'cast_id': 1, 'character': 'James Bond', 'cr...   \n","\n","                                                crew     id  \n","0  [{'credit_id': '52fe4284c3a36847f8024f49', 'de...    862  \n","1  [{'credit_id': '52fe44bfc3a36847f80a7cd1', 'de...   8844  \n","2  [{'credit_id': '52fe466a9251416c75077a89', 'de...  15602  \n","3  [{'credit_id': '52fe44779251416c91011acb', 'de...  31357  \n","4  [{'credit_id': '52fe44959251416c75039ed7', 'de...  11862  \n","5  [{'credit_id': '52fe4292c3a36847f802916d', 'de...    949  \n","6  [{'credit_id': '52fe44959251416c75039da9', 'de...  11860  \n","7  [{'credit_id': '52fe46bdc3a36847f810f797', 'de...  45325  \n","8  [{'credit_id': '52fe44dbc3a36847f80ae0f1', 'de...   9091  \n","9  [{'credit_id': '52fe426ec3a36847f801e14b', 'de...    710  "],"text/html":["\n","  <div id=\"df-5b63f16a-f6cc-4a81-8e3e-bcec2e9d09cf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cast</th>\n","      <th>crew</th>\n","      <th>id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[{'cast_id': 14, 'character': 'Woody (voice)',...</td>\n","      <td>[{'credit_id': '52fe4284c3a36847f8024f49', 'de...</td>\n","      <td>862</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[{'cast_id': 1, 'character': 'Alan Parrish', '...</td>\n","      <td>[{'credit_id': '52fe44bfc3a36847f80a7cd1', 'de...</td>\n","      <td>8844</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>[{'cast_id': 2, 'character': 'Max Goldman', 'c...</td>\n","      <td>[{'credit_id': '52fe466a9251416c75077a89', 'de...</td>\n","      <td>15602</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>[{'cast_id': 1, 'character': \"Savannah 'Vannah...</td>\n","      <td>[{'credit_id': '52fe44779251416c91011acb', 'de...</td>\n","      <td>31357</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>[{'cast_id': 1, 'character': 'George Banks', '...</td>\n","      <td>[{'credit_id': '52fe44959251416c75039ed7', 'de...</td>\n","      <td>11862</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>[{'cast_id': 25, 'character': 'Lt. Vincent Han...</td>\n","      <td>[{'credit_id': '52fe4292c3a36847f802916d', 'de...</td>\n","      <td>949</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>[{'cast_id': 1, 'character': 'Linus Larrabee',...</td>\n","      <td>[{'credit_id': '52fe44959251416c75039da9', 'de...</td>\n","      <td>11860</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>[{'cast_id': 2, 'character': 'Tom Sawyer', 'cr...</td>\n","      <td>[{'credit_id': '52fe46bdc3a36847f810f797', 'de...</td>\n","      <td>45325</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>[{'cast_id': 1, 'character': 'Darren Francis T...</td>\n","      <td>[{'credit_id': '52fe44dbc3a36847f80ae0f1', 'de...</td>\n","      <td>9091</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>[{'cast_id': 1, 'character': 'James Bond', 'cr...</td>\n","      <td>[{'credit_id': '52fe426ec3a36847f801e14b', 'de...</td>\n","      <td>710</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b63f16a-f6cc-4a81-8e3e-bcec2e9d09cf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5b63f16a-f6cc-4a81-8e3e-bcec2e9d09cf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5b63f16a-f6cc-4a81-8e3e-bcec2e9d09cf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2281d2fc-779d-4016-afa0-67d136cdae6a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2281d2fc-779d-4016-afa0-67d136cdae6a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2281d2fc-779d-4016-afa0-67d136cdae6a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}],"source":["# Read the dataframe\n","print(f\"Shape: {movies_credits_df.shape}\")\n","print(f\"Columns: {movies_credits_df.columns}\")\n","movies_credits_df.head(10)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A7XJjGlilSLk"},"outputs":[],"source":["if 'cast' not in movies_output_df.columns or 'crew' not in movies_output_df.columns:\n","    movies_output_df = pd.merge(movies_output_df, movies_credits_df[['id', 'cast', 'crew']], on='id', how='left')\n","\n","# Convert json/String to python dictionaries\n","movies_output_df['cast'] = movies_output_df['cast'].apply(lambda x: ast.literal_eval(x) if pd.notna(x) else [])\n","movies_output_df['crew'] = movies_output_df['crew'].apply(lambda x: ast.literal_eval(x) if pd.notna(x) else [])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9mf-vd-9oh0P"},"outputs":[],"source":["# Extract ids of:\n","#   first three actors,\n","#   first three actresses,\n","#   first director, and\n","#   first writer\n","\n","def get_actor_ids(cast_list, i=1):\n","    '''\n","    Find the first i number of actors (where gender == 2)\n","    Parameters:\n","        cast_list (list): List of cast members\n","        i (int): Number of actors to find\n","    Returns:\n","        id_list (list): List of actor ids\n","    '''\n","    id_list = []\n","    for item in cast_list:\n","        if item['gender'] == 2:\n","            id_list.append(item['id'])\n","            if len(id_list) == i: break\n","    return id_list\n","\n","def get_actress_ids(cast_list, i=1):\n","    '''\n","    Find the first i number of actresses (where gender == 1)\n","    Parameters:\n","        cast_list (list): List of cast members\n","        i (int): Number of actresses to find\n","    Returns:\n","        id_list (list): List of actress ids\n","    '''\n","    id_list = []\n","    for item in cast_list:\n","        if item['gender'] == 1:\n","            id_list.append(item['id'])\n","            if len(id_list) == i: break\n","    return id_list\n","\n","def get_director_id(crew_list):\n","    '''\n","    Find the id of the director.\n","    Parameters:\n","        crew_list (list): List of crew\n","    Returns:\n","        director_id (int): Id of director (None if director is not found)\n","    '''\n","    for item in crew_list:\n","        if item['job'] == 'Director':\n","            return item['id']\n","    return None\n","\n","def get_writer_id(crew_list):\n","    '''\n","    Find the ids of the writers.\n","    Parameters:\n","        crew_list (list): List of crew\n","    Returns:\n","        writer_ids (list): List of writer ids\n","    '''\n","    for item in crew_list:\n","        if item['job'] == 'Screenplay':\n","            return item['id']\n","    return None\n","\n","# Iterate through each row\n","actor_count = 3\n","actress_count = 3\n","\n","for index, row in movies_output_df.iterrows():\n","    list_actors = get_actor_ids(row['cast'], actor_count)\n","    list_actresses = get_actress_ids(row['cast'], actress_count)\n","    director_id = get_director_id(row['crew'])\n","    writer_id = get_writer_id(row['crew'])\n","    for i in range(actor_count):\n","        if i + 1 > len(list_actors):\n","            movies_output_df.at[index, f'actor{i+1}Id'] = np.nan\n","        else:\n","            movies_output_df.at[index, f'actor{i+1}Id'] = list_actors[i]\n","    for i in range(actress_count):\n","        if i + 1 > len(list_actresses):\n","            movies_output_df.at[index, f'actress{i+1}Id'] = np.nan\n","        else:\n","          movies_output_df.at[index, f'actress{i+1}Id'] = list_actresses[i]\n","    movies_output_df.at[index, 'directorId'] = director_id\n","    movies_output_df.at[index, 'writerId'] = writer_id\n","\n","# Convert ids to integers\n","for i in range(actor_count):\n","    movies_output_df[f'actor{i+1}Id'] = movies_output_df[f'actor{i+1}Id'].astype('Int64')\n","for i in range(actress_count):\n","    movies_output_df[f'actress{i+1}Id'] = movies_output_df[f'actress{i+1}Id'].astype('Int64')\n","movies_output_df[f'directorId'] = movies_output_df[f'directorId'].astype('Int64')\n","movies_output_df[f'writerId'] = movies_output_df[f'writerId'].astype('Int64')\n","\n","movies_output_df = movies_output_df.drop(columns=['cast', 'crew'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1702023964896,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"lUiPXfg-mCta","outputId":"51cfd441-a480-4f40-f3b6-a7c8492ec318"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (44841, 50)\n","Columns: Index(['tconst', 'primaryTitle', 'id', 'releaseDate', 'releaseYear',\n","       'releaseMonth01', 'releaseMonth02', 'releaseMonth03', 'releaseMonth04',\n","       'releaseMonth05', 'releaseMonth06', 'releaseMonth07', 'releaseMonth08',\n","       'releaseMonth09', 'releaseMonth10', 'releaseMonth11', 'releaseMonth12',\n","       'isAdult', 'languageEnglish', 'languageOther', 'budget', 'revenue',\n","       'runtimeMinutes', 'productionCompanyWarnerBros',\n","       'productionCompanyMetroGoldwynMayerMGM',\n","       'productionCompanyParamountPictures',\n","       'productionCompanyTwentiethCenturyFoxFilmCorporation',\n","       'productionCompanyUniversalPictures',\n","       'productionCompanyColumbiaPicturesCorporation',\n","       'productionCompanyCanal', 'productionCompanyColumbiaPictures',\n","       'productionCompanyRKORadioPictures', 'productionCompanyNewLineCinema',\n","       'productionCompanyOther', 'productionCountryUnitedStatesofAmerica',\n","       'productionCountryUnitedKingdom', 'productionCountryFrance',\n","       'productionCountryGermany', 'productionCountryItaly',\n","       'productionCountryOther', 'averageRating', 'numVotes', 'actor1Id',\n","       'actor2Id', 'actor3Id', 'actress1Id', 'actress2Id', 'actress3Id',\n","       'directorId', 'writerId'],\n","      dtype='object')\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 44841 entries, 0 to 44840\n","Data columns (total 50 columns):\n"," #   Column                                               Non-Null Count  Dtype         \n","---  ------                                               --------------  -----         \n"," 0   tconst                                               44827 non-null  object        \n"," 1   primaryTitle                                         44841 non-null  object        \n"," 2   id                                                   44841 non-null  Int64         \n"," 3   releaseDate                                          44841 non-null  datetime64[ns]\n"," 4   releaseYear                                          44841 non-null  Int64         \n"," 5   releaseMonth01                                       44841 non-null  Int64         \n"," 6   releaseMonth02                                       44841 non-null  Int64         \n"," 7   releaseMonth03                                       44841 non-null  Int64         \n"," 8   releaseMonth04                                       44841 non-null  Int64         \n"," 9   releaseMonth05                                       44841 non-null  Int64         \n"," 10  releaseMonth06                                       44841 non-null  Int64         \n"," 11  releaseMonth07                                       44841 non-null  Int64         \n"," 12  releaseMonth08                                       44841 non-null  Int64         \n"," 13  releaseMonth09                                       44841 non-null  Int64         \n"," 14  releaseMonth10                                       44841 non-null  Int64         \n"," 15  releaseMonth11                                       44841 non-null  Int64         \n"," 16  releaseMonth12                                       44841 non-null  Int64         \n"," 17  isAdult                                              44841 non-null  Int64         \n"," 18  languageEnglish                                      44841 non-null  Int64         \n"," 19  languageOther                                        44841 non-null  Int64         \n"," 20  budget                                               8871 non-null   Int64         \n"," 21  revenue                                              7410 non-null   Int64         \n"," 22  runtimeMinutes                                       43064 non-null  Int64         \n"," 23  productionCompanyWarnerBros                          44841 non-null  Int64         \n"," 24  productionCompanyMetroGoldwynMayerMGM                44841 non-null  Int64         \n"," 25  productionCompanyParamountPictures                   44841 non-null  Int64         \n"," 26  productionCompanyTwentiethCenturyFoxFilmCorporation  44841 non-null  Int64         \n"," 27  productionCompanyUniversalPictures                   44841 non-null  Int64         \n"," 28  productionCompanyColumbiaPicturesCorporation         44841 non-null  Int64         \n"," 29  productionCompanyCanal                               44841 non-null  Int64         \n"," 30  productionCompanyColumbiaPictures                    44841 non-null  Int64         \n"," 31  productionCompanyRKORadioPictures                    44841 non-null  Int64         \n"," 32  productionCompanyNewLineCinema                       44841 non-null  Int64         \n"," 33  productionCompanyOther                               44841 non-null  Int64         \n"," 34  productionCountryUnitedStatesofAmerica               44841 non-null  Int64         \n"," 35  productionCountryUnitedKingdom                       44841 non-null  Int64         \n"," 36  productionCountryFrance                              44841 non-null  Int64         \n"," 37  productionCountryGermany                             44841 non-null  Int64         \n"," 38  productionCountryItaly                               44841 non-null  Int64         \n"," 39  productionCountryOther                               44841 non-null  Int64         \n"," 40  averageRating                                        41937 non-null  Float64       \n"," 41  numVotes                                             42034 non-null  Int64         \n"," 42  actor1Id                                             38575 non-null  Int64         \n"," 43  actor2Id                                             33513 non-null  Int64         \n"," 44  actor3Id                                             28493 non-null  Int64         \n"," 45  actress1Id                                           33853 non-null  Int64         \n"," 46  actress2Id                                           24652 non-null  Int64         \n"," 47  actress3Id                                           16602 non-null  Int64         \n"," 48  directorId                                           44019 non-null  Int64         \n"," 49  writerId                                             15671 non-null  Int64         \n","dtypes: Float64(1), Int64(46), datetime64[ns](1), object(2)\n","memory usage: 20.5+ MB\n","None\n"]},{"output_type":"execute_result","data":{"text/plain":["      tconst                 primaryTitle     id releaseDate  releaseYear  \\\n","0  tt0114709                    toy story    862  1995-10-30         1995   \n","1  tt0113497                      jumanji   8844  1995-12-15         1995   \n","2  tt0113228             grumpier old men  15602  1995-12-22         1995   \n","3  tt0114885            waiting to exhale  31357  1995-12-22         1995   \n","4  tt0113041  father of the bride part ii  11862  1995-02-10         1995   \n","5  tt0113277                         heat    949  1995-12-15         1995   \n","6  tt0114319                      sabrina  11860  1995-12-15         1995   \n","7  tt0112302                 tom and huck  45325  1995-12-22         1995   \n","8  tt0114576                 sudden death   9091  1995-12-22         1995   \n","9  tt0113189                    goldeneye    710  1995-11-16         1995   \n","\n","   releaseMonth01  releaseMonth02  releaseMonth03  releaseMonth04  \\\n","0               0               0               0               0   \n","1               0               0               0               0   \n","2               0               0               0               0   \n","3               0               0               0               0   \n","4               0               1               0               0   \n","5               0               0               0               0   \n","6               0               0               0               0   \n","7               0               0               0               0   \n","8               0               0               0               0   \n","9               0               0               0               0   \n","\n","   releaseMonth05  ...  averageRating  numVotes  actor1Id  actor2Id  actor3Id  \\\n","0               0  ...            7.7      5415        31     12898      7167   \n","1               0  ...            6.9      2413      2157      8537     58563   \n","2               0  ...            6.5        92      6837      3151     16523   \n","3               0  ...            6.1        34     66804       352     87118   \n","4               0  ...            5.7       173     67773       519     59222   \n","5               0  ...            7.7      1886      1158       380      5576   \n","6               0  ...            6.2       141         3     17141      8937   \n","7               0  ...            5.4        45     53283     51214      8316   \n","8               0  ...            5.5       174     15111      6280      8656   \n","9               0  ...            6.6      1194       517        48     10671   \n","\n","   actress1Id  actress2Id  actress3Id  directorId  writerId  \n","0        8873       12133       12903        7879     12891  \n","1         205        5149       10739        4945       876  \n","2       13567       16757         589       26502      <NA>  \n","3        8851        9780       18284        2178      5144  \n","4        3092       70696       54348       56106     17698  \n","5        6200       15851       15852         638       638  \n","6       15887        4301       12957        2226     70846  \n","7       38581       87007      102313       18357      2075  \n","8       79088        <NA>        <NA>       37710     53300  \n","9       10695       10696        5309       10702     10704  \n","\n","[10 rows x 50 columns]"],"text/html":["\n","  <div id=\"df-d3ec74aa-ba02-44b6-961d-24cb58903082\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tconst</th>\n","      <th>primaryTitle</th>\n","      <th>id</th>\n","      <th>releaseDate</th>\n","      <th>releaseYear</th>\n","      <th>releaseMonth01</th>\n","      <th>releaseMonth02</th>\n","      <th>releaseMonth03</th>\n","      <th>releaseMonth04</th>\n","      <th>releaseMonth05</th>\n","      <th>...</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","      <th>actor1Id</th>\n","      <th>actor2Id</th>\n","      <th>actor3Id</th>\n","      <th>actress1Id</th>\n","      <th>actress2Id</th>\n","      <th>actress3Id</th>\n","      <th>directorId</th>\n","      <th>writerId</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>tt0114709</td>\n","      <td>toy story</td>\n","      <td>862</td>\n","      <td>1995-10-30</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>7.7</td>\n","      <td>5415</td>\n","      <td>31</td>\n","      <td>12898</td>\n","      <td>7167</td>\n","      <td>8873</td>\n","      <td>12133</td>\n","      <td>12903</td>\n","      <td>7879</td>\n","      <td>12891</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>tt0113497</td>\n","      <td>jumanji</td>\n","      <td>8844</td>\n","      <td>1995-12-15</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.9</td>\n","      <td>2413</td>\n","      <td>2157</td>\n","      <td>8537</td>\n","      <td>58563</td>\n","      <td>205</td>\n","      <td>5149</td>\n","      <td>10739</td>\n","      <td>4945</td>\n","      <td>876</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>tt0113228</td>\n","      <td>grumpier old men</td>\n","      <td>15602</td>\n","      <td>1995-12-22</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.5</td>\n","      <td>92</td>\n","      <td>6837</td>\n","      <td>3151</td>\n","      <td>16523</td>\n","      <td>13567</td>\n","      <td>16757</td>\n","      <td>589</td>\n","      <td>26502</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>tt0114885</td>\n","      <td>waiting to exhale</td>\n","      <td>31357</td>\n","      <td>1995-12-22</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.1</td>\n","      <td>34</td>\n","      <td>66804</td>\n","      <td>352</td>\n","      <td>87118</td>\n","      <td>8851</td>\n","      <td>9780</td>\n","      <td>18284</td>\n","      <td>2178</td>\n","      <td>5144</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>tt0113041</td>\n","      <td>father of the bride part ii</td>\n","      <td>11862</td>\n","      <td>1995-02-10</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>5.7</td>\n","      <td>173</td>\n","      <td>67773</td>\n","      <td>519</td>\n","      <td>59222</td>\n","      <td>3092</td>\n","      <td>70696</td>\n","      <td>54348</td>\n","      <td>56106</td>\n","      <td>17698</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>tt0113277</td>\n","      <td>heat</td>\n","      <td>949</td>\n","      <td>1995-12-15</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>7.7</td>\n","      <td>1886</td>\n","      <td>1158</td>\n","      <td>380</td>\n","      <td>5576</td>\n","      <td>6200</td>\n","      <td>15851</td>\n","      <td>15852</td>\n","      <td>638</td>\n","      <td>638</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>tt0114319</td>\n","      <td>sabrina</td>\n","      <td>11860</td>\n","      <td>1995-12-15</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.2</td>\n","      <td>141</td>\n","      <td>3</td>\n","      <td>17141</td>\n","      <td>8937</td>\n","      <td>15887</td>\n","      <td>4301</td>\n","      <td>12957</td>\n","      <td>2226</td>\n","      <td>70846</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>tt0112302</td>\n","      <td>tom and huck</td>\n","      <td>45325</td>\n","      <td>1995-12-22</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>5.4</td>\n","      <td>45</td>\n","      <td>53283</td>\n","      <td>51214</td>\n","      <td>8316</td>\n","      <td>38581</td>\n","      <td>87007</td>\n","      <td>102313</td>\n","      <td>18357</td>\n","      <td>2075</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>tt0114576</td>\n","      <td>sudden death</td>\n","      <td>9091</td>\n","      <td>1995-12-22</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>5.5</td>\n","      <td>174</td>\n","      <td>15111</td>\n","      <td>6280</td>\n","      <td>8656</td>\n","      <td>79088</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>37710</td>\n","      <td>53300</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>tt0113189</td>\n","      <td>goldeneye</td>\n","      <td>710</td>\n","      <td>1995-11-16</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.6</td>\n","      <td>1194</td>\n","      <td>517</td>\n","      <td>48</td>\n","      <td>10671</td>\n","      <td>10695</td>\n","      <td>10696</td>\n","      <td>5309</td>\n","      <td>10702</td>\n","      <td>10704</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 50 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3ec74aa-ba02-44b6-961d-24cb58903082')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d3ec74aa-ba02-44b6-961d-24cb58903082 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d3ec74aa-ba02-44b6-961d-24cb58903082');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff6045de-e143-460a-83ae-f819792025a0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff6045de-e143-460a-83ae-f819792025a0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff6045de-e143-460a-83ae-f819792025a0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}],"source":["print(f\"Shape: {movies_output_df.shape}\")\n","print(f\"Columns: {movies_output_df.columns}\")\n","print(movies_output_df.info())\n","movies_output_df.head(10)"]},{"cell_type":"markdown","metadata":{"id":"5tJYavMjNYlL"},"source":["### Extract Cast/Crew Information from TMDB API\n","https://www.themoviedb.org/"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tbn6CztrfdnQ"},"outputs":[],"source":["# # Create a dataframe to store person's information to avoid duplicate API calls\n","# people_info_dict = {}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Q-IVT03IQo1x"},"outputs":[],"source":["# Create birthday/placeOfBirth headings for each actor, actress, director, and writer\n","# actor_count = actor_count\n","# actress_count = actress_count\n","# list_of_cast_and_crew = ['director', 'writer']\n","\n","# for i in range(actor_count):\n","#   list_of_cast_and_crew.append(f'actor{i+1}')\n","\n","# for i in range(actress_count):\n","#   list_of_cast_and_crew.append(f'actress{i+1}')\n","\n","# for role in list_of_cast_and_crew:\n","#   movies_output_df[f'{role}DateOfBirth'] = np.nan\n","#   movies_output_df[f'{role}PlaceOfBirth'] = np.nan\n","\n","# # Iterate through each row:\n","# for index, row in movies_output_df.iterrows():\n","\n","#   for role in list_of_cast_and_crew:\n","#     tmdb_id = row[f'{role}Id']\n","\n","#     # If TMDB id exists:\n","#     if pd.notna(tmdb_id):\n","\n","#       # If TMDB id not in the memoization dictionary, call TMDB API\n","#       if tmdb_id not in people_info_dict:\n","#         person = tmdb.People(tmdb_id)\n","#         try:\n","#           response = person.info()\n","#         except:\n","#           break\n","\n","#         row[f'{role}DateOfBirth'] = person.birthday\n","#         row[f'{role}PlaceOfBirth'] = person.place_of_birth\n","\n","#         # Save api call info in a dictionary\n","#         people_info_dict[tmdb_id] = person\n","\n","#       else:\n","#         row[f'{role}DateOfBirth'] = people_info_dict[tmdb_id].birthday\n","#         row[f'{role}PlaceOfBirth'] = people_info_dict[tmdb_id].place_of_birth"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GzMN6YooH3UO"},"outputs":[],"source":["# # Save people_info_dict into people_info.csv\n","\n","# person_attribute = ['name', 'adult', 'birthday', 'deathday', 'gender', 'place_of_birth', 'known_for_department']\n","\n","# people_info_df = pd.DataFrame(list(people_info_dict.items()), columns=['tmdb_id', 'info'])\n","# for attribute in person_attribute:\n","#   people_info_df[attribute] = people_info_df['info'].apply(lambda person: getattr(person, attribute, None))\n","\n","# people_info_df.to_csv('people_info.csv', index=False)"]},{"cell_type":"markdown","source":["### Extract Cast/Crew Information from `people_info.csv`"],"metadata":{"id":"iH03k4wKDPFJ"}},{"cell_type":"code","source":["!gdown 1sAtvk3JYQJQWh05nwU6x15M-g5-YihUF"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"billBpOoDrjR","executionInfo":{"status":"ok","timestamp":1702023969584,"user_tz":480,"elapsed":3813,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"48946df5-760d-450b-dfaf-f6209d7396d3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading...\n","From: https://drive.google.com/uc?id=1sAtvk3JYQJQWh05nwU6x15M-g5-YihUF\n","To: /content/people_info.csv\n","\r  0% 0.00/7.10M [00:00<?, ?B/s]\r 66% 4.72M/7.10M [00:00<00:00, 41.4MB/s]\r100% 7.10M/7.10M [00:00<00:00, 58.5MB/s]\n"]}]},{"cell_type":"code","source":["# Open .tsv files from /content/\n","people_info_file_path = '/content/people_info.csv'\n","people_info_df = pd.read_csv(people_info_file_path, index_col='tmdb_id')\n","\n","# Convert to dictionary (hash table) for O(1) access\n","people_info_dict = people_info_df.to_dict('index')"],"metadata":{"id":"ivyDiLM0qBqm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["actor_count = actor_count\n","actress_count = actress_count\n","list_of_cast_and_crew = ['director', 'writer']\n","\n","for i in range(actor_count):\n","  list_of_cast_and_crew.append(f'actor{i+1}')\n","\n","for i in range(actress_count):\n","  list_of_cast_and_crew.append(f'actress{i+1}')\n","\n","for role in list_of_cast_and_crew:\n","  movies_output_df[f'{role}DateOfBirth'] = np.nan\n","  movies_output_df[f'{role}PlaceOfBirth'] = np.nan\n","\n","# Iterate through each row:\n","for index, row in movies_output_df.iterrows():\n","  for role in list_of_cast_and_crew:\n","    tmdb_id_col = f'{role}Id'\n","    date_col = f'{role}DateOfBirth'\n","    place_col = f'{role}PlaceOfBirth'\n","\n","    tmdb_id = row[tmdb_id_col]\n","\n","    # If TMDB id exists:\n","    if pd.notna(tmdb_id) and tmdb_id in people_info_dict:\n","      # Use .loc to update DataFrame values\n","      movies_output_df.loc[index, date_col] = people_info_dict[tmdb_id]['birthday']\n","      movies_output_df.loc[index, place_col] = people_info_dict[tmdb_id]['place_of_birth']\n","\n","for role in list_of_cast_and_crew:\n","  movies_output_df[f'{role}DateOfBirth'] = pd.to_datetime(movies_output_df[f'{role}DateOfBirth'], errors='coerce')\n","  movies_output_df[f'{role}PlaceOfBirth'] = movies_output_df[f'{role}PlaceOfBirth'].astype('object')"],"metadata":{"id":"WkiMU-gcqAhQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["movies_output_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O3OtX290xfbs","executionInfo":{"status":"ok","timestamp":1702024012201,"user_tz":480,"elapsed":209,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"439518e3-67a3-4a66-f8e2-1edec4a0f941"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 44841 entries, 0 to 44840\n","Data columns (total 66 columns):\n"," #   Column                                               Non-Null Count  Dtype         \n","---  ------                                               --------------  -----         \n"," 0   tconst                                               44827 non-null  object        \n"," 1   primaryTitle                                         44841 non-null  object        \n"," 2   id                                                   44841 non-null  Int64         \n"," 3   releaseDate                                          44841 non-null  datetime64[ns]\n"," 4   releaseYear                                          44841 non-null  Int64         \n"," 5   releaseMonth01                                       44841 non-null  Int64         \n"," 6   releaseMonth02                                       44841 non-null  Int64         \n"," 7   releaseMonth03                                       44841 non-null  Int64         \n"," 8   releaseMonth04                                       44841 non-null  Int64         \n"," 9   releaseMonth05                                       44841 non-null  Int64         \n"," 10  releaseMonth06                                       44841 non-null  Int64         \n"," 11  releaseMonth07                                       44841 non-null  Int64         \n"," 12  releaseMonth08                                       44841 non-null  Int64         \n"," 13  releaseMonth09                                       44841 non-null  Int64         \n"," 14  releaseMonth10                                       44841 non-null  Int64         \n"," 15  releaseMonth11                                       44841 non-null  Int64         \n"," 16  releaseMonth12                                       44841 non-null  Int64         \n"," 17  isAdult                                              44841 non-null  Int64         \n"," 18  languageEnglish                                      44841 non-null  Int64         \n"," 19  languageOther                                        44841 non-null  Int64         \n"," 20  budget                                               8871 non-null   Int64         \n"," 21  revenue                                              7410 non-null   Int64         \n"," 22  runtimeMinutes                                       43064 non-null  Int64         \n"," 23  productionCompanyWarnerBros                          44841 non-null  Int64         \n"," 24  productionCompanyMetroGoldwynMayerMGM                44841 non-null  Int64         \n"," 25  productionCompanyParamountPictures                   44841 non-null  Int64         \n"," 26  productionCompanyTwentiethCenturyFoxFilmCorporation  44841 non-null  Int64         \n"," 27  productionCompanyUniversalPictures                   44841 non-null  Int64         \n"," 28  productionCompanyColumbiaPicturesCorporation         44841 non-null  Int64         \n"," 29  productionCompanyCanal                               44841 non-null  Int64         \n"," 30  productionCompanyColumbiaPictures                    44841 non-null  Int64         \n"," 31  productionCompanyRKORadioPictures                    44841 non-null  Int64         \n"," 32  productionCompanyNewLineCinema                       44841 non-null  Int64         \n"," 33  productionCompanyOther                               44841 non-null  Int64         \n"," 34  productionCountryUnitedStatesofAmerica               44841 non-null  Int64         \n"," 35  productionCountryUnitedKingdom                       44841 non-null  Int64         \n"," 36  productionCountryFrance                              44841 non-null  Int64         \n"," 37  productionCountryGermany                             44841 non-null  Int64         \n"," 38  productionCountryItaly                               44841 non-null  Int64         \n"," 39  productionCountryOther                               44841 non-null  Int64         \n"," 40  averageRating                                        41937 non-null  Float64       \n"," 41  numVotes                                             42034 non-null  Int64         \n"," 42  actor1Id                                             38575 non-null  Int64         \n"," 43  actor2Id                                             33513 non-null  Int64         \n"," 44  actor3Id                                             28493 non-null  Int64         \n"," 45  actress1Id                                           33853 non-null  Int64         \n"," 46  actress2Id                                           24652 non-null  Int64         \n"," 47  actress3Id                                           16602 non-null  Int64         \n"," 48  directorId                                           44019 non-null  Int64         \n"," 49  writerId                                             15671 non-null  Int64         \n"," 50  directorDateOfBirth                                  32743 non-null  datetime64[ns]\n"," 51  directorPlaceOfBirth                                 32338 non-null  object        \n"," 52  writerDateOfBirth                                    10736 non-null  datetime64[ns]\n"," 53  writerPlaceOfBirth                                   10029 non-null  object        \n"," 54  actor1DateOfBirth                                    37061 non-null  datetime64[ns]\n"," 55  actor1PlaceOfBirth                                   36506 non-null  object        \n"," 56  actor2DateOfBirth                                    31691 non-null  datetime64[ns]\n"," 57  actor2PlaceOfBirth                                   30958 non-null  object        \n"," 58  actor3DateOfBirth                                    26419 non-null  datetime64[ns]\n"," 59  actor3PlaceOfBirth                                   25806 non-null  object        \n"," 60  actress1DateOfBirth                                  32250 non-null  datetime64[ns]\n"," 61  actress1PlaceOfBirth                                 31810 non-null  object        \n"," 62  actress2DateOfBirth                                  22816 non-null  datetime64[ns]\n"," 63  actress2PlaceOfBirth                                 22346 non-null  object        \n"," 64  actress3DateOfBirth                                  14834 non-null  datetime64[ns]\n"," 65  actress3PlaceOfBirth                                 14494 non-null  object        \n","dtypes: Float64(1), Int64(46), datetime64[ns](9), object(10)\n","memory usage: 25.9+ MB\n"]}]},{"cell_type":"code","source":["# Create age features for each cast/crew\n","for role in list_of_cast_and_crew:\n","  # Calculate cast/crew age\n","  movies_output_df['releaseDate'] = pd.to_datetime(movies_output_df['releaseDate'], errors='coerce')\n","  movies_output_df[f'{role}DateOfBirth'] = pd.to_datetime(movies_output_df[f'{role}DateOfBirth'], errors='coerce')\n","  movies_output_df[f'{role}Age'] = (movies_output_df['releaseDate'] - movies_output_df[f'{role}DateOfBirth']).astype('<m8[Y]')\n","  movies_output_df[f'{role}Age'] = movies_output_df[f'{role}Age'].astype('Int64')\n","\n","  movies_output_df = movies_output_df.drop(columns=[f'{role}Id', f'{role}DateOfBirth', f'{role}PlaceOfBirth'])\n","\n","movies_output_df = movies_output_df.drop(columns='releaseDate')"],"metadata":{"id":"FkNVBfjYD3MU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Drop 'id' column representing TMDB ids for people\n","movies_output_df = movies_output_df.drop(columns='id')"],"metadata":{"id":"jWsvJnONPfD4"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1702024013024,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"},"user_tz":480},"id":"zfqNWcJDXyGs","outputId":"6357b073-1bb7-41d0-867c-11ca8c97cbf9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (44841, 48)\n","Columns: Index(['tconst', 'primaryTitle', 'releaseYear', 'releaseMonth01',\n","       'releaseMonth02', 'releaseMonth03', 'releaseMonth04', 'releaseMonth05',\n","       'releaseMonth06', 'releaseMonth07', 'releaseMonth08', 'releaseMonth09',\n","       'releaseMonth10', 'releaseMonth11', 'releaseMonth12', 'isAdult',\n","       'languageEnglish', 'languageOther', 'budget', 'revenue',\n","       'runtimeMinutes', 'productionCompanyWarnerBros',\n","       'productionCompanyMetroGoldwynMayerMGM',\n","       'productionCompanyParamountPictures',\n","       'productionCompanyTwentiethCenturyFoxFilmCorporation',\n","       'productionCompanyUniversalPictures',\n","       'productionCompanyColumbiaPicturesCorporation',\n","       'productionCompanyCanal', 'productionCompanyColumbiaPictures',\n","       'productionCompanyRKORadioPictures', 'productionCompanyNewLineCinema',\n","       'productionCompanyOther', 'productionCountryUnitedStatesofAmerica',\n","       'productionCountryUnitedKingdom', 'productionCountryFrance',\n","       'productionCountryGermany', 'productionCountryItaly',\n","       'productionCountryOther', 'averageRating', 'numVotes', 'directorAge',\n","       'writerAge', 'actor1Age', 'actor2Age', 'actor3Age', 'actress1Age',\n","       'actress2Age', 'actress3Age'],\n","      dtype='object')\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 44841 entries, 0 to 44840\n","Data columns (total 48 columns):\n"," #   Column                                               Non-Null Count  Dtype  \n","---  ------                                               --------------  -----  \n"," 0   tconst                                               44827 non-null  object \n"," 1   primaryTitle                                         44841 non-null  object \n"," 2   releaseYear                                          44841 non-null  Int64  \n"," 3   releaseMonth01                                       44841 non-null  Int64  \n"," 4   releaseMonth02                                       44841 non-null  Int64  \n"," 5   releaseMonth03                                       44841 non-null  Int64  \n"," 6   releaseMonth04                                       44841 non-null  Int64  \n"," 7   releaseMonth05                                       44841 non-null  Int64  \n"," 8   releaseMonth06                                       44841 non-null  Int64  \n"," 9   releaseMonth07                                       44841 non-null  Int64  \n"," 10  releaseMonth08                                       44841 non-null  Int64  \n"," 11  releaseMonth09                                       44841 non-null  Int64  \n"," 12  releaseMonth10                                       44841 non-null  Int64  \n"," 13  releaseMonth11                                       44841 non-null  Int64  \n"," 14  releaseMonth12                                       44841 non-null  Int64  \n"," 15  isAdult                                              44841 non-null  Int64  \n"," 16  languageEnglish                                      44841 non-null  Int64  \n"," 17  languageOther                                        44841 non-null  Int64  \n"," 18  budget                                               8871 non-null   Int64  \n"," 19  revenue                                              7410 non-null   Int64  \n"," 20  runtimeMinutes                                       43064 non-null  Int64  \n"," 21  productionCompanyWarnerBros                          44841 non-null  Int64  \n"," 22  productionCompanyMetroGoldwynMayerMGM                44841 non-null  Int64  \n"," 23  productionCompanyParamountPictures                   44841 non-null  Int64  \n"," 24  productionCompanyTwentiethCenturyFoxFilmCorporation  44841 non-null  Int64  \n"," 25  productionCompanyUniversalPictures                   44841 non-null  Int64  \n"," 26  productionCompanyColumbiaPicturesCorporation         44841 non-null  Int64  \n"," 27  productionCompanyCanal                               44841 non-null  Int64  \n"," 28  productionCompanyColumbiaPictures                    44841 non-null  Int64  \n"," 29  productionCompanyRKORadioPictures                    44841 non-null  Int64  \n"," 30  productionCompanyNewLineCinema                       44841 non-null  Int64  \n"," 31  productionCompanyOther                               44841 non-null  Int64  \n"," 32  productionCountryUnitedStatesofAmerica               44841 non-null  Int64  \n"," 33  productionCountryUnitedKingdom                       44841 non-null  Int64  \n"," 34  productionCountryFrance                              44841 non-null  Int64  \n"," 35  productionCountryGermany                             44841 non-null  Int64  \n"," 36  productionCountryItaly                               44841 non-null  Int64  \n"," 37  productionCountryOther                               44841 non-null  Int64  \n"," 38  averageRating                                        41937 non-null  Float64\n"," 39  numVotes                                             42034 non-null  Int64  \n"," 40  directorAge                                          32743 non-null  Int64  \n"," 41  writerAge                                            10736 non-null  Int64  \n"," 42  actor1Age                                            37061 non-null  Int64  \n"," 43  actor2Age                                            31691 non-null  Int64  \n"," 44  actor3Age                                            26419 non-null  Int64  \n"," 45  actress1Age                                          32250 non-null  Int64  \n"," 46  actress2Age                                          22816 non-null  Int64  \n"," 47  actress3Age                                          14834 non-null  Int64  \n","dtypes: Float64(1), Int64(45), object(2)\n","memory usage: 19.7+ MB\n","None\n"]},{"output_type":"execute_result","data":{"text/plain":["      tconst                 primaryTitle  releaseYear  releaseMonth01  \\\n","0  tt0114709                    toy story         1995               0   \n","1  tt0113497                      jumanji         1995               0   \n","2  tt0113228             grumpier old men         1995               0   \n","3  tt0114885            waiting to exhale         1995               0   \n","4  tt0113041  father of the bride part ii         1995               0   \n","5  tt0113277                         heat         1995               0   \n","6  tt0114319                      sabrina         1995               0   \n","7  tt0112302                 tom and huck         1995               0   \n","8  tt0114576                 sudden death         1995               0   \n","9  tt0113189                    goldeneye         1995               0   \n","\n","   releaseMonth02  releaseMonth03  releaseMonth04  releaseMonth05  \\\n","0               0               0               0               0   \n","1               0               0               0               0   \n","2               0               0               0               0   \n","3               0               0               0               0   \n","4               1               0               0               0   \n","5               0               0               0               0   \n","6               0               0               0               0   \n","7               0               0               0               0   \n","8               0               0               0               0   \n","9               0               0               0               0   \n","\n","   releaseMonth06  releaseMonth07  ...  averageRating  numVotes  directorAge  \\\n","0               0               0  ...            7.7      5415           38   \n","1               0               0  ...            6.9      2413           45   \n","2               0               0  ...            6.5        92           45   \n","3               0               0  ...            6.1        34           34   \n","4               0               0  ...            5.7       173           53   \n","5               0               0  ...            7.7      1886           52   \n","6               0               0  ...            6.2       141           61   \n","7               0               0  ...            5.4        45           33   \n","8               0               0  ...            5.5       174           52   \n","9               0               0  ...            6.6      1194           52   \n","\n","   writerAge  actor1Age  actor2Age  actor3Age  actress1Age  actress2Age  \\\n","0         31         39         42         69           43           40   \n","1         36         44         47         39           13           34   \n","2       <NA>         75         70         88           54           61   \n","3         53         49         41         32           32           37   \n","4         45         49         44         30           49           23   \n","5         52         55         52         35           43           31   \n","6       <NA>         53         32         65           30           64   \n","7       <NA>         14         13         40           16           45   \n","8         31         35         47         45            8         <NA>   \n","9       <NA>         42         36         59           25           31   \n","\n","   actress3Age  \n","0            9  \n","1           36  \n","2           35  \n","3           46  \n","4           50  \n","5           27  \n","6           67  \n","7           19  \n","8         <NA>  \n","9           60  \n","\n","[10 rows x 48 columns]"],"text/html":["\n","  <div id=\"df-7b9a1c8c-b140-41be-81b8-fc457848a24e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tconst</th>\n","      <th>primaryTitle</th>\n","      <th>releaseYear</th>\n","      <th>releaseMonth01</th>\n","      <th>releaseMonth02</th>\n","      <th>releaseMonth03</th>\n","      <th>releaseMonth04</th>\n","      <th>releaseMonth05</th>\n","      <th>releaseMonth06</th>\n","      <th>releaseMonth07</th>\n","      <th>...</th>\n","      <th>averageRating</th>\n","      <th>numVotes</th>\n","      <th>directorAge</th>\n","      <th>writerAge</th>\n","      <th>actor1Age</th>\n","      <th>actor2Age</th>\n","      <th>actor3Age</th>\n","      <th>actress1Age</th>\n","      <th>actress2Age</th>\n","      <th>actress3Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>tt0114709</td>\n","      <td>toy story</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>7.7</td>\n","      <td>5415</td>\n","      <td>38</td>\n","      <td>31</td>\n","      <td>39</td>\n","      <td>42</td>\n","      <td>69</td>\n","      <td>43</td>\n","      <td>40</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>tt0113497</td>\n","      <td>jumanji</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.9</td>\n","      <td>2413</td>\n","      <td>45</td>\n","      <td>36</td>\n","      <td>44</td>\n","      <td>47</td>\n","      <td>39</td>\n","      <td>13</td>\n","      <td>34</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>tt0113228</td>\n","      <td>grumpier old men</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.5</td>\n","      <td>92</td>\n","      <td>45</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>75</td>\n","      <td>70</td>\n","      <td>88</td>\n","      <td>54</td>\n","      <td>61</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>tt0114885</td>\n","      <td>waiting to exhale</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.1</td>\n","      <td>34</td>\n","      <td>34</td>\n","      <td>53</td>\n","      <td>49</td>\n","      <td>41</td>\n","      <td>32</td>\n","      <td>32</td>\n","      <td>37</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>tt0113041</td>\n","      <td>father of the bride part ii</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>5.7</td>\n","      <td>173</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>49</td>\n","      <td>44</td>\n","      <td>30</td>\n","      <td>49</td>\n","      <td>23</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>tt0113277</td>\n","      <td>heat</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>7.7</td>\n","      <td>1886</td>\n","      <td>52</td>\n","      <td>52</td>\n","      <td>55</td>\n","      <td>52</td>\n","      <td>35</td>\n","      <td>43</td>\n","      <td>31</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>tt0114319</td>\n","      <td>sabrina</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.2</td>\n","      <td>141</td>\n","      <td>61</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>53</td>\n","      <td>32</td>\n","      <td>65</td>\n","      <td>30</td>\n","      <td>64</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>tt0112302</td>\n","      <td>tom and huck</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>5.4</td>\n","      <td>45</td>\n","      <td>33</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>14</td>\n","      <td>13</td>\n","      <td>40</td>\n","      <td>16</td>\n","      <td>45</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>tt0114576</td>\n","      <td>sudden death</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>5.5</td>\n","      <td>174</td>\n","      <td>52</td>\n","      <td>31</td>\n","      <td>35</td>\n","      <td>47</td>\n","      <td>45</td>\n","      <td>8</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>tt0113189</td>\n","      <td>goldeneye</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6.6</td>\n","      <td>1194</td>\n","      <td>52</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>42</td>\n","      <td>36</td>\n","      <td>59</td>\n","      <td>25</td>\n","      <td>31</td>\n","      <td>60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 48 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b9a1c8c-b140-41be-81b8-fc457848a24e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7b9a1c8c-b140-41be-81b8-fc457848a24e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7b9a1c8c-b140-41be-81b8-fc457848a24e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a8c1abab-1f95-4112-adac-77de07a532d3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8c1abab-1f95-4112-adac-77de07a532d3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a8c1abab-1f95-4112-adac-77de07a532d3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}],"source":["print(f\"Shape: {movies_output_df.shape}\")\n","print(f\"Columns: {movies_output_df.columns}\")\n","print(movies_output_df.info())\n","movies_output_df.head(10)"]},{"cell_type":"markdown","metadata":{"id":"E_D6kSh9ODWT"},"source":["### Save Movies table to `movies_cleaned.csv`"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eti45wUflyNO"},"outputs":[],"source":["# Save the cleaned dataset to a CSV file\n","movies_output_df.to_csv('movies_cleaned.csv', index=False)"]},{"cell_type":"markdown","metadata":{"id":"CRG4_1hTC2tk"},"source":["## Merge IMDb and Movies datasets"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ERjDYjwCYAnD"},"outputs":[],"source":["movies_output_df_temp = movies_output_df.copy()\n","imdb_output_df_temp = imdb_output_df.copy()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GM3WYs2PYA6V"},"outputs":[],"source":["movies_output_df = movies_output_df_temp\n","imdb_output_df = imdb_output_df_temp"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RujuN6fWDAJi"},"outputs":[],"source":["# Use imdb_ids in `movies_output_df` as index and add imdb_cleaned.csv\n","\n","# Use combine_first to merge the two DataFrames\n","common_column = 'tconst'\n","\n","# Use combine_first to merge the two DataFrames\n","features_df = pd.merge(movies_output_df, imdb_output_df, on=common_column, how='left', suffixes=('', '_duplicate'))\n","\n","# Iterate through columns and update the original DataFrame with non-null values\n","for column in ['primaryTitle', 'isAdult', 'releaseYear', 'runtimeMinutes', 'averageRating', 'numVotes']:\n","  if column != common_column:  # Skip the common column\n","    # Update only if the value is missing in the original DataFrame\n","    features_df[column] = features_df.apply(lambda row: row[column] if pd.notnull(row[column]) else row[column + '_duplicate'], axis=1)\n","    features_df = features_df.drop(columns=(column + '_duplicate'))\n","\n","for column in ['isAdult', 'releaseYear', 'runtimeMinutes', 'numVotes']:\n","  features_df[column] = pd.to_numeric(features_df[column]).astype('Int64')\n","\n","features_df['averageRating'] = pd.to_numeric(features_df['averageRating']).astype('Float64')\n","\n","# Convert imdb labels to 'Int64'\n","features_df['id'] = features_df['tconst'].str.extract('(\\d+)').astype('Int64')\n","features_df = features_df.drop(columns='tconst')\n","\n","# Set 'id' column as the first column\n","features_df = features_df[['id'] + [col for col in features_df.columns if col != 'id']]"]},{"cell_type":"code","source":["print(f\"Shape: {features_df.shape}\")\n","print(f\"Columns: {features_df.columns}\")\n","print(features_df.info())\n","features_df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"wz9pOgXod3ok","executionInfo":{"status":"ok","timestamp":1702024017790,"user_tz":480,"elapsed":5,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"53fd4bbb-79ed-434f-e55a-4bbc961a1a7e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape: (44841, 77)\n","Columns: Index(['id', 'primaryTitle', 'releaseYear', 'releaseMonth01', 'releaseMonth02',\n","       'releaseMonth03', 'releaseMonth04', 'releaseMonth05', 'releaseMonth06',\n","       'releaseMonth07', 'releaseMonth08', 'releaseMonth09', 'releaseMonth10',\n","       'releaseMonth11', 'releaseMonth12', 'isAdult', 'languageEnglish',\n","       'languageOther', 'budget', 'revenue', 'runtimeMinutes',\n","       'productionCompanyWarnerBros', 'productionCompanyMetroGoldwynMayerMGM',\n","       'productionCompanyParamountPictures',\n","       'productionCompanyTwentiethCenturyFoxFilmCorporation',\n","       'productionCompanyUniversalPictures',\n","       'productionCompanyColumbiaPicturesCorporation',\n","       'productionCompanyCanal', 'productionCompanyColumbiaPictures',\n","       'productionCompanyRKORadioPictures', 'productionCompanyNewLineCinema',\n","       'productionCompanyOther', 'productionCountryUnitedStatesofAmerica',\n","       'productionCountryUnitedKingdom', 'productionCountryFrance',\n","       'productionCountryGermany', 'productionCountryItaly',\n","       'productionCountryOther', 'averageRating', 'numVotes', 'directorAge',\n","       'writerAge', 'actor1Age', 'actor2Age', 'actor3Age', 'actress1Age',\n","       'actress2Age', 'actress3Age', 'genreDrama', 'genreMusic',\n","       'genreWestern', 'genreRomance', 'genreAction', 'genreCrime',\n","       'genreDocumentary', 'genreComedy', 'genreUnknown', 'genreMystery',\n","       'genreFamily', 'genreMusical', 'genreAdventure', 'genreSci-Fi',\n","       'genreWar', 'genreSport', 'genreFantasy', 'genreHorror', 'genreHistory',\n","       'genreBiography', 'genreThriller', 'genreFilm-Noir', 'genreAnimation',\n","       'genreNews', 'genreAdult', 'genreReality-TV', 'genreTalk-Show',\n","       'genreGame-Show', 'genreShort'],\n","      dtype='object')\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 44841 entries, 0 to 44840\n","Data columns (total 77 columns):\n"," #   Column                                               Non-Null Count  Dtype  \n","---  ------                                               --------------  -----  \n"," 0   id                                                   44827 non-null  Int64  \n"," 1   primaryTitle                                         44841 non-null  object \n"," 2   releaseYear                                          44841 non-null  Int64  \n"," 3   releaseMonth01                                       44841 non-null  Int64  \n"," 4   releaseMonth02                                       44841 non-null  Int64  \n"," 5   releaseMonth03                                       44841 non-null  Int64  \n"," 6   releaseMonth04                                       44841 non-null  Int64  \n"," 7   releaseMonth05                                       44841 non-null  Int64  \n"," 8   releaseMonth06                                       44841 non-null  Int64  \n"," 9   releaseMonth07                                       44841 non-null  Int64  \n"," 10  releaseMonth08                                       44841 non-null  Int64  \n"," 11  releaseMonth09                                       44841 non-null  Int64  \n"," 12  releaseMonth10                                       44841 non-null  Int64  \n"," 13  releaseMonth11                                       44841 non-null  Int64  \n"," 14  releaseMonth12                                       44841 non-null  Int64  \n"," 15  isAdult                                              44841 non-null  Int64  \n"," 16  languageEnglish                                      44841 non-null  Int64  \n"," 17  languageOther                                        44841 non-null  Int64  \n"," 18  budget                                               8871 non-null   Int64  \n"," 19  revenue                                              7410 non-null   Int64  \n"," 20  runtimeMinutes                                       44510 non-null  Int64  \n"," 21  productionCompanyWarnerBros                          44841 non-null  Int64  \n"," 22  productionCompanyMetroGoldwynMayerMGM                44841 non-null  Int64  \n"," 23  productionCompanyParamountPictures                   44841 non-null  Int64  \n"," 24  productionCompanyTwentiethCenturyFoxFilmCorporation  44841 non-null  Int64  \n"," 25  productionCompanyUniversalPictures                   44841 non-null  Int64  \n"," 26  productionCompanyColumbiaPicturesCorporation         44841 non-null  Int64  \n"," 27  productionCompanyCanal                               44841 non-null  Int64  \n"," 28  productionCompanyColumbiaPictures                    44841 non-null  Int64  \n"," 29  productionCompanyRKORadioPictures                    44841 non-null  Int64  \n"," 30  productionCompanyNewLineCinema                       44841 non-null  Int64  \n"," 31  productionCompanyOther                               44841 non-null  Int64  \n"," 32  productionCountryUnitedStatesofAmerica               44841 non-null  Int64  \n"," 33  productionCountryUnitedKingdom                       44841 non-null  Int64  \n"," 34  productionCountryFrance                              44841 non-null  Int64  \n"," 35  productionCountryGermany                             44841 non-null  Int64  \n"," 36  productionCountryItaly                               44841 non-null  Int64  \n"," 37  productionCountryOther                               44841 non-null  Int64  \n"," 38  averageRating                                        44221 non-null  Float64\n"," 39  numVotes                                             44237 non-null  Int64  \n"," 40  directorAge                                          32743 non-null  Int64  \n"," 41  writerAge                                            10736 non-null  Int64  \n"," 42  actor1Age                                            37061 non-null  Int64  \n"," 43  actor2Age                                            31691 non-null  Int64  \n"," 44  actor3Age                                            26419 non-null  Int64  \n"," 45  actress1Age                                          32250 non-null  Int64  \n"," 46  actress2Age                                          22816 non-null  Int64  \n"," 47  actress3Age                                          14834 non-null  Int64  \n"," 48  genreDrama                                           38804 non-null  Int64  \n"," 49  genreMusic                                           38804 non-null  Int64  \n"," 50  genreWestern                                         38804 non-null  Int64  \n"," 51  genreRomance                                         38804 non-null  Int64  \n"," 52  genreAction                                          38804 non-null  Int64  \n"," 53  genreCrime                                           38804 non-null  Int64  \n"," 54  genreDocumentary                                     38804 non-null  Int64  \n"," 55  genreComedy                                          38804 non-null  Int64  \n"," 56  genreUnknown                                         38804 non-null  Int64  \n"," 57  genreMystery                                         38804 non-null  Int64  \n"," 58  genreFamily                                          38804 non-null  Int64  \n"," 59  genreMusical                                         38804 non-null  Int64  \n"," 60  genreAdventure                                       38804 non-null  Int64  \n"," 61  genreSci-Fi                                          38804 non-null  Int64  \n"," 62  genreWar                                             38804 non-null  Int64  \n"," 63  genreSport                                           38804 non-null  Int64  \n"," 64  genreFantasy                                         38804 non-null  Int64  \n"," 65  genreHorror                                          38804 non-null  Int64  \n"," 66  genreHistory                                         38804 non-null  Int64  \n"," 67  genreBiography                                       38804 non-null  Int64  \n"," 68  genreThriller                                        38804 non-null  Int64  \n"," 69  genreFilm-Noir                                       38804 non-null  Int64  \n"," 70  genreAnimation                                       38804 non-null  Int64  \n"," 71  genreNews                                            38804 non-null  Int64  \n"," 72  genreAdult                                           38804 non-null  Int64  \n"," 73  genreReality-TV                                      38804 non-null  Int64  \n"," 74  genreTalk-Show                                       38804 non-null  Int64  \n"," 75  genreGame-Show                                       38804 non-null  Int64  \n"," 76  genreShort                                           38804 non-null  Int64  \n","dtypes: Float64(1), Int64(75), object(1)\n","memory usage: 29.9+ MB\n","None\n"]},{"output_type":"execute_result","data":{"text/plain":["       id                 primaryTitle  releaseYear  releaseMonth01  \\\n","0  114709                    toy story         1995               0   \n","1  113497                      jumanji         1995               0   \n","2  113228             grumpier old men         1995               0   \n","3  114885            waiting to exhale         1995               0   \n","4  113041  father of the bride part ii         1995               0   \n","5  113277                         heat         1995               0   \n","6  114319                      sabrina         1995               0   \n","7  112302                 tom and huck         1995               0   \n","8  114576                 sudden death         1995               0   \n","9  113189                    goldeneye         1995               0   \n","\n","   releaseMonth02  releaseMonth03  releaseMonth04  releaseMonth05  \\\n","0               0               0               0               0   \n","1               0               0               0               0   \n","2               0               0               0               0   \n","3               0               0               0               0   \n","4               1               0               0               0   \n","5               0               0               0               0   \n","6               0               0               0               0   \n","7               0               0               0               0   \n","8               0               0               0               0   \n","9               0               0               0               0   \n","\n","   releaseMonth06  releaseMonth07  ...  genreBiography  genreThriller  \\\n","0               0               0  ...               0              0   \n","1               0               0  ...               0              0   \n","2               0               0  ...               0              0   \n","3               0               0  ...               0              0   \n","4               0               0  ...               0              0   \n","5               0               0  ...               0              0   \n","6               0               0  ...               0              0   \n","7               0               0  ...               0              0   \n","8               0               0  ...               0              1   \n","9               0               0  ...               0              1   \n","\n","   genreFilm-Noir  genreAnimation  genreNews  genreAdult  genreReality-TV  \\\n","0               0               1          0           0                0   \n","1               0               0          0           0                0   \n","2               0               0          0           0                0   \n","3               0               0          0           0                0   \n","4               0               0          0           0                0   \n","5               0               0          0           0                0   \n","6               0               0          0           0                0   \n","7               0               0          0           0                0   \n","8               0               0          0           0                0   \n","9               0               0          0           0                0   \n","\n","   genreTalk-Show  genreGame-Show  genreShort  \n","0               0               0           0  \n","1               0               0           0  \n","2               0               0           0  \n","3               0               0           0  \n","4               0               0           0  \n","5               0               0           0  \n","6               0               0           0  \n","7               0               0           0  \n","8               0               0           0  \n","9               0               0           0  \n","\n","[10 rows x 77 columns]"],"text/html":["\n","  <div id=\"df-f3434b56-fba8-41a4-a286-d2bbd0af9d3d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>primaryTitle</th>\n","      <th>releaseYear</th>\n","      <th>releaseMonth01</th>\n","      <th>releaseMonth02</th>\n","      <th>releaseMonth03</th>\n","      <th>releaseMonth04</th>\n","      <th>releaseMonth05</th>\n","      <th>releaseMonth06</th>\n","      <th>releaseMonth07</th>\n","      <th>...</th>\n","      <th>genreBiography</th>\n","      <th>genreThriller</th>\n","      <th>genreFilm-Noir</th>\n","      <th>genreAnimation</th>\n","      <th>genreNews</th>\n","      <th>genreAdult</th>\n","      <th>genreReality-TV</th>\n","      <th>genreTalk-Show</th>\n","      <th>genreGame-Show</th>\n","      <th>genreShort</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>114709</td>\n","      <td>toy story</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>113497</td>\n","      <td>jumanji</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>113228</td>\n","      <td>grumpier old men</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>114885</td>\n","      <td>waiting to exhale</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>113041</td>\n","      <td>father of the bride part ii</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>113277</td>\n","      <td>heat</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>114319</td>\n","      <td>sabrina</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>112302</td>\n","      <td>tom and huck</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>114576</td>\n","      <td>sudden death</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>113189</td>\n","      <td>goldeneye</td>\n","      <td>1995</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 77 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3434b56-fba8-41a4-a286-d2bbd0af9d3d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3434b56-fba8-41a4-a286-d2bbd0af9d3d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3434b56-fba8-41a4-a286-d2bbd0af9d3d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bbf37f04-da2c-4d0e-9131-aea7623739b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bbf37f04-da2c-4d0e-9131-aea7623739b0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bbf37f04-da2c-4d0e-9131-aea7623739b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# Save the cleaned dataset to a CSV file\n","features_df.to_csv('features.csv', index=False)"],"metadata":{"id":"5pUGAlDveg7j"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Golden Globe nominations dataset"],"metadata":{"id":"hpD2rKKJn_en"}},{"cell_type":"code","source":["gg_file_path = '/content/datasets/goldenglobes.csv'\n","gg_df = pd.read_csv(gg_file_path)\n","\n","gg_df.head()\n","gg_df.info()\n","gg_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":543},"executionInfo":{"status":"ok","timestamp":1702024119285,"user_tz":480,"elapsed":176,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"10e38261-502a-45ea-c340-910599310702","id":"R59paNwsn_ev"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7991 entries, 0 to 7990\n","Data columns (total 7 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   year_film   7991 non-null   int64 \n"," 1   year_award  7991 non-null   int64 \n"," 2   ceremony    7991 non-null   int64 \n"," 3   category    7991 non-null   object\n"," 4   nominee     7991 non-null   object\n"," 5   film        6191 non-null   object\n"," 6   win         7991 non-null   bool  \n","dtypes: bool(1), int64(3), object(3)\n","memory usage: 382.5+ KB\n"]},{"output_type":"execute_result","data":{"text/plain":["         year_film   year_award     ceremony\n","count  7991.000000  7991.000000  7991.000000\n","mean   1987.490552  1988.490552    45.490552\n","std      18.936258    18.936258    18.936258\n","min    1943.000000  1944.000000     1.000000\n","25%    1972.000000  1973.000000    30.000000\n","50%    1988.000000  1989.000000    46.000000\n","75%    2004.000000  2005.000000    62.000000\n","max    2019.000000  2020.000000    77.000000"],"text/html":["\n","  <div id=\"df-fa4b6f37-281f-416c-a183-bf66093b9c06\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>year_award</th>\n","      <th>ceremony</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7991.000000</td>\n","      <td>7991.000000</td>\n","      <td>7991.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1987.490552</td>\n","      <td>1988.490552</td>\n","      <td>45.490552</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>18.936258</td>\n","      <td>18.936258</td>\n","      <td>18.936258</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1943.000000</td>\n","      <td>1944.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1972.000000</td>\n","      <td>1973.000000</td>\n","      <td>30.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1988.000000</td>\n","      <td>1989.000000</td>\n","      <td>46.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2004.000000</td>\n","      <td>2005.000000</td>\n","      <td>62.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2019.000000</td>\n","      <td>2020.000000</td>\n","      <td>77.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa4b6f37-281f-416c-a183-bf66093b9c06')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fa4b6f37-281f-416c-a183-bf66093b9c06 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fa4b6f37-281f-416c-a183-bf66093b9c06');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6635e5ee-fcc5-47f1-a417-0713798c8705\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6635e5ee-fcc5-47f1-a417-0713798c8705')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6635e5ee-fcc5-47f1-a417-0713798c8705 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["gg_df_temp = gg_df.copy()"],"metadata":{"id":"Y42YPYaXTKqp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gg_df = gg_df_temp"],"metadata":{"id":"qkMv93uhTPbJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Print the fields (column names) of the dataset\n","fields = gg_df.columns\n","print(\"Fields in the dataset:\")\n","for field in fields:\n","    print(field)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702024119449,"user_tz":480,"elapsed":5,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"6f781296-5311-4292-82a7-fc70ff637c4c","id":"yVe1GlJJn_ey"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fields in the dataset:\n","year_film\n","year_award\n","ceremony\n","category\n","nominee\n","film\n","win\n"]}]},{"cell_type":"code","source":["unique_categories = gg_df['category'].unique()\n","print(unique_categories)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702024119449,"user_tz":480,"elapsed":4,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"ef028ba7-c313-4094-8704-3c77ff5f2db6","id":"RnL97kHTn_ey"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Best Performance by an Actress in a Supporting Role in any Motion Picture'\n"," 'Best Performance by an Actor in a Supporting Role in any Motion Picture'\n"," 'Best Director - Motion Picture' 'Picture' 'Actress In A Leading Role'\n"," 'Actor In A Leading Role' 'Promoting International Understanding'\n"," 'Special Achievement Award' 'Best Screenplay - Motion Picture'\n"," 'Best Original Score - Motion Picture' 'New Star Of The Year - Actress'\n"," 'New Star Of The Year - Actor' 'Juvenile Performance' 'Cinematography'\n"," 'Foreign Film - English Language'\n"," 'Best Motion Picture - Foreign Language' 'Outstanding Use Of Color'\n"," 'Best Performance by an Actress in a Motion Picture - Drama'\n"," 'Best Performance by an Actor in a Motion Picture - Drama'\n"," 'Best Performance by an Actor in a Motion Picture - Musical or Comedy'\n"," 'New Star Of The Year' 'Actress In A Leading Role - Musical Or Comedy'\n"," 'Henrietta Award (World Film Favorites)' 'Cinematography - Color'\n"," 'Cinematography - Black And White' 'Best Motion Picture - Drama'\n"," 'Best Motion Picture - Musical or Comedy'\n"," 'Henrietta Award (World Film Favorite)' 'Cecil B. deMille Award'\n"," 'Documentary' 'Television Achievement' 'Hollywood Citizenship Award'\n"," 'New Foreign Star Of The Year - Actress'\n"," 'New Foreign Star Of The Year - Actor' 'Foreign Film - Foreign Language'\n"," 'Picture - Musical' 'Picture - Comedy'\n"," 'Samuel Goldwyn International Award' 'Famous Silent Filmstars'\n"," 'Best Original Song - Motion Picture' 'Television Series'\n"," 'Actor In A Television Series' 'Actress In A Television Series'\n"," 'Best Television Series - Drama' 'Television Program'\n"," 'Television Producer/Director' 'Television Series - Comedy'\n"," 'International News Coverage' 'Television Series - Variety'\n"," 'Best Television Series - Musical or Comedy'\n"," 'Actor In A Television Series - Musical Or Comedy'\n"," 'Actor In A Television Series - Drama'\n"," 'Actress In A Television Series - Drama'\n"," 'Actress In A Television Series - Musical Or Comedy'\n"," 'Best Performance by an Actress In A Television Series - Drama'\n"," 'Best Performance by an Actor In A Television Series - Drama'\n"," 'Best Performance by an Actress in a Television Series - Musical or Comedy'\n"," 'Best Performance by an Actor in a Television Series - Musical or Comedy'\n"," 'Actor In A Supporting Role - Television Series'\n"," 'Actress In A Supporting Role - Television Series' 'Television Movie'\n"," 'Actress In A Supporting Role - Series Or Television Movie'\n"," 'Actress In A Leading Role - Drama Series Or Television Movie'\n"," 'Actor In A Leading Role - Drama Series Or Television Movie'\n"," 'Actor In A Leading Role - Musical Or Comedy Series Or Television Movie'\n"," 'Actor In A Supporting Role - Series Or Television Movie'\n"," 'Actress In A Leading Role - Musical Or Comedy Series Or Television Movie'\n"," 'Best Performance by an Actress in a Motion Picture - Musical or Comedy'\n"," 'Best Performance by an Actress in a Supporting Role in a Series, Limited Series or Motion Picture Made for Television'\n"," 'Best Performance by an Actor in a Supporting Role in a Series, Limited Series or Motion Picture Made for Television'\n"," 'Television Special - Variety Or Musical'\n"," 'Best Television Limited Series or Motion Picture Made for Television'\n"," 'Best Performance by an Actress in a Limited Series or a Motion Picture Made for Television'\n"," 'Best Performance by an Actor in a Limited Series or a Motion Picture Made for Television'\n"," 'Best Motion Picture - Animated' 'Carol Burnett Award']\n"]}]},{"cell_type":"code","source":["# Dataset cleaning\n","\n","# Assuming 'year_film' is the name of the column\n","gg_df['year_film'] = pd.to_numeric(gg_df['year_film'], errors='coerce')  # Convert the column to numeric\n","\n","# Filter and keep only records after 1950\n","gg_df = gg_df[gg_df['year_film'] >= 1951]\n","\n","# Assuming 'category' is the name of the column\n","movies_categories = [\n","    'Best Motion Picture - Drama',\n","    'Best Motion Picture - Musical or Comedy',\n","    'Best Motion Picture - Foreign Language',\n","    'Best Motion Picture - Animated',\n","    'Best Director - Motion Picture',\n","    'Best Performance by an Actor in a Motion Picture - Drama',\n","    'Best Performance by an Actor in a Motion Picture - Musical or Comedy',\n","    'Best Performance by an Actress in a Motion Picture - Drama',\n","    'Best Performance by an Actress in a Motion Picture - Musical or Comedy',\n","    'Best Performance by an Actor in a Supporting Role in any Motion Picture',\n","    'Best Performance by an Actress in a Supporting Role in any Motion Picture',\n","    'Best Screenplay - Motion Picture',\n","    'Best Original Score - Motion Picture',\n","    'Best Original Song - Motion Picture'\n","]\n","\n","# Filter the DataFrame to keep only relevant categories\n","gg_df = gg_df[gg_df['category'].isin(movies_categories)]\n","\n","# If you want to reset the index after filtering\n","gg_df.reset_index(drop=True, inplace=True)\n","\n","gg_df.info()\n","\n","\n","# Check for missing values\n","print(\"Missing values:\")\n","print(gg_df.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1702024119449,"user_tz":480,"elapsed":3,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"e4ddf813-5824-4d84-9224-fb41aaf14351","id":"eLiu8wiAn_ez"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4155 entries, 0 to 4154\n","Data columns (total 7 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   year_film   4155 non-null   int64 \n"," 1   year_award  4155 non-null   int64 \n"," 2   ceremony    4155 non-null   int64 \n"," 3   category    4155 non-null   object\n"," 4   nominee     4155 non-null   object\n"," 5   film        3435 non-null   object\n"," 6   win         4155 non-null   bool  \n","dtypes: bool(1), int64(3), object(3)\n","memory usage: 198.9+ KB\n","Missing values:\n","year_film       0\n","year_award      0\n","ceremony        0\n","category        0\n","nominee         0\n","film          720\n","win             0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["gg_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1702024119623,"user_tz":480,"elapsed":176,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"ebb4c954-c013-432d-8c58-1a408274494b","id":"5KqmpmRVn_ez"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         year_film   year_award     ceremony\n","count  4155.000000  4155.000000  4155.000000\n","mean   1988.594465  1989.594465    46.594465\n","std      18.472778    18.472778    18.472778\n","min    1951.000000  1952.000000     9.000000\n","25%    1974.000000  1975.000000    32.000000\n","50%    1989.000000  1990.000000    47.000000\n","75%    2005.000000  2006.000000    63.000000\n","max    2019.000000  2020.000000    77.000000"],"text/html":["\n","  <div id=\"df-d20ccf2a-774e-4ec4-9fcb-d5f2cfff3cb5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>year_award</th>\n","      <th>ceremony</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4155.000000</td>\n","      <td>4155.000000</td>\n","      <td>4155.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1988.594465</td>\n","      <td>1989.594465</td>\n","      <td>46.594465</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>18.472778</td>\n","      <td>18.472778</td>\n","      <td>18.472778</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1951.000000</td>\n","      <td>1952.000000</td>\n","      <td>9.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1974.000000</td>\n","      <td>1975.000000</td>\n","      <td>32.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1989.000000</td>\n","      <td>1990.000000</td>\n","      <td>47.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2005.000000</td>\n","      <td>2006.000000</td>\n","      <td>63.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2019.000000</td>\n","      <td>2020.000000</td>\n","      <td>77.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d20ccf2a-774e-4ec4-9fcb-d5f2cfff3cb5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d20ccf2a-774e-4ec4-9fcb-d5f2cfff3cb5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d20ccf2a-774e-4ec4-9fcb-d5f2cfff3cb5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-42987fa3-d091-4aae-9af4-16ba47116596\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-42987fa3-d091-4aae-9af4-16ba47116596')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-42987fa3-d091-4aae-9af4-16ba47116596 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["gg_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"executionInfo":{"status":"ok","timestamp":1702024119623,"user_tz":480,"elapsed":5,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"ba405dbc-66df-491a-fadd-b4ca8a5dfd58","id":"qCnmed40n_e0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year_film  year_award  ceremony                     category  \\\n","0       1951        1952         9  Best Motion Picture - Drama   \n","1       1951        1952         9  Best Motion Picture - Drama   \n","2       1951        1952         9  Best Motion Picture - Drama   \n","3       1951        1952         9  Best Motion Picture - Drama   \n","4       1951        1952         9  Best Motion Picture - Drama   \n","\n","                           nominee film    win  \n","0               A Place In The Sun  NaN   True  \n","1                       Quo Vadis?  NaN  False  \n","2  A Streetcar Named Desire (1951)  NaN  False  \n","3                   Bright Victory  NaN  False  \n","4                  Detective Story  NaN  False  "],"text/html":["\n","  <div id=\"df-76a16a99-dfdf-4f5c-a682-13bc97400d8f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>year_award</th>\n","      <th>ceremony</th>\n","      <th>category</th>\n","      <th>nominee</th>\n","      <th>film</th>\n","      <th>win</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>A Place In The Sun</td>\n","      <td>NaN</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>Quo Vadis?</td>\n","      <td>NaN</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>A Streetcar Named Desire (1951)</td>\n","      <td>NaN</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>Bright Victory</td>\n","      <td>NaN</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>Detective Story</td>\n","      <td>NaN</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76a16a99-dfdf-4f5c-a682-13bc97400d8f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-76a16a99-dfdf-4f5c-a682-13bc97400d8f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-76a16a99-dfdf-4f5c-a682-13bc97400d8f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-73232fe1-5052-4648-bb12-5eb5ce05c4c5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73232fe1-5052-4648-bb12-5eb5ce05c4c5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-73232fe1-5052-4648-bb12-5eb5ce05c4c5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["# Assuming df is your DataFrame\n","# Fill null values in \"nominee\" column with corresponding values from \"film\" column\n","gg_df['film'] = gg_df['film'].fillna(gg_df['nominee'])\n","\n","print(gg_df.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lPuobTTMQ5Xo","executionInfo":{"status":"ok","timestamp":1702024119624,"user_tz":480,"elapsed":6,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"b61c7d25-e719-4c17-e5bd-737132a9c070"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["year_film     0\n","year_award    0\n","ceremony      0\n","category      0\n","nominee       0\n","film          0\n","win           0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["unique_gg_category = gg_df['category'].unique()\n","print(f'Unique category: {unique_gg_category}')\n","for category in unique_gg_category:\n","  gg_df[f'gg_nominee_{category}'] = gg_df['category'].str.contains(category).astype(int)\n","  gg_df[f'gg_winner_{category}'] = (gg_df['win'] & gg_df['category'].str.contains(category)).astype(int)\n","\n","\n","gg_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":846},"id":"X7xMtJLkR3RW","executionInfo":{"status":"ok","timestamp":1702024119794,"user_tz":480,"elapsed":174,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"24d9b69a-5121-4666-ba40-47abd14f0dcc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Unique category: ['Best Motion Picture - Drama' 'Best Motion Picture - Musical or Comedy'\n"," 'Best Performance by an Actress in a Motion Picture - Drama'\n"," 'Best Performance by an Actor in a Motion Picture - Drama'\n"," 'Best Performance by an Actor in a Motion Picture - Musical or Comedy'\n"," 'Best Performance by an Actress in a Supporting Role in any Motion Picture'\n"," 'Best Performance by an Actor in a Supporting Role in any Motion Picture'\n"," 'Best Director - Motion Picture' 'Best Screenplay - Motion Picture'\n"," 'Best Original Score - Motion Picture'\n"," 'Best Motion Picture - Foreign Language'\n"," 'Best Original Song - Motion Picture'\n"," 'Best Performance by an Actress in a Motion Picture - Musical or Comedy'\n"," 'Best Motion Picture - Animated']\n"]},{"output_type":"execute_result","data":{"text/plain":["   year_film  year_award  ceremony                     category  \\\n","0       1951        1952         9  Best Motion Picture - Drama   \n","1       1951        1952         9  Best Motion Picture - Drama   \n","2       1951        1952         9  Best Motion Picture - Drama   \n","3       1951        1952         9  Best Motion Picture - Drama   \n","4       1951        1952         9  Best Motion Picture - Drama   \n","\n","                           nominee                             film    win  \\\n","0               A Place In The Sun               A Place In The Sun   True   \n","1                       Quo Vadis?                       Quo Vadis?  False   \n","2  A Streetcar Named Desire (1951)  A Streetcar Named Desire (1951)  False   \n","3                   Bright Victory                   Bright Victory  False   \n","4                  Detective Story                  Detective Story  False   \n","\n","   gg_nominee_Best Motion Picture - Drama  \\\n","0                                       1   \n","1                                       1   \n","2                                       1   \n","3                                       1   \n","4                                       1   \n","\n","   gg_winner_Best Motion Picture - Drama  \\\n","0                                      1   \n","1                                      0   \n","2                                      0   \n","3                                      0   \n","4                                      0   \n","\n","   gg_nominee_Best Motion Picture - Musical or Comedy  ...  \\\n","0                                                  0   ...   \n","1                                                  0   ...   \n","2                                                  0   ...   \n","3                                                  0   ...   \n","4                                                  0   ...   \n","\n","   gg_nominee_Best Original Score - Motion Picture  \\\n","0                                                0   \n","1                                                0   \n","2                                                0   \n","3                                                0   \n","4                                                0   \n","\n","   gg_winner_Best Original Score - Motion Picture  \\\n","0                                               0   \n","1                                               0   \n","2                                               0   \n","3                                               0   \n","4                                               0   \n","\n","   gg_nominee_Best Motion Picture - Foreign Language  \\\n","0                                                  0   \n","1                                                  0   \n","2                                                  0   \n","3                                                  0   \n","4                                                  0   \n","\n","   gg_winner_Best Motion Picture - Foreign Language  \\\n","0                                                 0   \n","1                                                 0   \n","2                                                 0   \n","3                                                 0   \n","4                                                 0   \n","\n","   gg_nominee_Best Original Song - Motion Picture  \\\n","0                                               0   \n","1                                               0   \n","2                                               0   \n","3                                               0   \n","4                                               0   \n","\n","   gg_winner_Best Original Song - Motion Picture  \\\n","0                                              0   \n","1                                              0   \n","2                                              0   \n","3                                              0   \n","4                                              0   \n","\n","   gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","0                                                  0                                   \n","1                                                  0                                   \n","2                                                  0                                   \n","3                                                  0                                   \n","4                                                  0                                   \n","\n","   gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","0                                                  0                                  \n","1                                                  0                                  \n","2                                                  0                                  \n","3                                                  0                                  \n","4                                                  0                                  \n","\n","   gg_nominee_Best Motion Picture - Animated  \\\n","0                                          0   \n","1                                          0   \n","2                                          0   \n","3                                          0   \n","4                                          0   \n","\n","   gg_winner_Best Motion Picture - Animated  \n","0                                         0  \n","1                                         0  \n","2                                         0  \n","3                                         0  \n","4                                         0  \n","\n","[5 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-1511fe2a-1f91-42f9-94ac-751556f1a721\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>year_award</th>\n","      <th>ceremony</th>\n","      <th>category</th>\n","      <th>nominee</th>\n","      <th>film</th>\n","      <th>win</th>\n","      <th>gg_nominee_Best Motion Picture - Drama</th>\n","      <th>gg_winner_Best Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Motion Picture - Musical or Comedy</th>\n","      <th>...</th>\n","      <th>gg_nominee_Best Original Score - Motion Picture</th>\n","      <th>gg_winner_Best Original Score - Motion Picture</th>\n","      <th>gg_nominee_Best Motion Picture - Foreign Language</th>\n","      <th>gg_winner_Best Motion Picture - Foreign Language</th>\n","      <th>gg_nominee_Best Original Song - Motion Picture</th>\n","      <th>gg_winner_Best Original Song - Motion Picture</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Motion Picture - Animated</th>\n","      <th>gg_winner_Best Motion Picture - Animated</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>A Place In The Sun</td>\n","      <td>A Place In The Sun</td>\n","      <td>True</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>Quo Vadis?</td>\n","      <td>Quo Vadis?</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>A Streetcar Named Desire (1951)</td>\n","      <td>A Streetcar Named Desire (1951)</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>Bright Victory</td>\n","      <td>Bright Victory</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1951</td>\n","      <td>1952</td>\n","      <td>9</td>\n","      <td>Best Motion Picture - Drama</td>\n","      <td>Detective Story</td>\n","      <td>Detective Story</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1511fe2a-1f91-42f9-94ac-751556f1a721')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1511fe2a-1f91-42f9-94ac-751556f1a721 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1511fe2a-1f91-42f9-94ac-751556f1a721');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1c2a11cf-e8b2-41a1-8405-b2f4981f430c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c2a11cf-e8b2-41a1-8405-b2f4981f430c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1c2a11cf-e8b2-41a1-8405-b2f4981f430c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["columns_to_remove = ['category', 'ceremony', 'nominee', 'win', 'year_award']\n","gg_df = gg_df.drop(columns=columns_to_remove)\n","\n","gg_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":516},"id":"IH2GdQgCVNHC","executionInfo":{"status":"ok","timestamp":1702024119795,"user_tz":480,"elapsed":6,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"af24ba13-ef51-4235-c17a-aa1390695f62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year_film                             film  \\\n","0       1951               A Place In The Sun   \n","1       1951                       Quo Vadis?   \n","2       1951  A Streetcar Named Desire (1951)   \n","3       1951                   Bright Victory   \n","4       1951                  Detective Story   \n","\n","   gg_nominee_Best Motion Picture - Drama  \\\n","0                                       1   \n","1                                       1   \n","2                                       1   \n","3                                       1   \n","4                                       1   \n","\n","   gg_winner_Best Motion Picture - Drama  \\\n","0                                      1   \n","1                                      0   \n","2                                      0   \n","3                                      0   \n","4                                      0   \n","\n","   gg_nominee_Best Motion Picture - Musical or Comedy  \\\n","0                                                  0    \n","1                                                  0    \n","2                                                  0    \n","3                                                  0    \n","4                                                  0    \n","\n","   gg_winner_Best Motion Picture - Musical or Comedy  \\\n","0                                                  0   \n","1                                                  0   \n","2                                                  0   \n","3                                                  0   \n","4                                                  0   \n","\n","   gg_nominee_Best Performance by an Actress in a Motion Picture - Drama  \\\n","0                                                  0                       \n","1                                                  0                       \n","2                                                  0                       \n","3                                                  0                       \n","4                                                  0                       \n","\n","   gg_winner_Best Performance by an Actress in a Motion Picture - Drama  \\\n","0                                                  0                      \n","1                                                  0                      \n","2                                                  0                      \n","3                                                  0                      \n","4                                                  0                      \n","\n","   gg_nominee_Best Performance by an Actor in a Motion Picture - Drama  \\\n","0                                                  0                     \n","1                                                  0                     \n","2                                                  0                     \n","3                                                  0                     \n","4                                                  0                     \n","\n","   gg_winner_Best Performance by an Actor in a Motion Picture - Drama  ...  \\\n","0                                                  0                   ...   \n","1                                                  0                   ...   \n","2                                                  0                   ...   \n","3                                                  0                   ...   \n","4                                                  0                   ...   \n","\n","   gg_nominee_Best Original Score - Motion Picture  \\\n","0                                                0   \n","1                                                0   \n","2                                                0   \n","3                                                0   \n","4                                                0   \n","\n","   gg_winner_Best Original Score - Motion Picture  \\\n","0                                               0   \n","1                                               0   \n","2                                               0   \n","3                                               0   \n","4                                               0   \n","\n","   gg_nominee_Best Motion Picture - Foreign Language  \\\n","0                                                  0   \n","1                                                  0   \n","2                                                  0   \n","3                                                  0   \n","4                                                  0   \n","\n","   gg_winner_Best Motion Picture - Foreign Language  \\\n","0                                                 0   \n","1                                                 0   \n","2                                                 0   \n","3                                                 0   \n","4                                                 0   \n","\n","   gg_nominee_Best Original Song - Motion Picture  \\\n","0                                               0   \n","1                                               0   \n","2                                               0   \n","3                                               0   \n","4                                               0   \n","\n","   gg_winner_Best Original Song - Motion Picture  \\\n","0                                              0   \n","1                                              0   \n","2                                              0   \n","3                                              0   \n","4                                              0   \n","\n","   gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","0                                                  0                                   \n","1                                                  0                                   \n","2                                                  0                                   \n","3                                                  0                                   \n","4                                                  0                                   \n","\n","   gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","0                                                  0                                  \n","1                                                  0                                  \n","2                                                  0                                  \n","3                                                  0                                  \n","4                                                  0                                  \n","\n","   gg_nominee_Best Motion Picture - Animated  \\\n","0                                          0   \n","1                                          0   \n","2                                          0   \n","3                                          0   \n","4                                          0   \n","\n","   gg_winner_Best Motion Picture - Animated  \n","0                                         0  \n","1                                         0  \n","2                                         0  \n","3                                         0  \n","4                                         0  \n","\n","[5 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-a0969a8a-8450-4e87-a634-b2c1fae6f239\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>film</th>\n","      <th>gg_nominee_Best Motion Picture - Drama</th>\n","      <th>gg_winner_Best Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Drama</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Performance by an Actor in a Motion Picture - Drama</th>\n","      <th>gg_winner_Best Performance by an Actor in a Motion Picture - Drama</th>\n","      <th>...</th>\n","      <th>gg_nominee_Best Original Score - Motion Picture</th>\n","      <th>gg_winner_Best Original Score - Motion Picture</th>\n","      <th>gg_nominee_Best Motion Picture - Foreign Language</th>\n","      <th>gg_winner_Best Motion Picture - Foreign Language</th>\n","      <th>gg_nominee_Best Original Song - Motion Picture</th>\n","      <th>gg_winner_Best Original Song - Motion Picture</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Motion Picture - Animated</th>\n","      <th>gg_winner_Best Motion Picture - Animated</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1951</td>\n","      <td>A Place In The Sun</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1951</td>\n","      <td>Quo Vadis?</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1951</td>\n","      <td>A Streetcar Named Desire (1951)</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1951</td>\n","      <td>Bright Victory</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1951</td>\n","      <td>Detective Story</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0969a8a-8450-4e87-a634-b2c1fae6f239')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0969a8a-8450-4e87-a634-b2c1fae6f239 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0969a8a-8450-4e87-a634-b2c1fae6f239');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fb1170fd-8bc6-4646-8ebb-4b9551ab263b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fb1170fd-8bc6-4646-8ebb-4b9551ab263b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fb1170fd-8bc6-4646-8ebb-4b9551ab263b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["gg_df = gg_df.groupby('film').agg({\n","    'year_film': 'first',\n","    'gg_nominee_Best Motion Picture - Drama': 'max',\n","    'gg_winner_Best Motion Picture - Drama': 'max',\n","    'gg_nominee_Best Motion Picture - Musical or Comedy': 'max',\n","    'gg_winner_Best Motion Picture - Musical or Comedy': 'max',\n","    'gg_nominee_Best Performance by an Actress in a Motion Picture - Drama': 'max',\n","    'gg_winner_Best Performance by an Actress in a Motion Picture - Drama': 'max',\n","    'gg_nominee_Best Performance by an Actor in a Motion Picture - Drama': 'max',\n","    'gg_winner_Best Performance by an Actor in a Motion Picture - Drama': 'max',\n","    'gg_nominee_Best Performance by an Actor in a Motion Picture - Musical or Comedy': 'max',\n","    'gg_winner_Best Performance by an Actor in a Motion Picture - Musical or Comedy': 'max',\n","    'gg_nominee_Best Performance by an Actress in a Supporting Role in any Motion Picture': 'max',\n","    'gg_winner_Best Performance by an Actress in a Supporting Role in any Motion Picture': 'max',\n","    'gg_nominee_Best Performance by an Actor in a Supporting Role in any Motion Picture': 'max',\n","    'gg_winner_Best Performance by an Actor in a Supporting Role in any Motion Picture': 'max',\n","    'gg_nominee_Best Director - Motion Picture': 'max',\n","    'gg_winner_Best Director - Motion Picture': 'max',\n","    'gg_nominee_Best Screenplay - Motion Picture': 'max',\n","    'gg_winner_Best Screenplay - Motion Picture': 'max',\n","    'gg_nominee_Best Original Score - Motion Picture': 'max',\n","    'gg_winner_Best Original Score - Motion Picture': 'max',\n","    'gg_nominee_Best Motion Picture - Foreign Language': 'max',\n","    'gg_winner_Best Motion Picture - Foreign Language': 'max',\n","    'gg_nominee_Best Original Song - Motion Picture': 'max',\n","    'gg_winner_Best Original Song - Motion Picture': 'max',\n","    'gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy': 'max',\n","    'gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy': 'max',\n","    'gg_nominee_Best Motion Picture - Animated': 'max',\n","    'gg_winner_Best Motion Picture - Animated': 'max',\n","}).reset_index()\n"],"metadata":{"id":"YeI6MFD1mCgE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gg_df = gg_df.set_index('film')\n","gg_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":753},"id":"Wk7ShsYJmeTb","executionInfo":{"status":"ok","timestamp":1702024120039,"user_tz":480,"elapsed":249,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"266a5dff-89a7-44ce-f2ce-a7aaff6bd452"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          year_film  gg_nominee_Best Motion Picture - Drama  \\\n","film                                                                          \n"," Remains of the Day, The       1993                                       1   \n","$1,000,000 Duck                1971                                       0   \n","'Round Midnight                1986                                       0   \n","'night, Mother                 1986                                       0   \n","(500) Days of Summer           2009                                       0   \n","...                             ...                                     ...   \n","Zero Dark Thirty \\t            2012                                       1   \n","Zoot Suit                      1981                                       0   \n","Zootopia                       2016                                       0   \n","Zorba The Greek                1964                                       1   \n","Zorro, The Gay Blade           1981                                       0   \n","\n","                          gg_winner_Best Motion Picture - Drama  \\\n","film                                                              \n"," Remains of the Day, The                                      0   \n","$1,000,000 Duck                                               0   \n","'Round Midnight                                               0   \n","'night, Mother                                                0   \n","(500) Days of Summer                                          0   \n","...                                                         ...   \n","Zero Dark Thirty \\t                                           0   \n","Zoot Suit                                                     0   \n","Zootopia                                                      0   \n","Zorba The Greek                                               0   \n","Zorro, The Gay Blade                                          0   \n","\n","                          gg_nominee_Best Motion Picture - Musical or Comedy  \\\n","film                                                                           \n"," Remains of the Day, The                                                  0    \n","$1,000,000 Duck                                                           0    \n","'Round Midnight                                                           0    \n","'night, Mother                                                            0    \n","(500) Days of Summer                                                      1    \n","...                                                                     ...    \n","Zero Dark Thirty \\t                                                       0    \n","Zoot Suit                                                                 1    \n","Zootopia                                                                  0    \n","Zorba The Greek                                                           0    \n","Zorro, The Gay Blade                                                      0    \n","\n","                          gg_winner_Best Motion Picture - Musical or Comedy  \\\n","film                                                                          \n"," Remains of the Day, The                                                  0   \n","$1,000,000 Duck                                                           0   \n","'Round Midnight                                                           0   \n","'night, Mother                                                            0   \n","(500) Days of Summer                                                      0   \n","...                                                                     ...   \n","Zero Dark Thirty \\t                                                       0   \n","Zoot Suit                                                                 0   \n","Zootopia                                                                  0   \n","Zorba The Greek                                                           0   \n","Zorro, The Gay Blade                                                      0   \n","\n","                          gg_nominee_Best Performance by an Actress in a Motion Picture - Drama  \\\n","film                                                                                              \n"," Remains of the Day, The                                                  1                       \n","$1,000,000 Duck                                                           0                       \n","'Round Midnight                                                           0                       \n","'night, Mother                                                            1                       \n","(500) Days of Summer                                                      0                       \n","...                                                                     ...                       \n","Zero Dark Thirty \\t                                                       1                       \n","Zoot Suit                                                                 0                       \n","Zootopia                                                                  0                       \n","Zorba The Greek                                                           0                       \n","Zorro, The Gay Blade                                                      0                       \n","\n","                          gg_winner_Best Performance by an Actress in a Motion Picture - Drama  \\\n","film                                                                                             \n"," Remains of the Day, The                                                  0                      \n","$1,000,000 Duck                                                           0                      \n","'Round Midnight                                                           0                      \n","'night, Mother                                                            0                      \n","(500) Days of Summer                                                      0                      \n","...                                                                     ...                      \n","Zero Dark Thirty \\t                                                       1                      \n","Zoot Suit                                                                 0                      \n","Zootopia                                                                  0                      \n","Zorba The Greek                                                           0                      \n","Zorro, The Gay Blade                                                      0                      \n","\n","                          gg_nominee_Best Performance by an Actor in a Motion Picture - Drama  \\\n","film                                                                                            \n"," Remains of the Day, The                                                  1                     \n","$1,000,000 Duck                                                           0                     \n","'Round Midnight                                                           1                     \n","'night, Mother                                                            0                     \n","(500) Days of Summer                                                      0                     \n","...                                                                     ...                     \n","Zero Dark Thirty \\t                                                       0                     \n","Zoot Suit                                                                 0                     \n","Zootopia                                                                  0                     \n","Zorba The Greek                                                           1                     \n","Zorro, The Gay Blade                                                      0                     \n","\n","                          gg_winner_Best Performance by an Actor in a Motion Picture - Drama  \\\n","film                                                                                           \n"," Remains of the Day, The                                                  0                    \n","$1,000,000 Duck                                                           0                    \n","'Round Midnight                                                           0                    \n","'night, Mother                                                            0                    \n","(500) Days of Summer                                                      0                    \n","...                                                                     ...                    \n","Zero Dark Thirty \\t                                                       0                    \n","Zoot Suit                                                                 0                    \n","Zootopia                                                                  0                    \n","Zorba The Greek                                                           0                    \n","Zorro, The Gay Blade                                                      0                    \n","\n","                          gg_nominee_Best Performance by an Actor in a Motion Picture - Musical or Comedy  \\\n","film                                                                                                        \n"," Remains of the Day, The                                                  0                                 \n","$1,000,000 Duck                                                           1                                 \n","'Round Midnight                                                           0                                 \n","'night, Mother                                                            0                                 \n","(500) Days of Summer                                                      1                                 \n","...                                                                     ...                                 \n","Zero Dark Thirty \\t                                                       0                                 \n","Zoot Suit                                                                 0                                 \n","Zootopia                                                                  0                                 \n","Zorba The Greek                                                           0                                 \n","Zorro, The Gay Blade                                                      1                                 \n","\n","                          ...  \\\n","film                      ...   \n"," Remains of the Day, The  ...   \n","$1,000,000 Duck           ...   \n","'Round Midnight           ...   \n","'night, Mother            ...   \n","(500) Days of Summer      ...   \n","...                       ...   \n","Zero Dark Thirty \\t       ...   \n","Zoot Suit                 ...   \n","Zootopia                  ...   \n","Zorba The Greek           ...   \n","Zorro, The Gay Blade      ...   \n","\n","                          gg_nominee_Best Original Score - Motion Picture  \\\n","film                                                                        \n"," Remains of the Day, The                                                0   \n","$1,000,000 Duck                                                         0   \n","'Round Midnight                                                         1   \n","'night, Mother                                                          0   \n","(500) Days of Summer                                                    0   \n","...                                                                   ...   \n","Zero Dark Thirty \\t                                                     0   \n","Zoot Suit                                                               0   \n","Zootopia                                                                0   \n","Zorba The Greek                                                         1   \n","Zorro, The Gay Blade                                                    0   \n","\n","                          gg_winner_Best Original Score - Motion Picture  \\\n","film                                                                       \n"," Remains of the Day, The                                               0   \n","$1,000,000 Duck                                                        0   \n","'Round Midnight                                                        0   \n","'night, Mother                                                         0   \n","(500) Days of Summer                                                   0   \n","...                                                                  ...   \n","Zero Dark Thirty \\t                                                    0   \n","Zoot Suit                                                              0   \n","Zootopia                                                               0   \n","Zorba The Greek                                                        0   \n","Zorro, The Gay Blade                                                   0   \n","\n","                          gg_nominee_Best Motion Picture - Foreign Language  \\\n","film                                                                          \n"," Remains of the Day, The                                                  0   \n","$1,000,000 Duck                                                           0   \n","'Round Midnight                                                           0   \n","'night, Mother                                                            0   \n","(500) Days of Summer                                                      0   \n","...                                                                     ...   \n","Zero Dark Thirty \\t                                                       0   \n","Zoot Suit                                                                 0   \n","Zootopia                                                                  0   \n","Zorba The Greek                                                           0   \n","Zorro, The Gay Blade                                                      0   \n","\n","                          gg_winner_Best Motion Picture - Foreign Language  \\\n","film                                                                         \n"," Remains of the Day, The                                                 0   \n","$1,000,000 Duck                                                          0   \n","'Round Midnight                                                          0   \n","'night, Mother                                                           0   \n","(500) Days of Summer                                                     0   \n","...                                                                    ...   \n","Zero Dark Thirty \\t                                                      0   \n","Zoot Suit                                                                0   \n","Zootopia                                                                 0   \n","Zorba The Greek                                                          0   \n","Zorro, The Gay Blade                                                     0   \n","\n","                          gg_nominee_Best Original Song - Motion Picture  \\\n","film                                                                       \n"," Remains of the Day, The                                               0   \n","$1,000,000 Duck                                                        0   \n","'Round Midnight                                                        0   \n","'night, Mother                                                         0   \n","(500) Days of Summer                                                   0   \n","...                                                                  ...   \n","Zero Dark Thirty \\t                                                    0   \n","Zoot Suit                                                              0   \n","Zootopia                                                               0   \n","Zorba The Greek                                                        0   \n","Zorro, The Gay Blade                                                   0   \n","\n","                          gg_winner_Best Original Song - Motion Picture  \\\n","film                                                                      \n"," Remains of the Day, The                                              0   \n","$1,000,000 Duck                                                       0   \n","'Round Midnight                                                       0   \n","'night, Mother                                                        0   \n","(500) Days of Summer                                                  0   \n","...                                                                 ...   \n","Zero Dark Thirty \\t                                                   0   \n","Zoot Suit                                                             0   \n","Zootopia                                                              0   \n","Zorba The Greek                                                       0   \n","Zorro, The Gay Blade                                                  0   \n","\n","                          gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","film                                                                                                          \n"," Remains of the Day, The                                                  0                                   \n","$1,000,000 Duck                                                           0                                   \n","'Round Midnight                                                           0                                   \n","'night, Mother                                                            0                                   \n","(500) Days of Summer                                                      0                                   \n","...                                                                     ...                                   \n","Zero Dark Thirty \\t                                                       0                                   \n","Zoot Suit                                                                 0                                   \n","Zootopia                                                                  0                                   \n","Zorba The Greek                                                           0                                   \n","Zorro, The Gay Blade                                                      0                                   \n","\n","                          gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","film                                                                                                         \n"," Remains of the Day, The                                                  0                                  \n","$1,000,000 Duck                                                           0                                  \n","'Round Midnight                                                           0                                  \n","'night, Mother                                                            0                                  \n","(500) Days of Summer                                                      0                                  \n","...                                                                     ...                                  \n","Zero Dark Thirty \\t                                                       0                                  \n","Zoot Suit                                                                 0                                  \n","Zootopia                                                                  0                                  \n","Zorba The Greek                                                           0                                  \n","Zorro, The Gay Blade                                                      0                                  \n","\n","                          gg_nominee_Best Motion Picture - Animated  \\\n","film                                                                  \n"," Remains of the Day, The                                          0   \n","$1,000,000 Duck                                                   0   \n","'Round Midnight                                                   0   \n","'night, Mother                                                    0   \n","(500) Days of Summer                                              0   \n","...                                                             ...   \n","Zero Dark Thirty \\t                                               0   \n","Zoot Suit                                                         0   \n","Zootopia                                                          1   \n","Zorba The Greek                                                   0   \n","Zorro, The Gay Blade                                              0   \n","\n","                          gg_winner_Best Motion Picture - Animated  \n","film                                                                \n"," Remains of the Day, The                                         0  \n","$1,000,000 Duck                                                  0  \n","'Round Midnight                                                  0  \n","'night, Mother                                                   0  \n","(500) Days of Summer                                             0  \n","...                                                            ...  \n","Zero Dark Thirty \\t                                              0  \n","Zoot Suit                                                        0  \n","Zootopia                                                         1  \n","Zorba The Greek                                                  0  \n","Zorro, The Gay Blade                                             0  \n","\n","[1990 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-3ba58987-082b-4fdf-8c51-f7da0356ab08\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>gg_nominee_Best Motion Picture - Drama</th>\n","      <th>gg_winner_Best Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Drama</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Performance by an Actor in a Motion Picture - Drama</th>\n","      <th>gg_winner_Best Performance by an Actor in a Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Performance by an Actor in a Motion Picture - Musical or Comedy</th>\n","      <th>...</th>\n","      <th>gg_nominee_Best Original Score - Motion Picture</th>\n","      <th>gg_winner_Best Original Score - Motion Picture</th>\n","      <th>gg_nominee_Best Motion Picture - Foreign Language</th>\n","      <th>gg_winner_Best Motion Picture - Foreign Language</th>\n","      <th>gg_nominee_Best Original Song - Motion Picture</th>\n","      <th>gg_winner_Best Original Song - Motion Picture</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Motion Picture - Animated</th>\n","      <th>gg_winner_Best Motion Picture - Animated</th>\n","    </tr>\n","    <tr>\n","      <th>film</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Remains of the Day, The</th>\n","      <td>1993</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>$1,000,000 Duck</th>\n","      <td>1971</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>'Round Midnight</th>\n","      <td>1986</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>'night, Mother</th>\n","      <td>1986</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>(500) Days of Summer</th>\n","      <td>2009</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Zero Dark Thirty \\t</th>\n","      <td>2012</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zoot Suit</th>\n","      <td>1981</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zootopia</th>\n","      <td>2016</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Zorba The Greek</th>\n","      <td>1964</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zorro, The Gay Blade</th>\n","      <td>1981</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1990 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ba58987-082b-4fdf-8c51-f7da0356ab08')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ba58987-082b-4fdf-8c51-f7da0356ab08 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ba58987-082b-4fdf-8c51-f7da0356ab08');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8566f1ec-1158-411d-9e60-ac302362c8ed\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8566f1ec-1158-411d-9e60-ac302362c8ed')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8566f1ec-1158-411d-9e60-ac302362c8ed button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6624a212-b299-4d10-9e5b-3a8e7acc077e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('gg_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6624a212-b299-4d10-9e5b-3a8e7acc077e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('gg_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":53}]},{"cell_type":"markdown","source":["## Oscar nominations dataset"],"metadata":{"id":"Vnsj5Lrln_e3"}},{"cell_type":"code","source":["oscars_file_path = '/content/datasets/oscars.csv'\n","oscars_df = pd.read_csv(oscars_file_path)"],"metadata":{"id":"73wt38OLn_e3","executionInfo":{"status":"ok","timestamp":1702242307016,"user_tz":480,"elapsed":143,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["unique_oscar_categories = oscars_df['category'].unique()\n","print(unique_oscar_categories)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HguhCxjAFTv7","executionInfo":{"status":"ok","timestamp":1702242308065,"user_tz":480,"elapsed":208,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"26bd62f6-ed0d-47d5-8f1f-249cd379ee8f"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["['ACTOR' 'ACTRESS' 'ART DIRECTION' 'CINEMATOGRAPHY'\n"," 'DIRECTING (Comedy Picture)' 'DIRECTING (Dramatic Picture)'\n"," 'ENGINEERING EFFECTS' 'OUTSTANDING PICTURE' 'UNIQUE AND ARTISTIC PICTURE'\n"," 'WRITING (Adaptation)' 'WRITING (Original Story)'\n"," 'WRITING (Title Writing)' 'SPECIAL AWARD' 'DIRECTING' 'WRITING'\n"," 'OUTSTANDING PRODUCTION' 'SOUND RECORDING' 'SHORT SUBJECT (Cartoon)'\n"," 'SHORT SUBJECT (Comedy)' 'SHORT SUBJECT (Novelty)' 'ASSISTANT DIRECTOR'\n"," 'FILM EDITING' 'MUSIC (Scoring)' 'MUSIC (Song)' 'DANCE DIRECTION'\n"," 'WRITING (Screenplay)' 'ACTOR IN A SUPPORTING ROLE'\n"," 'ACTRESS IN A SUPPORTING ROLE' 'SHORT SUBJECT (Color)'\n"," 'SHORT SUBJECT (One-reel)' 'SHORT SUBJECT (Two-reel)'\n"," 'IRVING G. THALBERG MEMORIAL AWARD' 'MUSIC (Original Score)'\n"," 'CINEMATOGRAPHY (Black-and-White)' 'CINEMATOGRAPHY (Color)'\n"," 'SPECIAL EFFECTS' 'ART DIRECTION (Black-and-White)'\n"," 'ART DIRECTION (Color)' 'WRITING (Original Screenplay)'\n"," 'DOCUMENTARY (Short Subject)' 'MUSIC (Music Score of a Dramatic Picture)'\n"," 'MUSIC (Scoring of a Musical Picture)' 'OUTSTANDING MOTION PICTURE'\n"," 'DOCUMENTARY' 'MUSIC (Music Score of a Dramatic or Comedy Picture)'\n"," 'WRITING (Original Motion Picture Story)' 'DOCUMENTARY (Feature)'\n"," 'BEST MOTION PICTURE' 'WRITING (Motion Picture Story)'\n"," 'COSTUME DESIGN (Black-and-White)' 'COSTUME DESIGN (Color)'\n"," 'SPECIAL FOREIGN LANGUAGE FILM AWARD' 'WRITING (Story and Screenplay)'\n"," 'HONORARY FOREIGN LANGUAGE FILM AWARD' 'HONORARY AWARD'\n"," 'FOREIGN LANGUAGE FILM' 'WRITING (Screenplay--Adapted)'\n"," 'WRITING (Screenplay--Original)' 'JEAN HERSHOLT HUMANITARIAN AWARD'\n"," 'COSTUME DESIGN' 'SHORT SUBJECT (Live Action)'\n"," 'WRITING (Screenplay--based on material from another medium)'\n"," 'WRITING (Story and Screenplay--written directly for the screen)' 'SOUND'\n"," 'MUSIC (Music Score--substantially original)'\n"," 'MUSIC (Scoring of Music--adaptation or treatment)' 'BEST PICTURE'\n"," 'SOUND EFFECTS' 'SPECIAL VISUAL EFFECTS' 'MUSIC (Original Music Score)'\n"," 'MUSIC (Original Score--for a motion picture [not a musical])'\n"," 'MUSIC (Score of a Musical Picture--original or adaptation)'\n"," 'MUSIC (Song--Original for the Picture)'\n"," 'WRITING (Story and Screenplay--based on material not previously published or produced)'\n"," 'MUSIC (Original Song Score)'\n"," 'WRITING (Story and Screenplay--based on factual material or material not previously published or produced)'\n"," 'MUSIC (Original Dramatic Score)'\n"," 'MUSIC (Scoring: Adaptation and Original Song Score)'\n"," 'SHORT SUBJECT (Animated)' 'SPECIAL ACHIEVEMENT AWARD (Visual Effects)'\n"," 'MUSIC (Scoring: Original Song Score and Adaptation -or- Scoring: Adaptation)'\n"," 'SHORT FILM (Animated)' 'SHORT FILM (Live Action)'\n"," 'WRITING (Screenplay Adapted from Other Material)'\n"," 'MUSIC (Original Song)' 'SPECIAL ACHIEVEMENT AWARD (Sound Effects)'\n"," 'ACTOR IN A LEADING ROLE' 'ACTRESS IN A LEADING ROLE'\n"," 'MUSIC (Original Song Score and Its Adaptation or Adaptation Score)'\n"," 'WRITING (Screenplay Written Directly for the Screen--based on factual material or on story material not previously published or produced)'\n"," 'VISUAL EFFECTS' 'SPECIAL ACHIEVEMENT AWARD'\n"," 'SPECIAL ACHIEVEMENT AWARD (Sound Effects Editing)'\n"," 'MUSIC (Adaptation Score)'\n"," 'WRITING (Screenplay Based on Material from Another Medium)'\n"," 'WRITING (Screenplay Written Directly for the Screen)'\n"," 'MUSIC (Original Song Score and Its Adaptation -or- Adaptation Score)'\n"," 'SPECIAL ACHIEVEMENT AWARD (Sound Editing)'\n"," 'SHORT FILM (Dramatic Live Action)' 'MAKEUP' 'SOUND EFFECTS EDITING'\n"," 'MUSIC (Original Song Score or Adaptation Score)'\n"," 'WRITING (Screenplay Based on Material Previously Produced or Published)'\n"," 'MUSIC (Original Musical or Comedy Score)' 'SOUND EDITING'\n"," 'ANIMATED FEATURE FILM' 'WRITING (Adapted Screenplay)' 'SOUND MIXING'\n"," 'MAKEUP AND HAIRSTYLING' 'PRODUCTION DESIGN' 'INTERNATIONAL FEATURE FILM'\n"," 'DOCUMENTARY FEATURE FILM' 'DOCUMENTARY SHORT FILM'\n"," 'GORDON E. SAWYER AWARD' 'AWARD OF COMMENDATION']\n"]}]},{"cell_type":"code","source":["matched_categories = [\n","'BEST PICTURE',\n","'ACTOR IN A SUPPORTING ROLE',\n","'ACTRESS IN A SUPPORTING ROLE',\n","'ACTOR IN A LEADING ROLE',\n","'ACTRESS IN A LEADING ROLE',\n","'DIRECTING',\n","'WRITING (Original Screenplay)',\n","'WRITING (Adapted Screenplay)',\n","'CINEMATOGRAPHY',\n","'PRODUCTION DESIGN',\n","'ANIMATED FEATURE FILM',\n","'MUSIC (Original Song)',\n","'MUSIC (Original Score)',\n","'VISUAL EFFECTS',\n","'SOUND',\n","'PRODUCTION DESIGN',\n","'SHORT FILM (Animated)'\n","'SHORT FILM (Live Action)'\n","'INTERNATIONAL FEATURE FILM',\n","'DOCUMENTARY SHORT FILM',\n","'FILM EDITING',\n","'COSTUME DESIGN'\n","]\n","\n","# Filter the DataFrame to include only matched categories\n","oscars_df = oscars_df[oscars_df['category'].isin(matched_categories)]\n","\n","\n","unique_oscar_categories = oscars_df['category'].unique()\n","print(unique_oscar_categories)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iACSxnZQSNrT","executionInfo":{"status":"ok","timestamp":1702242310175,"user_tz":480,"elapsed":244,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"5b5f458d-1cd1-4a77-d3b1-304f633c07e5"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["['CINEMATOGRAPHY' 'DIRECTING' 'FILM EDITING' 'ACTOR IN A SUPPORTING ROLE'\n"," 'ACTRESS IN A SUPPORTING ROLE' 'MUSIC (Original Score)'\n"," 'WRITING (Original Screenplay)' 'COSTUME DESIGN' 'SOUND' 'BEST PICTURE'\n"," 'MUSIC (Original Song)' 'ACTOR IN A LEADING ROLE'\n"," 'ACTRESS IN A LEADING ROLE' 'VISUAL EFFECTS' 'ANIMATED FEATURE FILM'\n"," 'WRITING (Adapted Screenplay)' 'PRODUCTION DESIGN'\n"," 'DOCUMENTARY SHORT FILM']\n"]}]},{"cell_type":"code","source":["oscars_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"c5aj-dzkh4TU","executionInfo":{"status":"ok","timestamp":1702242312257,"user_tz":480,"elapsed":5,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"c264d63c-04ef-4401-d7ab-c8c78353f244"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       year_film  year_ceremony  ceremony                       category  \\\n","8           1927           1928         1                 CINEMATOGRAPHY   \n","9           1927           1928         1                 CINEMATOGRAPHY   \n","10          1927           1928         1                 CINEMATOGRAPHY   \n","51          1928           1929         2                 CINEMATOGRAPHY   \n","52          1928           1929         2                 CINEMATOGRAPHY   \n","...          ...            ...       ...                            ...   \n","10754       2022           2023        95  WRITING (Original Screenplay)   \n","10755       2022           2023        95  WRITING (Original Screenplay)   \n","10756       2022           2023        95  WRITING (Original Screenplay)   \n","10757       2022           2023        95  WRITING (Original Screenplay)   \n","10758       2022           2023        95  WRITING (Original Screenplay)   \n","\n","                                             name  \\\n","8                                   George Barnes   \n","9                                  Charles Rosher   \n","10                                    Karl Struss   \n","51                                  George Barnes   \n","52                                 Clyde De Vinna   \n","...                                           ...   \n","10754                  Written by Martin McDonagh   \n","10755   Written by Daniel Kwan & Daniel Scheinert   \n","10756  Written by Steven Spielberg & Tony Kushner   \n","10757                       Written by Todd Field   \n","10758                    Written by Ruben Östlund   \n","\n","                                    film  winner  \n","8                      The Devil Dancer;   False  \n","9                                Sunrise    True  \n","10                               Sunrise    True  \n","51                 Our Dancing Daughters   False  \n","52       White Shadows in the South Seas    True  \n","...                                  ...     ...  \n","10754          The Banshees of Inisherin   False  \n","10755  Everything Everywhere All at Once    True  \n","10756                      The Fabelmans   False  \n","10757                                Tár   False  \n","10758                Triangle of Sadness   False  \n","\n","[4532 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-f54922f6-c4bf-48a1-a279-02c2df469f67\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>year_ceremony</th>\n","      <th>ceremony</th>\n","      <th>category</th>\n","      <th>name</th>\n","      <th>film</th>\n","      <th>winner</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>1927</td>\n","      <td>1928</td>\n","      <td>1</td>\n","      <td>CINEMATOGRAPHY</td>\n","      <td>George Barnes</td>\n","      <td>The Devil Dancer;</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1927</td>\n","      <td>1928</td>\n","      <td>1</td>\n","      <td>CINEMATOGRAPHY</td>\n","      <td>Charles Rosher</td>\n","      <td>Sunrise</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1927</td>\n","      <td>1928</td>\n","      <td>1</td>\n","      <td>CINEMATOGRAPHY</td>\n","      <td>Karl Struss</td>\n","      <td>Sunrise</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>1928</td>\n","      <td>1929</td>\n","      <td>2</td>\n","      <td>CINEMATOGRAPHY</td>\n","      <td>George Barnes</td>\n","      <td>Our Dancing Daughters</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>1928</td>\n","      <td>1929</td>\n","      <td>2</td>\n","      <td>CINEMATOGRAPHY</td>\n","      <td>Clyde De Vinna</td>\n","      <td>White Shadows in the South Seas</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10754</th>\n","      <td>2022</td>\n","      <td>2023</td>\n","      <td>95</td>\n","      <td>WRITING (Original Screenplay)</td>\n","      <td>Written by Martin McDonagh</td>\n","      <td>The Banshees of Inisherin</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10755</th>\n","      <td>2022</td>\n","      <td>2023</td>\n","      <td>95</td>\n","      <td>WRITING (Original Screenplay)</td>\n","      <td>Written by Daniel Kwan &amp; Daniel Scheinert</td>\n","      <td>Everything Everywhere All at Once</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>10756</th>\n","      <td>2022</td>\n","      <td>2023</td>\n","      <td>95</td>\n","      <td>WRITING (Original Screenplay)</td>\n","      <td>Written by Steven Spielberg &amp; Tony Kushner</td>\n","      <td>The Fabelmans</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10757</th>\n","      <td>2022</td>\n","      <td>2023</td>\n","      <td>95</td>\n","      <td>WRITING (Original Screenplay)</td>\n","      <td>Written by Todd Field</td>\n","      <td>Tár</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10758</th>\n","      <td>2022</td>\n","      <td>2023</td>\n","      <td>95</td>\n","      <td>WRITING (Original Screenplay)</td>\n","      <td>Written by Ruben Östlund</td>\n","      <td>Triangle of Sadness</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4532 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f54922f6-c4bf-48a1-a279-02c2df469f67')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f54922f6-c4bf-48a1-a279-02c2df469f67 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f54922f6-c4bf-48a1-a279-02c2df469f67');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-126108d5-8c7c-4453-a0f7-9307758042e4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-126108d5-8c7c-4453-a0f7-9307758042e4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-126108d5-8c7c-4453-a0f7-9307758042e4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["import re\n","\n","# Add new columns for nominees and winners\n","for category in unique_oscar_categories:\n","    escaped_category = re.escape(category)\n","    oscars_df[f'oscars_nominee_{category}'] = oscars_df['category'].str.contains(escaped_category).astype(int)\n","    oscars_df[f'oscars_winner_{category}'] = (oscars_df['winner'] & oscars_df['category'].str.contains(escaped_category)).astype(int)\n","\n","# Print the modified DataFrame\n","oscars_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"eqZSUZoBXI2s","executionInfo":{"status":"ok","timestamp":1702242314589,"user_tz":480,"elapsed":240,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"1be7b80a-7d10-40d8-f42c-336527ddc627"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         year_film  year_ceremony     ceremony  oscars_nominee_CINEMATOGRAPHY  \\\n","count  4532.000000    4532.000000  4532.000000                    4532.000000   \n","mean   1988.339365    1989.339365    61.349515                       0.073477   \n","std      24.266735      24.266735    24.242314                       0.260947   \n","min    1927.000000    1928.000000     1.000000                       0.000000   \n","25%    1973.000000    1974.000000    46.000000                       0.000000   \n","50%    1992.000000    1993.000000    65.000000                       0.000000   \n","75%    2009.000000    2010.000000    82.000000                       0.000000   \n","max    2022.000000    2023.000000    95.000000                       1.000000   \n","\n","       oscars_winner_CINEMATOGRAPHY  oscars_nominee_DIRECTING  \\\n","count                   4532.000000               4532.000000   \n","mean                       0.015225                  0.102383   \n","std                        0.122460                  0.303185   \n","min                        0.000000                  0.000000   \n","25%                        0.000000                  0.000000   \n","50%                        0.000000                  0.000000   \n","75%                        0.000000                  0.000000   \n","max                        1.000000                  1.000000   \n","\n","       oscars_winner_DIRECTING  oscars_nominee_FILM EDITING  \\\n","count              4532.000000                  4532.000000   \n","mean                  0.020741                     0.098191   \n","std                   0.142533                     0.297605   \n","min                   0.000000                     0.000000   \n","25%                   0.000000                     0.000000   \n","50%                   0.000000                     0.000000   \n","75%                   0.000000                     0.000000   \n","max                   1.000000                     1.000000   \n","\n","       oscars_winner_FILM EDITING  oscars_nominee_ACTOR IN A SUPPORTING ROLE  \\\n","count                 4532.000000                                4532.000000   \n","mean                     0.019638                                   0.095984   \n","std                      0.138769                                   0.294602   \n","min                      0.000000                                   0.000000   \n","25%                      0.000000                                   0.000000   \n","50%                      0.000000                                   0.000000   \n","75%                      0.000000                                   0.000000   \n","max                      1.000000                                   1.000000   \n","\n","       ...  oscars_nominee_VISUAL EFFECTS  oscars_winner_VISUAL EFFECTS  \\\n","count  ...                    4532.000000                   4532.000000   \n","mean   ...                       0.033098                      0.009267   \n","std    ...                       0.178912                      0.095831   \n","min    ...                       0.000000                      0.000000   \n","25%    ...                       0.000000                      0.000000   \n","50%    ...                       0.000000                      0.000000   \n","75%    ...                       0.000000                      0.000000   \n","max    ...                       1.000000                      1.000000   \n","\n","       oscars_nominee_ANIMATED FEATURE FILM  \\\n","count                           4532.000000   \n","mean                               0.020741   \n","std                                0.142533   \n","min                                0.000000   \n","25%                                0.000000   \n","50%                                0.000000   \n","75%                                0.000000   \n","max                                1.000000   \n","\n","       oscars_winner_ANIMATED FEATURE FILM  \\\n","count                          4532.000000   \n","mean                              0.004854   \n","std                               0.069512   \n","min                               0.000000   \n","25%                               0.000000   \n","50%                               0.000000   \n","75%                               0.000000   \n","max                               1.000000   \n","\n","       oscars_nominee_WRITING (Adapted Screenplay)  \\\n","count                                  4532.000000   \n","mean                                      0.023169   \n","std                                       0.150455   \n","min                                       0.000000   \n","25%                                       0.000000   \n","50%                                       0.000000   \n","75%                                       0.000000   \n","max                                       1.000000   \n","\n","       oscars_winner_WRITING (Adapted Screenplay)  \\\n","count                                 4532.000000   \n","mean                                     0.004634   \n","std                                      0.067921   \n","min                                      0.000000   \n","25%                                      0.000000   \n","50%                                      0.000000   \n","75%                                      0.000000   \n","max                                      1.000000   \n","\n","       oscars_nominee_PRODUCTION DESIGN  oscars_winner_PRODUCTION DESIGN  \\\n","count                       4532.000000                      4532.000000   \n","mean                           0.012136                         0.002427   \n","std                            0.109505                         0.049212   \n","min                            0.000000                         0.000000   \n","25%                            0.000000                         0.000000   \n","50%                            0.000000                         0.000000   \n","75%                            0.000000                         0.000000   \n","max                            1.000000                         1.000000   \n","\n","       oscars_nominee_DOCUMENTARY SHORT FILM  \\\n","count                            4532.000000   \n","mean                                0.001103   \n","std                                 0.033201   \n","min                                 0.000000   \n","25%                                 0.000000   \n","50%                                 0.000000   \n","75%                                 0.000000   \n","max                                 1.000000   \n","\n","       oscars_winner_DOCUMENTARY SHORT FILM  \n","count                           4532.000000  \n","mean                               0.000221  \n","std                                0.014854  \n","min                                0.000000  \n","25%                                0.000000  \n","50%                                0.000000  \n","75%                                0.000000  \n","max                                1.000000  \n","\n","[8 rows x 39 columns]"],"text/html":["\n","  <div id=\"df-047958ea-c622-46b2-8adc-a44cb0313c9a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>year_ceremony</th>\n","      <th>ceremony</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY</th>\n","      <th>oscars_winner_CINEMATOGRAPHY</th>\n","      <th>oscars_nominee_DIRECTING</th>\n","      <th>oscars_winner_DIRECTING</th>\n","      <th>oscars_nominee_FILM EDITING</th>\n","      <th>oscars_winner_FILM EDITING</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>...</th>\n","      <th>oscars_nominee_VISUAL EFFECTS</th>\n","      <th>oscars_winner_VISUAL EFFECTS</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN</th>\n","      <th>oscars_winner_PRODUCTION DESIGN</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>...</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","      <td>4532.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1988.339365</td>\n","      <td>1989.339365</td>\n","      <td>61.349515</td>\n","      <td>0.073477</td>\n","      <td>0.015225</td>\n","      <td>0.102383</td>\n","      <td>0.020741</td>\n","      <td>0.098191</td>\n","      <td>0.019638</td>\n","      <td>0.095984</td>\n","      <td>...</td>\n","      <td>0.033098</td>\n","      <td>0.009267</td>\n","      <td>0.020741</td>\n","      <td>0.004854</td>\n","      <td>0.023169</td>\n","      <td>0.004634</td>\n","      <td>0.012136</td>\n","      <td>0.002427</td>\n","      <td>0.001103</td>\n","      <td>0.000221</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>24.266735</td>\n","      <td>24.266735</td>\n","      <td>24.242314</td>\n","      <td>0.260947</td>\n","      <td>0.122460</td>\n","      <td>0.303185</td>\n","      <td>0.142533</td>\n","      <td>0.297605</td>\n","      <td>0.138769</td>\n","      <td>0.294602</td>\n","      <td>...</td>\n","      <td>0.178912</td>\n","      <td>0.095831</td>\n","      <td>0.142533</td>\n","      <td>0.069512</td>\n","      <td>0.150455</td>\n","      <td>0.067921</td>\n","      <td>0.109505</td>\n","      <td>0.049212</td>\n","      <td>0.033201</td>\n","      <td>0.014854</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1927.000000</td>\n","      <td>1928.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1973.000000</td>\n","      <td>1974.000000</td>\n","      <td>46.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1992.000000</td>\n","      <td>1993.000000</td>\n","      <td>65.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2009.000000</td>\n","      <td>2010.000000</td>\n","      <td>82.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2022.000000</td>\n","      <td>2023.000000</td>\n","      <td>95.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 39 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-047958ea-c622-46b2-8adc-a44cb0313c9a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-047958ea-c622-46b2-8adc-a44cb0313c9a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-047958ea-c622-46b2-8adc-a44cb0313c9a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d4f02775-0c0c-4001-931c-de3f5d919eae\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d4f02775-0c0c-4001-931c-de3f5d919eae')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d4f02775-0c0c-4001-931c-de3f5d919eae button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["exclude_features = ['winner', 'name', 'year_ceremony', 'category', 'ceremony']\n","\n","# Drop the specified columns from the DataFrame\n","oscars_df = oscars_df.drop(columns=exclude_features, errors='ignore')"],"metadata":{"id":"uhAVsZQSXtDQ","executionInfo":{"status":"ok","timestamp":1702242341276,"user_tz":480,"elapsed":186,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Print the list of features (column names) in the filtered DataFrame\n","print(oscars_df.columns.tolist())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hl6s_ufAYEbp","executionInfo":{"status":"ok","timestamp":1702242343341,"user_tz":480,"elapsed":155,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"690324d3-3202-4589-b9e7-70c1c6b33768"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["['year_film', 'film', 'oscars_nominee_CINEMATOGRAPHY', 'oscars_winner_CINEMATOGRAPHY', 'oscars_nominee_DIRECTING', 'oscars_winner_DIRECTING', 'oscars_nominee_FILM EDITING', 'oscars_winner_FILM EDITING', 'oscars_nominee_ACTOR IN A SUPPORTING ROLE', 'oscars_winner_ACTOR IN A SUPPORTING ROLE', 'oscars_nominee_ACTRESS IN A SUPPORTING ROLE', 'oscars_winner_ACTRESS IN A SUPPORTING ROLE', 'oscars_nominee_MUSIC (Original Score)', 'oscars_winner_MUSIC (Original Score)', 'oscars_nominee_WRITING (Original Screenplay)', 'oscars_winner_WRITING (Original Screenplay)', 'oscars_nominee_COSTUME DESIGN', 'oscars_winner_COSTUME DESIGN', 'oscars_nominee_SOUND', 'oscars_winner_SOUND', 'oscars_nominee_BEST PICTURE', 'oscars_winner_BEST PICTURE', 'oscars_nominee_MUSIC (Original Song)', 'oscars_winner_MUSIC (Original Song)', 'oscars_nominee_ACTOR IN A LEADING ROLE', 'oscars_winner_ACTOR IN A LEADING ROLE', 'oscars_nominee_ACTRESS IN A LEADING ROLE', 'oscars_winner_ACTRESS IN A LEADING ROLE', 'oscars_nominee_VISUAL EFFECTS', 'oscars_winner_VISUAL EFFECTS', 'oscars_nominee_ANIMATED FEATURE FILM', 'oscars_winner_ANIMATED FEATURE FILM', 'oscars_nominee_WRITING (Adapted Screenplay)', 'oscars_winner_WRITING (Adapted Screenplay)', 'oscars_nominee_PRODUCTION DESIGN', 'oscars_winner_PRODUCTION DESIGN', 'oscars_nominee_DOCUMENTARY SHORT FILM', 'oscars_winner_DOCUMENTARY SHORT FILM']\n"]}]},{"cell_type":"code","source":["# Assuming 'oscars_df' is your original DataFrame\n","\n","# List of features to aggregate\n","features_to_aggregate = [\n","    ('year_film', 'first'),\n","    ('film', 'first'),  # Assuming 'film' should be aggregated using 'first'\n","    ('oscars_nominee_CINEMATOGRAPHY', 'max'),\n","    ('oscars_winner_CINEMATOGRAPHY', 'max'),\n","    ('oscars_nominee_DIRECTING', 'max'),\n","    ('oscars_winner_DIRECTING', 'max'),\n","    ('oscars_nominee_FILM EDITING', 'max'),\n","    ('oscars_winner_FILM EDITING', 'max'),\n","    ('oscars_nominee_ACTOR IN A SUPPORTING ROLE', 'max'),\n","    ('oscars_winner_ACTOR IN A SUPPORTING ROLE', 'max'),\n","    ('oscars_nominee_ACTRESS IN A SUPPORTING ROLE', 'max'),\n","    ('oscars_winner_ACTRESS IN A SUPPORTING ROLE', 'max'),\n","    ('oscars_nominee_MUSIC (Original Score)', 'max'),\n","    ('oscars_winner_MUSIC (Original Score)', 'max'),\n","    ('oscars_nominee_WRITING (Original Screenplay)', 'max'),\n","    ('oscars_winner_WRITING (Original Screenplay)', 'max'),\n","    ('oscars_nominee_COSTUME DESIGN', 'max'),\n","    ('oscars_winner_COSTUME DESIGN', 'max'),\n","    ('oscars_nominee_SOUND', 'max'),\n","    ('oscars_winner_SOUND', 'max'),\n","    ('oscars_nominee_BEST PICTURE', 'max'),\n","    ('oscars_winner_BEST PICTURE', 'max'),\n","    ('oscars_nominee_MUSIC (Original Song)', 'max'),\n","    ('oscars_winner_MUSIC (Original Song)', 'max'),\n","    ('oscars_nominee_ACTOR IN A LEADING ROLE', 'max'),\n","    ('oscars_winner_ACTOR IN A LEADING ROLE', 'max'),\n","    ('oscars_nominee_ACTRESS IN A LEADING ROLE', 'max'),\n","    ('oscars_winner_ACTRESS IN A LEADING ROLE', 'max'),\n","    ('oscars_nominee_VISUAL EFFECTS', 'max'),\n","    ('oscars_winner_VISUAL EFFECTS', 'max'),\n","    ('oscars_nominee_ANIMATED FEATURE FILM', 'max'),\n","    ('oscars_winner_ANIMATED FEATURE FILM', 'max'),\n","    ('oscars_nominee_WRITING (Adapted Screenplay)', 'max'),\n","    ('oscars_winner_WRITING (Adapted Screenplay)', 'max'),\n","    ('oscars_nominee_PRODUCTION DESIGN', 'max'),\n","    ('oscars_winner_PRODUCTION DESIGN', 'max'),\n","    ('oscars_nominee_DOCUMENTARY SHORT FILM', 'max'),\n","    ('oscars_winner_DOCUMENTARY SHORT FILM', 'max')\n","]\n","\n","# Create a dictionary for aggregation\n","aggregation_dict = {feature: func for feature, func in features_to_aggregate}\n","\n","# Group by 'film' and aggregate features\n","oscars_df = oscars_df.groupby('film').agg(aggregation_dict)\n","\n","# Rename the 'year_film' column to 'year'\n","oscars_df.rename(columns={'year_film': 'year'}, inplace=True)\n","\n","oscars_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":640},"id":"Cpqg0DHXX4Hl","executionInfo":{"status":"ok","timestamp":1702242350893,"user_tz":480,"elapsed":204,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"2cb3a7ae-cfb8-45b2-de2c-d56f58a46ee6"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        year                    film  \\\n","film                                                   \n","'Round Midnight         1986         'Round Midnight   \n","...And Justice for All  1979  ...And Justice for All   \n","10                      1979                      10   \n","102 Dalmatians          2000          102 Dalmatians   \n","12 Angry Men            1957            12 Angry Men   \n","...                      ...                     ...   \n","Zelig                   1983                   Zelig   \n","Zero Dark Thirty        2012        Zero Dark Thirty   \n","Zootopia                2016                Zootopia   \n","Zorba the Greek         1964         Zorba the Greek   \n","tick, tick...BOOM!      2021      tick, tick...BOOM!   \n","\n","                        oscars_nominee_CINEMATOGRAPHY  \\\n","film                                                    \n","'Round Midnight                                     0   \n","...And Justice for All                              0   \n","10                                                  0   \n","102 Dalmatians                                      0   \n","12 Angry Men                                        0   \n","...                                               ...   \n","Zelig                                               1   \n","Zero Dark Thirty                                    0   \n","Zootopia                                            0   \n","Zorba the Greek                                     0   \n","tick, tick...BOOM!                                  0   \n","\n","                        oscars_winner_CINEMATOGRAPHY  \\\n","film                                                   \n","'Round Midnight                                    0   \n","...And Justice for All                             0   \n","10                                                 0   \n","102 Dalmatians                                     0   \n","12 Angry Men                                       0   \n","...                                              ...   \n","Zelig                                              0   \n","Zero Dark Thirty                                   0   \n","Zootopia                                           0   \n","Zorba the Greek                                    0   \n","tick, tick...BOOM!                                 0   \n","\n","                        oscars_nominee_DIRECTING  oscars_winner_DIRECTING  \\\n","film                                                                        \n","'Round Midnight                                0                        0   \n","...And Justice for All                         0                        0   \n","10                                             0                        0   \n","102 Dalmatians                                 0                        0   \n","12 Angry Men                                   1                        0   \n","...                                          ...                      ...   \n","Zelig                                          0                        0   \n","Zero Dark Thirty                               0                        0   \n","Zootopia                                       0                        0   \n","Zorba the Greek                                1                        0   \n","tick, tick...BOOM!                             0                        0   \n","\n","                        oscars_nominee_FILM EDITING  \\\n","film                                                  \n","'Round Midnight                                   0   \n","...And Justice for All                            0   \n","10                                                0   \n","102 Dalmatians                                    0   \n","12 Angry Men                                      0   \n","...                                             ...   \n","Zelig                                             0   \n","Zero Dark Thirty                                  1   \n","Zootopia                                          0   \n","Zorba the Greek                                   0   \n","tick, tick...BOOM!                                1   \n","\n","                        oscars_winner_FILM EDITING  \\\n","film                                                 \n","'Round Midnight                                  0   \n","...And Justice for All                           0   \n","10                                               0   \n","102 Dalmatians                                   0   \n","12 Angry Men                                     0   \n","...                                            ...   \n","Zelig                                            0   \n","Zero Dark Thirty                                 0   \n","Zootopia                                         0   \n","Zorba the Greek                                  0   \n","tick, tick...BOOM!                               0   \n","\n","                        oscars_nominee_ACTOR IN A SUPPORTING ROLE  \\\n","film                                                                \n","'Round Midnight                                                 0   \n","...And Justice for All                                          0   \n","10                                                              0   \n","102 Dalmatians                                                  0   \n","12 Angry Men                                                    0   \n","...                                                           ...   \n","Zelig                                                           0   \n","Zero Dark Thirty                                                0   \n","Zootopia                                                        0   \n","Zorba the Greek                                                 0   \n","tick, tick...BOOM!                                              0   \n","\n","                        oscars_winner_ACTOR IN A SUPPORTING ROLE  ...  \\\n","film                                                              ...   \n","'Round Midnight                                                0  ...   \n","...And Justice for All                                         0  ...   \n","10                                                             0  ...   \n","102 Dalmatians                                                 0  ...   \n","12 Angry Men                                                   0  ...   \n","...                                                          ...  ...   \n","Zelig                                                          0  ...   \n","Zero Dark Thirty                                               0  ...   \n","Zootopia                                                       0  ...   \n","Zorba the Greek                                                0  ...   \n","tick, tick...BOOM!                                             0  ...   \n","\n","                        oscars_nominee_VISUAL EFFECTS  \\\n","film                                                    \n","'Round Midnight                                     0   \n","...And Justice for All                              0   \n","10                                                  0   \n","102 Dalmatians                                      0   \n","12 Angry Men                                        0   \n","...                                               ...   \n","Zelig                                               0   \n","Zero Dark Thirty                                    0   \n","Zootopia                                            0   \n","Zorba the Greek                                     0   \n","tick, tick...BOOM!                                  0   \n","\n","                        oscars_winner_VISUAL EFFECTS  \\\n","film                                                   \n","'Round Midnight                                    0   \n","...And Justice for All                             0   \n","10                                                 0   \n","102 Dalmatians                                     0   \n","12 Angry Men                                       0   \n","...                                              ...   \n","Zelig                                              0   \n","Zero Dark Thirty                                   0   \n","Zootopia                                           0   \n","Zorba the Greek                                    0   \n","tick, tick...BOOM!                                 0   \n","\n","                        oscars_nominee_ANIMATED FEATURE FILM  \\\n","film                                                           \n","'Round Midnight                                            0   \n","...And Justice for All                                     0   \n","10                                                         0   \n","102 Dalmatians                                             0   \n","12 Angry Men                                               0   \n","...                                                      ...   \n","Zelig                                                      0   \n","Zero Dark Thirty                                           0   \n","Zootopia                                                   1   \n","Zorba the Greek                                            0   \n","tick, tick...BOOM!                                         0   \n","\n","                        oscars_winner_ANIMATED FEATURE FILM  \\\n","film                                                          \n","'Round Midnight                                           0   \n","...And Justice for All                                    0   \n","10                                                        0   \n","102 Dalmatians                                            0   \n","12 Angry Men                                              0   \n","...                                                     ...   \n","Zelig                                                     0   \n","Zero Dark Thirty                                          0   \n","Zootopia                                                  1   \n","Zorba the Greek                                           0   \n","tick, tick...BOOM!                                        0   \n","\n","                        oscars_nominee_WRITING (Adapted Screenplay)  \\\n","film                                                                  \n","'Round Midnight                                                   0   \n","...And Justice for All                                            0   \n","10                                                                0   \n","102 Dalmatians                                                    0   \n","12 Angry Men                                                      0   \n","...                                                             ...   \n","Zelig                                                             0   \n","Zero Dark Thirty                                                  0   \n","Zootopia                                                          0   \n","Zorba the Greek                                                   0   \n","tick, tick...BOOM!                                                0   \n","\n","                        oscars_winner_WRITING (Adapted Screenplay)  \\\n","film                                                                 \n","'Round Midnight                                                  0   \n","...And Justice for All                                           0   \n","10                                                               0   \n","102 Dalmatians                                                   0   \n","12 Angry Men                                                     0   \n","...                                                            ...   \n","Zelig                                                            0   \n","Zero Dark Thirty                                                 0   \n","Zootopia                                                         0   \n","Zorba the Greek                                                  0   \n","tick, tick...BOOM!                                               0   \n","\n","                        oscars_nominee_PRODUCTION DESIGN  \\\n","film                                                       \n","'Round Midnight                                        0   \n","...And Justice for All                                 0   \n","10                                                     0   \n","102 Dalmatians                                         0   \n","12 Angry Men                                           0   \n","...                                                  ...   \n","Zelig                                                  0   \n","Zero Dark Thirty                                       0   \n","Zootopia                                               0   \n","Zorba the Greek                                        0   \n","tick, tick...BOOM!                                     0   \n","\n","                        oscars_winner_PRODUCTION DESIGN  \\\n","film                                                      \n","'Round Midnight                                       0   \n","...And Justice for All                                0   \n","10                                                    0   \n","102 Dalmatians                                        0   \n","12 Angry Men                                          0   \n","...                                                 ...   \n","Zelig                                                 0   \n","Zero Dark Thirty                                      0   \n","Zootopia                                              0   \n","Zorba the Greek                                       0   \n","tick, tick...BOOM!                                    0   \n","\n","                        oscars_nominee_DOCUMENTARY SHORT FILM  \\\n","film                                                            \n","'Round Midnight                                             0   \n","...And Justice for All                                      0   \n","10                                                          0   \n","102 Dalmatians                                              0   \n","12 Angry Men                                                0   \n","...                                                       ...   \n","Zelig                                                       0   \n","Zero Dark Thirty                                            0   \n","Zootopia                                                    0   \n","Zorba the Greek                                             0   \n","tick, tick...BOOM!                                          0   \n","\n","                        oscars_winner_DOCUMENTARY SHORT FILM  \n","film                                                          \n","'Round Midnight                                            0  \n","...And Justice for All                                     0  \n","10                                                         0  \n","102 Dalmatians                                             0  \n","12 Angry Men                                               0  \n","...                                                      ...  \n","Zelig                                                      0  \n","Zero Dark Thirty                                           0  \n","Zootopia                                                   0  \n","Zorba the Greek                                            0  \n","tick, tick...BOOM!                                         0  \n","\n","[1965 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-019b60c2-ee19-43a9-bdb0-28aa5973b28e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>film</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY</th>\n","      <th>oscars_winner_CINEMATOGRAPHY</th>\n","      <th>oscars_nominee_DIRECTING</th>\n","      <th>oscars_winner_DIRECTING</th>\n","      <th>oscars_nominee_FILM EDITING</th>\n","      <th>oscars_winner_FILM EDITING</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>oscars_winner_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>...</th>\n","      <th>oscars_nominee_VISUAL EFFECTS</th>\n","      <th>oscars_winner_VISUAL EFFECTS</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN</th>\n","      <th>oscars_winner_PRODUCTION DESIGN</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM</th>\n","    </tr>\n","    <tr>\n","      <th>film</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>'Round Midnight</th>\n","      <td>1986</td>\n","      <td>'Round Midnight</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...And Justice for All</th>\n","      <td>1979</td>\n","      <td>...And Justice for All</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1979</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>102 Dalmatians</th>\n","      <td>2000</td>\n","      <td>102 Dalmatians</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12 Angry Men</th>\n","      <td>1957</td>\n","      <td>12 Angry Men</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Zelig</th>\n","      <td>1983</td>\n","      <td>Zelig</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zero Dark Thirty</th>\n","      <td>2012</td>\n","      <td>Zero Dark Thirty</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zootopia</th>\n","      <td>2016</td>\n","      <td>Zootopia</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zorba the Greek</th>\n","      <td>1964</td>\n","      <td>Zorba the Greek</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>tick, tick...BOOM!</th>\n","      <td>2021</td>\n","      <td>tick, tick...BOOM!</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1965 rows × 38 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-019b60c2-ee19-43a9-bdb0-28aa5973b28e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-019b60c2-ee19-43a9-bdb0-28aa5973b28e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-019b60c2-ee19-43a9-bdb0-28aa5973b28e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c080a222-6cc7-4142-b8ea-b6c7bd70aa16\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c080a222-6cc7-4142-b8ea-b6c7bd70aa16')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c080a222-6cc7-4142-b8ea-b6c7bd70aa16 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["## SAG Award nominations dataset"],"metadata":{"id":"mDNeb8Lxn_e3"}},{"cell_type":"code","source":["sag_file_path = '/content/datasets/sag.csv'\n","sag_df = pd.read_csv(sag_file_path)\n","\n","sag_df.head()\n","sag_df.info()\n","sag_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":383},"executionInfo":{"status":"ok","timestamp":1702024121827,"user_tz":480,"elapsed":3,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"0bcdc5aa-eeb5-4bbf-ce62-9eb2a8f7d415","id":"fcrNfzsvn_e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 5759 entries, 0 to 5758\n","Data columns (total 5 columns):\n"," #   Column     Non-Null Count  Dtype \n","---  ------     --------------  ----- \n"," 0   year       5757 non-null   object\n"," 1   category   5759 non-null   object\n"," 2   full_name  5337 non-null   object\n"," 3   show       5705 non-null   object\n"," 4   won        5759 non-null   bool  \n","dtypes: bool(1), object(4)\n","memory usage: 185.7+ KB\n"]},{"output_type":"execute_result","data":{"text/plain":["                      year                    category   full_name  \\\n","count                 5757                        5759        5337   \n","unique                  58                          63        2098   \n","top     2017 - 23rd Annual  ENSEMBLE IN A DRAMA SERIES  EDIE FALCO   \n","freq                   296                        1671          22   \n","\n","                   show    won  \n","count              5705   5759  \n","unique              794      2  \n","top     GAME OF THRONES  False  \n","freq                187   4434  "],"text/html":["\n","  <div id=\"df-3eb8c2b2-e0f8-4f02-b2d6-d20fdbf1dac4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>category</th>\n","      <th>full_name</th>\n","      <th>show</th>\n","      <th>won</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5757</td>\n","      <td>5759</td>\n","      <td>5337</td>\n","      <td>5705</td>\n","      <td>5759</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>58</td>\n","      <td>63</td>\n","      <td>2098</td>\n","      <td>794</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>2017 - 23rd Annual</td>\n","      <td>ENSEMBLE IN A DRAMA SERIES</td>\n","      <td>EDIE FALCO</td>\n","      <td>GAME OF THRONES</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>296</td>\n","      <td>1671</td>\n","      <td>22</td>\n","      <td>187</td>\n","      <td>4434</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3eb8c2b2-e0f8-4f02-b2d6-d20fdbf1dac4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3eb8c2b2-e0f8-4f02-b2d6-d20fdbf1dac4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3eb8c2b2-e0f8-4f02-b2d6-d20fdbf1dac4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5cf2ed39-6fc5-4c94-b912-cbfc77c7bc44\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5cf2ed39-6fc5-4c94-b912-cbfc77c7bc44')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5cf2ed39-6fc5-4c94-b912-cbfc77c7bc44 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["sag_df_temp = sag_df.copy()"],"metadata":{"id":"qE3GDtgDY-iE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sag_df = sag_df_temp"],"metadata":{"id":"ssSwH4JTZA89"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["unique_sag_categories = sag_df['category'].unique()\n","print(unique_sag_categories)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"--7bg8GEZDSM","executionInfo":{"status":"ok","timestamp":1702024121999,"user_tz":480,"elapsed":3,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"89ce2e1f-9e83-4255-9230-3b25f1fabb79"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[' CAST IN A MOTION PICTURE' ' FEMALE ACTOR IN A LEADING ROLE'\n"," ' MALE ACTOR IN A LEADING ROLE' ' FEMALE ACTOR IN A SUPPORTING ROLE'\n"," ' MALE ACTOR IN A SUPPORTING ROLE' ' ENSEMBLE IN A DRAMA SERIES'\n"," ' FEMALE ACTOR IN A DRAMA SERIES' ' MALE ACTOR IN A DRAMA SERIES'\n"," ' ENSEMBLE IN A COMEDY SERIES' ' FEMALE ACTOR IN A COMEDY SERIES'\n"," ' MALE ACTOR IN A COMEDY SERIES'\n"," ' FEMALE ACTOR IN A TELEVISION MOVIE OR LIMITED SERIES'\n"," ' MALE ACTOR IN A TELEVISION MOVIE OR LIMITED SERIES'\n"," ' STUNT ENSEMBLE IN A MOTION PICTURE'\n"," ' STUNT ENSEMBLE IN A COMEDY OR DRAMA SERIES' 'CAST IN A MOTION PICTURE'\n"," 'ENSEMBLE IN A COMEDY SERIES' 'ENSEMBLE IN A DRAMA SERIES'\n"," 'FEMALE IN A COMEDY SERIES' 'FEMALE IN A DRAMA SERIES'\n"," 'FEMALE LEAD IN A MOTION PICTURE' 'FEMALE SUPPORT IN A MOTION PICTURE'\n"," 'FEMALE TV MOVIE OR LIMITED SERIES (MINISERIES)'\n"," 'MALE IN A COMEDY SERIES' 'MALE IN A DRAMA SERIES'\n"," 'MALE LEAD IN A MOTION PICTURE' 'MALE SUPPORT IN A MOTION PICTURE '\n"," 'MALE TV MOVIE OR LIMITED SERIES (MINISERIES)'\n"," 'STUNT ENSEMBLE IN A COMEDY OR DRAMA SERIES'\n"," 'STUNT ENSEMBLE IN A MOTION PICTURE' 'FEMALE COMEDY' 'FEMALE DRAMA'\n"," 'FEMALE LEAD' 'FEMALE SUPPORT' 'FEMALE TV MOVIE OR LIMITED SERIES'\n"," 'MALE COMEDY' 'MALE DRAMA' 'MALE LEAD' 'MALE SUPPORT'\n"," 'MALE TV MOVIE OR LIMITED SERIES' 'STUNT ENSEMBLE IN A SERIES'\n"," 'FEMALE TV MOVIE OR MINISERIES' 'LIFE ACHIEVEMENT'\n"," 'MALE TV MOVIE OR MINISERIES' 'STUNT ENSEMBLE IN A TELEVISION SERIES'\n"," 'FEMALE ACTOR IN A COMEDY SERIES' 'FEMALE ACTOR IN A DRAMA SERIES'\n"," 'FEMALE ACTOR IN A LEADING ROLE' 'FEMALE ACTOR IN A SUPPORTING ROLE'\n"," 'FEMALE ACTOR IN A TELEVISION MOVIE OR MINISERIES'\n"," 'MALE ACTOR IN A COMEDY SERIES' 'MALE ACTOR IN A DRAMA SERIES'\n"," 'MALE ACTOR IN A LEADING ROLE' 'MALE ACTOR IN A SUPPORTING ROLE'\n"," 'MALE ACTOR IN A TELEVISION MOVIE OR MINISERIES' 'FEMALE COMEDY SERIES'\n"," 'FEMALE DRAMA SERIES' 'FEMALE LEAD ROLE' 'FEMALE SUPPORTING ROLE'\n"," 'MALE COMEDY SERIES' 'MALE DRAMA SERIES' 'MALE LEAD ROLE'\n"," 'MALE SUPPORTING ROLE']\n"]}]},{"cell_type":"code","source":["desired_categories = [\n","    'CAST IN A MOTION PICTURE',\n","    'FEMALE ACTOR IN A LEADING ROLE',\n","    'FEMALE LEAD IN A MOTION PICTURE',\n","    'FEMALE LEAD ROLE',\n","    'FEMALE ACTOR IN A SUPPORTING ROLE',\n","    'FEMALE SUPPORT IN A MOTION PICTURE',\n","    'FEMALE SUPPORTING ROLE',\n","    'MALE ACTOR IN A LEADING ROLE',\n","    'MALE LEAD IN A MOTION PICTURE',\n","    'MALE LEAD ROLE',\n","    'MALE ACTOR IN A SUPPORTING ROLE',\n","    'MALE SUPPORT IN A MOTION PICTURE ',\n","    'MALE SUPPORTING ROLE'\n","    'STUNT ENSEMBLE IN A MOTION PICTURE',\n","]\n","\n","# Filter the DataFrame based on desired categories\n","sag_df = sag_df[sag_df['category'].isin(desired_categories)]\n","\n","# Print the unique categories in the filtered DataFrame\n","unique_matched_categories = sag_df['category'].unique()\n","print(unique_matched_categories)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ATw0s2kkZf26","executionInfo":{"status":"ok","timestamp":1702024122272,"user_tz":480,"elapsed":276,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"0aa9c5b2-2f20-42d6-d85b-209acafc90f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['CAST IN A MOTION PICTURE' 'FEMALE LEAD IN A MOTION PICTURE'\n"," 'FEMALE SUPPORT IN A MOTION PICTURE' 'MALE LEAD IN A MOTION PICTURE'\n"," 'MALE SUPPORT IN A MOTION PICTURE ' 'FEMALE ACTOR IN A LEADING ROLE'\n"," 'FEMALE ACTOR IN A SUPPORTING ROLE' 'MALE ACTOR IN A LEADING ROLE'\n"," 'MALE ACTOR IN A SUPPORTING ROLE' 'FEMALE LEAD ROLE'\n"," 'FEMALE SUPPORTING ROLE' 'MALE LEAD ROLE']\n"]}]},{"cell_type":"code","source":["# Assuming sag_df is your DataFrame\n","# Replace 'CAST IN A MOTION PICTURE' and 'show' with the actual column names in your DataFrame\n","category_name = 'CAST IN A MOTION PICTURE'\n","\n","# Step 1: Create a new DataFrame for 'CAST IN A MOTION PICTURE' entries\n","cast_in_motion_picture_df = sag_df[sag_df['category'] == category_name].copy()\n","\n","# Step 2: Remove all 'CAST IN A MOTION PICTURE' entries from sag_df\n","sag_df = sag_df[sag_df['category'] != category_name]\n","\n","# Step 4: Keep only one entry per show in cast_in_motion_picture_df\n","cast_in_motion_picture_df = cast_in_motion_picture_df.drop_duplicates(subset='show')\n","\n","# Step 5: Add back the 'CAST IN A MOTION PICTURE' entries to sag_df\n","sag_df = pd.concat([sag_df, cast_in_motion_picture_df])\n","\n","# Reset the index to avoid any potential issues\n","sag_df = sag_df.reset_index(drop=True)\n","\n","# Print the modified DataFrame\n","sag_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"zVDAkUuNcwNu","executionInfo":{"status":"ok","timestamp":1702024122272,"user_tz":480,"elapsed":274,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"9f9c8d31-f4db-43e4-d0d9-c5faa07efed5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   year                         category         full_name  \\\n","0    2019 - 25th Annual  FEMALE LEAD IN A MOTION PICTURE         LADY GAGA   \n","1    2019 - 25th Annual  FEMALE LEAD IN A MOTION PICTURE  MELISSA MCCARTHY   \n","2    2019 - 25th Annual  FEMALE LEAD IN A MOTION PICTURE       EMILY BLUNT   \n","3    2019 - 25th Annual  FEMALE LEAD IN A MOTION PICTURE     OLIVIA COLMAN   \n","4    2019 - 25th Annual  FEMALE LEAD IN A MOTION PICTURE       GLENN CLOSE   \n","..                  ...                              ...               ...   \n","460   1996 - 2nd Annual         CAST IN A MOTION PICTURE       BILL PAXTON   \n","461   1996 - 2nd Annual         CAST IN A MOTION PICTURE      DANNY DeVITO   \n","462   1996 - 2nd Annual         CAST IN A MOTION PICTURE     ALFRE WOODARD   \n","463   1996 - 2nd Annual         CAST IN A MOTION PICTURE     ANNABETH GISH   \n","464   1996 - 2nd Annual         CAST IN A MOTION PICTURE      ALAN RICKMAN   \n","\n","                              show    won  \n","0                  A STAR IS BORN   False  \n","1         CAN YOU EVER FORGIVE ME?  False  \n","2             MARY POPPINS RETURNS  False  \n","3                    THE FAVOURITE  False  \n","4                         THE WIFE   True  \n","..                             ...    ...  \n","460                      APOLLO 13   True  \n","461                     GET SHORTY  False  \n","462  HOW TO MAKE AN AMERICAN QUILT  False  \n","463                          NIXON  False  \n","464          SENSE AND SENSIBILITY  False  \n","\n","[465 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-700fbaf0-64e1-46b6-b897-13891554e77f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>category</th>\n","      <th>full_name</th>\n","      <th>show</th>\n","      <th>won</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>FEMALE LEAD IN A MOTION PICTURE</td>\n","      <td>LADY GAGA</td>\n","      <td>A STAR IS BORN</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>FEMALE LEAD IN A MOTION PICTURE</td>\n","      <td>MELISSA MCCARTHY</td>\n","      <td>CAN YOU EVER FORGIVE ME?</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>FEMALE LEAD IN A MOTION PICTURE</td>\n","      <td>EMILY BLUNT</td>\n","      <td>MARY POPPINS RETURNS</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>FEMALE LEAD IN A MOTION PICTURE</td>\n","      <td>OLIVIA COLMAN</td>\n","      <td>THE FAVOURITE</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>FEMALE LEAD IN A MOTION PICTURE</td>\n","      <td>GLENN CLOSE</td>\n","      <td>THE WIFE</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>460</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>BILL PAXTON</td>\n","      <td>APOLLO 13</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>461</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>DANNY DeVITO</td>\n","      <td>GET SHORTY</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>462</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ALFRE WOODARD</td>\n","      <td>HOW TO MAKE AN AMERICAN QUILT</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>463</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ANNABETH GISH</td>\n","      <td>NIXON</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>464</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ALAN RICKMAN</td>\n","      <td>SENSE AND SENSIBILITY</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>465 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-700fbaf0-64e1-46b6-b897-13891554e77f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-700fbaf0-64e1-46b6-b897-13891554e77f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-700fbaf0-64e1-46b6-b897-13891554e77f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-848019c6-e2ee-4c25-baf4-ebbecade51e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-848019c6-e2ee-4c25-baf4-ebbecade51e3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-848019c6-e2ee-4c25-baf4-ebbecade51e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d7805370-a6d0-4bc6-9493-454c261c3119\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sag_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d7805370-a6d0-4bc6-9493-454c261c3119 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sag_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["categories_mapping = {\n","    'FEMALE ACTOR IN A LEADING ROLE': 'LEADING ROLE - FEMALE',\n","    'FEMALE LEAD IN A MOTION PICTURE': 'LEADING ROLE - FEMALE',\n","    'FEMALE LEAD ROLE': 'LEADING ROLE - FEMALE',\n","    'FEMALE ACTOR IN A SUPPORTING ROLE': 'SUPPORTING ROLE - FEMALE',\n","    'FEMALE SUPPORT IN A MOTION PICTURE': 'SUPPORTING ROLE - FEMALE',\n","    'FEMALE SUPPORTING ROLE': 'SUPPORTING ROLE - FEMALE',\n","    'MALE ACTOR IN A LEADING ROLE': 'LEADING ROLE - MALE',\n","    'MALE LEAD IN A MOTION PICTURE': 'LEADING ROLE - MALE',\n","    'MALE LEAD ROLE': 'LEADING ROLE - MALE',\n","    'MALE ACTOR IN A SUPPORTING ROLE': 'SUPPORTING ROLE - MALE',\n","    'MALE SUPPORT IN A MOTION PICTURE': 'SUPPORTING ROLE - MALE',\n","    'MALE SUPPORTING ROLE': 'SUPPORTING ROLE - MALE',\n","    'STUNT ENSEMBLE IN A MOTION PICTURE': 'STUNT ENSEMBLE'\n","}\n","\n","# Replace the original categories with unified categories\n","sag_df['category'] = sag_df['category'].replace(categories_mapping)\n","\n","# Print the modified DataFrame\n","sag_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":597},"id":"UqoHL2N6f-46","executionInfo":{"status":"ok","timestamp":1702024122272,"user_tz":480,"elapsed":8,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"a3c5fe54-98b5-42c9-c703-99879749becc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   year                  category         full_name  \\\n","0    2019 - 25th Annual     LEADING ROLE - FEMALE         LADY GAGA   \n","1    2019 - 25th Annual     LEADING ROLE - FEMALE  MELISSA MCCARTHY   \n","2    2019 - 25th Annual     LEADING ROLE - FEMALE       EMILY BLUNT   \n","3    2019 - 25th Annual     LEADING ROLE - FEMALE     OLIVIA COLMAN   \n","4    2019 - 25th Annual     LEADING ROLE - FEMALE       GLENN CLOSE   \n","..                  ...                       ...               ...   \n","460   1996 - 2nd Annual  CAST IN A MOTION PICTURE       BILL PAXTON   \n","461   1996 - 2nd Annual  CAST IN A MOTION PICTURE      DANNY DeVITO   \n","462   1996 - 2nd Annual  CAST IN A MOTION PICTURE     ALFRE WOODARD   \n","463   1996 - 2nd Annual  CAST IN A MOTION PICTURE     ANNABETH GISH   \n","464   1996 - 2nd Annual  CAST IN A MOTION PICTURE      ALAN RICKMAN   \n","\n","                              show    won  \n","0                  A STAR IS BORN   False  \n","1         CAN YOU EVER FORGIVE ME?  False  \n","2             MARY POPPINS RETURNS  False  \n","3                    THE FAVOURITE  False  \n","4                         THE WIFE   True  \n","..                             ...    ...  \n","460                      APOLLO 13   True  \n","461                     GET SHORTY  False  \n","462  HOW TO MAKE AN AMERICAN QUILT  False  \n","463                          NIXON  False  \n","464          SENSE AND SENSIBILITY  False  \n","\n","[465 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-863012bc-8f97-4186-84d3-085a3ba24b23\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>category</th>\n","      <th>full_name</th>\n","      <th>show</th>\n","      <th>won</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>LADY GAGA</td>\n","      <td>A STAR IS BORN</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>MELISSA MCCARTHY</td>\n","      <td>CAN YOU EVER FORGIVE ME?</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>EMILY BLUNT</td>\n","      <td>MARY POPPINS RETURNS</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>OLIVIA COLMAN</td>\n","      <td>THE FAVOURITE</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>GLENN CLOSE</td>\n","      <td>THE WIFE</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>460</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>BILL PAXTON</td>\n","      <td>APOLLO 13</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>461</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>DANNY DeVITO</td>\n","      <td>GET SHORTY</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>462</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ALFRE WOODARD</td>\n","      <td>HOW TO MAKE AN AMERICAN QUILT</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>463</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ANNABETH GISH</td>\n","      <td>NIXON</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>464</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ALAN RICKMAN</td>\n","      <td>SENSE AND SENSIBILITY</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>465 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-863012bc-8f97-4186-84d3-085a3ba24b23')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-863012bc-8f97-4186-84d3-085a3ba24b23 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-863012bc-8f97-4186-84d3-085a3ba24b23');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0bebcb80-b61e-4413-a838-6cb87922101f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0bebcb80-b61e-4413-a838-6cb87922101f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0bebcb80-b61e-4413-a838-6cb87922101f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7b4b8da9-7042-4275-95d8-15a3f1a19ae3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sag_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7b4b8da9-7042-4275-95d8-15a3f1a19ae3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sag_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["# Get unique categories after mapping\n","unique_sag_category = sag_df['category'].unique()\n","print(f'Unique category: {unique_sag_category}')\n","\n","# Add new columns for nominees and winners\n","for category in unique_sag_category:\n","    sag_df[f'sag_nominee_{category}'] = sag_df['category'].str.contains(category).astype(int)\n","    sag_df[f'sag_winner_{category}'] = (sag_df['won'] & sag_df['category'].str.contains(category)).astype(int)\n","\n","# Print the modified DataFrame\n","sag_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":982},"id":"Z3yJLBGafuLF","executionInfo":{"status":"ok","timestamp":1702024122272,"user_tz":480,"elapsed":7,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"0c313466-6dde-4fb1-f7fc-606bbd897c26"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Unique category: ['LEADING ROLE - FEMALE' 'SUPPORTING ROLE - FEMALE' 'LEADING ROLE - MALE'\n"," 'MALE SUPPORT IN A MOTION PICTURE ' 'SUPPORTING ROLE - MALE'\n"," 'CAST IN A MOTION PICTURE']\n"]},{"output_type":"execute_result","data":{"text/plain":["                   year                  category         full_name  \\\n","0    2019 - 25th Annual     LEADING ROLE - FEMALE         LADY GAGA   \n","1    2019 - 25th Annual     LEADING ROLE - FEMALE  MELISSA MCCARTHY   \n","2    2019 - 25th Annual     LEADING ROLE - FEMALE       EMILY BLUNT   \n","3    2019 - 25th Annual     LEADING ROLE - FEMALE     OLIVIA COLMAN   \n","4    2019 - 25th Annual     LEADING ROLE - FEMALE       GLENN CLOSE   \n","..                  ...                       ...               ...   \n","460   1996 - 2nd Annual  CAST IN A MOTION PICTURE       BILL PAXTON   \n","461   1996 - 2nd Annual  CAST IN A MOTION PICTURE      DANNY DeVITO   \n","462   1996 - 2nd Annual  CAST IN A MOTION PICTURE     ALFRE WOODARD   \n","463   1996 - 2nd Annual  CAST IN A MOTION PICTURE     ANNABETH GISH   \n","464   1996 - 2nd Annual  CAST IN A MOTION PICTURE      ALAN RICKMAN   \n","\n","                              show    won  sag_nominee_LEADING ROLE - FEMALE  \\\n","0                  A STAR IS BORN   False                                  1   \n","1         CAN YOU EVER FORGIVE ME?  False                                  1   \n","2             MARY POPPINS RETURNS  False                                  1   \n","3                    THE FAVOURITE  False                                  1   \n","4                         THE WIFE   True                                  1   \n","..                             ...    ...                                ...   \n","460                      APOLLO 13   True                                  0   \n","461                     GET SHORTY  False                                  0   \n","462  HOW TO MAKE AN AMERICAN QUILT  False                                  0   \n","463                          NIXON  False                                  0   \n","464          SENSE AND SENSIBILITY  False                                  0   \n","\n","     sag_winner_LEADING ROLE - FEMALE  sag_nominee_SUPPORTING ROLE - FEMALE  \\\n","0                                   0                                     0   \n","1                                   0                                     0   \n","2                                   0                                     0   \n","3                                   0                                     0   \n","4                                   1                                     0   \n","..                                ...                                   ...   \n","460                                 0                                     0   \n","461                                 0                                     0   \n","462                                 0                                     0   \n","463                                 0                                     0   \n","464                                 0                                     0   \n","\n","     sag_winner_SUPPORTING ROLE - FEMALE  sag_nominee_LEADING ROLE - MALE  \\\n","0                                      0                                0   \n","1                                      0                                0   \n","2                                      0                                0   \n","3                                      0                                0   \n","4                                      0                                0   \n","..                                   ...                              ...   \n","460                                    0                                0   \n","461                                    0                                0   \n","462                                    0                                0   \n","463                                    0                                0   \n","464                                    0                                0   \n","\n","     sag_winner_LEADING ROLE - MALE  \\\n","0                                 0   \n","1                                 0   \n","2                                 0   \n","3                                 0   \n","4                                 0   \n","..                              ...   \n","460                               0   \n","461                               0   \n","462                               0   \n","463                               0   \n","464                               0   \n","\n","     sag_nominee_MALE SUPPORT IN A MOTION PICTURE   \\\n","0                                                0   \n","1                                                0   \n","2                                                0   \n","3                                                0   \n","4                                                0   \n","..                                             ...   \n","460                                              0   \n","461                                              0   \n","462                                              0   \n","463                                              0   \n","464                                              0   \n","\n","     sag_winner_MALE SUPPORT IN A MOTION PICTURE   \\\n","0                                               0   \n","1                                               0   \n","2                                               0   \n","3                                               0   \n","4                                               0   \n","..                                            ...   \n","460                                             0   \n","461                                             0   \n","462                                             0   \n","463                                             0   \n","464                                             0   \n","\n","     sag_nominee_SUPPORTING ROLE - MALE  sag_winner_SUPPORTING ROLE - MALE  \\\n","0                                     0                                  0   \n","1                                     0                                  0   \n","2                                     0                                  0   \n","3                                     0                                  0   \n","4                                     0                                  0   \n","..                                  ...                                ...   \n","460                                   0                                  0   \n","461                                   0                                  0   \n","462                                   0                                  0   \n","463                                   0                                  0   \n","464                                   0                                  0   \n","\n","     sag_nominee_CAST IN A MOTION PICTURE  sag_winner_CAST IN A MOTION PICTURE  \n","0                                       0                                    0  \n","1                                       0                                    0  \n","2                                       0                                    0  \n","3                                       0                                    0  \n","4                                       0                                    0  \n","..                                    ...                                  ...  \n","460                                     1                                    1  \n","461                                     1                                    0  \n","462                                     1                                    0  \n","463                                     1                                    0  \n","464                                     1                                    0  \n","\n","[465 rows x 17 columns]"],"text/html":["\n","  <div id=\"df-17820ba1-586c-44f2-95c5-5d935ab66e29\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>category</th>\n","      <th>full_name</th>\n","      <th>show</th>\n","      <th>won</th>\n","      <th>sag_nominee_LEADING ROLE - FEMALE</th>\n","      <th>sag_winner_LEADING ROLE - FEMALE</th>\n","      <th>sag_nominee_SUPPORTING ROLE - FEMALE</th>\n","      <th>sag_winner_SUPPORTING ROLE - FEMALE</th>\n","      <th>sag_nominee_LEADING ROLE - MALE</th>\n","      <th>sag_winner_LEADING ROLE - MALE</th>\n","      <th>sag_nominee_MALE SUPPORT IN A MOTION PICTURE</th>\n","      <th>sag_winner_MALE SUPPORT IN A MOTION PICTURE</th>\n","      <th>sag_nominee_SUPPORTING ROLE - MALE</th>\n","      <th>sag_winner_SUPPORTING ROLE - MALE</th>\n","      <th>sag_nominee_CAST IN A MOTION PICTURE</th>\n","      <th>sag_winner_CAST IN A MOTION PICTURE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>LADY GAGA</td>\n","      <td>A STAR IS BORN</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>MELISSA MCCARTHY</td>\n","      <td>CAN YOU EVER FORGIVE ME?</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>EMILY BLUNT</td>\n","      <td>MARY POPPINS RETURNS</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>OLIVIA COLMAN</td>\n","      <td>THE FAVOURITE</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2019 - 25th Annual</td>\n","      <td>LEADING ROLE - FEMALE</td>\n","      <td>GLENN CLOSE</td>\n","      <td>THE WIFE</td>\n","      <td>True</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>460</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>BILL PAXTON</td>\n","      <td>APOLLO 13</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>461</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>DANNY DeVITO</td>\n","      <td>GET SHORTY</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>462</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ALFRE WOODARD</td>\n","      <td>HOW TO MAKE AN AMERICAN QUILT</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>463</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ANNABETH GISH</td>\n","      <td>NIXON</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>464</th>\n","      <td>1996 - 2nd Annual</td>\n","      <td>CAST IN A MOTION PICTURE</td>\n","      <td>ALAN RICKMAN</td>\n","      <td>SENSE AND SENSIBILITY</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>465 rows × 17 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-17820ba1-586c-44f2-95c5-5d935ab66e29')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-17820ba1-586c-44f2-95c5-5d935ab66e29 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-17820ba1-586c-44f2-95c5-5d935ab66e29');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-65210010-1e96-4aa5-a764-754669cd53c3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65210010-1e96-4aa5-a764-754669cd53c3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-65210010-1e96-4aa5-a764-754669cd53c3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7d84722a-317e-407a-b673-b80b65c402b9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sag_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7d84722a-317e-407a-b673-b80b65c402b9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sag_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["sag_df['won'] = sag_df['won'].map({'true': 1, 'false': 0})\n","\n","sag_df = sag_df.groupby('show').agg({\n","    'year': 'first',\n","    'sag_nominee_CAST IN A MOTION PICTURE': 'max',\n","    'sag_nominee_LEADING ROLE - FEMALE': 'max',\n","    'sag_nominee_SUPPORTING ROLE - FEMALE': 'max',\n","    'sag_nominee_LEADING ROLE - MALE': 'max',\n","    'sag_nominee_MALE SUPPORT IN A MOTION PICTURE ': 'max',\n","    'sag_nominee_SUPPORTING ROLE - MALE': 'max',\n","    'sag_winner_CAST IN A MOTION PICTURE': 'max',\n","    'sag_winner_LEADING ROLE - FEMALE': 'max',\n","    'sag_winner_SUPPORTING ROLE - FEMALE': 'max',\n","    'sag_winner_LEADING ROLE - MALE': 'max',\n","    'sag_winner_MALE SUPPORT IN A MOTION PICTURE ': 'max',\n","    'sag_winner_SUPPORTING ROLE - MALE': 'max',\n","})"],"metadata":{"id":"GGIQksseh1ue"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sag_df.index.name = 'film'\n","sag_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":857},"id":"IAuIsNKZUVpC","executionInfo":{"status":"ok","timestamp":1702024122273,"user_tz":480,"elapsed":6,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"8b1d0cac-ba0d-4e79-93f7-af0d03cd8c19"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                   year  sag_nominee_CAST IN A MOTION PICTURE  \\\n","film                                                                            \n","12 YEARS A SLAVE     2014 - 20th Annual                                     1   \n","127 HOURS            2011 - 17th Annual                                     0   \n","21 GRAMS             2004 - 10th Annual                                     0   \n","3:10 TO YUMA         2008 - 14th Annual                                     1   \n","A BEAUTIFUL MIND      2002 - 8th Annual                                     1   \n","...                                 ...                                   ...   \n","WHITE OLEANDER        2003 - 9th Annual                                     0   \n","WILD                 2015 - 21st Annual                                     0   \n","WINTER'S BONE        2011 - 17th Annual                                     0   \n","YOU CAN COUNT ON ME   2001 - 7th Annual                                     0   \n","ZERO DARK THIRTY     2013 - 19th Annual                                     0   \n","\n","                     sag_nominee_LEADING ROLE - FEMALE  \\\n","film                                                     \n","12 YEARS A SLAVE                                     0   \n","127 HOURS                                            0   \n","21 GRAMS                                             1   \n","3:10 TO YUMA                                         0   \n","A BEAUTIFUL MIND                                     1   \n","...                                                ...   \n","WHITE OLEANDER                                       0   \n","WILD                                                 1   \n","WINTER'S BONE                                        1   \n","YOU CAN COUNT ON ME                                  1   \n","ZERO DARK THIRTY                                     1   \n","\n","                     sag_nominee_SUPPORTING ROLE - FEMALE  \\\n","film                                                        \n","12 YEARS A SLAVE                                        1   \n","127 HOURS                                               0   \n","21 GRAMS                                                0   \n","3:10 TO YUMA                                            0   \n","A BEAUTIFUL MIND                                        0   \n","...                                                   ...   \n","WHITE OLEANDER                                          1   \n","WILD                                                    0   \n","WINTER'S BONE                                           0   \n","YOU CAN COUNT ON ME                                     0   \n","ZERO DARK THIRTY                                        0   \n","\n","                     sag_nominee_LEADING ROLE - MALE  \\\n","film                                                   \n","12 YEARS A SLAVE                                   1   \n","127 HOURS                                          1   \n","21 GRAMS                                           0   \n","3:10 TO YUMA                                       0   \n","A BEAUTIFUL MIND                                   1   \n","...                                              ...   \n","WHITE OLEANDER                                     0   \n","WILD                                               0   \n","WINTER'S BONE                                      0   \n","YOU CAN COUNT ON ME                                0   \n","ZERO DARK THIRTY                                   0   \n","\n","                     sag_nominee_MALE SUPPORT IN A MOTION PICTURE   \\\n","film                                                                 \n","12 YEARS A SLAVE                                                 0   \n","127 HOURS                                                        0   \n","21 GRAMS                                                         0   \n","3:10 TO YUMA                                                     0   \n","A BEAUTIFUL MIND                                                 0   \n","...                                                            ...   \n","WHITE OLEANDER                                                   0   \n","WILD                                                             0   \n","WINTER'S BONE                                                    0   \n","YOU CAN COUNT ON ME                                              0   \n","ZERO DARK THIRTY                                                 0   \n","\n","                     sag_nominee_SUPPORTING ROLE - MALE  \\\n","film                                                      \n","12 YEARS A SLAVE                                      0   \n","127 HOURS                                             0   \n","21 GRAMS                                              0   \n","3:10 TO YUMA                                          0   \n","A BEAUTIFUL MIND                                      0   \n","...                                                 ...   \n","WHITE OLEANDER                                        0   \n","WILD                                                  0   \n","WINTER'S BONE                                         0   \n","YOU CAN COUNT ON ME                                   0   \n","ZERO DARK THIRTY                                      0   \n","\n","                     sag_winner_CAST IN A MOTION PICTURE  \\\n","film                                                       \n","12 YEARS A SLAVE                                       0   \n","127 HOURS                                              0   \n","21 GRAMS                                               0   \n","3:10 TO YUMA                                           0   \n","A BEAUTIFUL MIND                                       0   \n","...                                                  ...   \n","WHITE OLEANDER                                         0   \n","WILD                                                   0   \n","WINTER'S BONE                                          0   \n","YOU CAN COUNT ON ME                                    0   \n","ZERO DARK THIRTY                                       0   \n","\n","                     sag_winner_LEADING ROLE - FEMALE  \\\n","film                                                    \n","12 YEARS A SLAVE                                    0   \n","127 HOURS                                           0   \n","21 GRAMS                                            0   \n","3:10 TO YUMA                                        0   \n","A BEAUTIFUL MIND                                    0   \n","...                                               ...   \n","WHITE OLEANDER                                      0   \n","WILD                                                0   \n","WINTER'S BONE                                       0   \n","YOU CAN COUNT ON ME                                 0   \n","ZERO DARK THIRTY                                    0   \n","\n","                     sag_winner_SUPPORTING ROLE - FEMALE  \\\n","film                                                       \n","12 YEARS A SLAVE                                       1   \n","127 HOURS                                              0   \n","21 GRAMS                                               0   \n","3:10 TO YUMA                                           0   \n","A BEAUTIFUL MIND                                       0   \n","...                                                  ...   \n","WHITE OLEANDER                                         0   \n","WILD                                                   0   \n","WINTER'S BONE                                          0   \n","YOU CAN COUNT ON ME                                    0   \n","ZERO DARK THIRTY                                       0   \n","\n","                     sag_winner_LEADING ROLE - MALE  \\\n","film                                                  \n","12 YEARS A SLAVE                                  0   \n","127 HOURS                                         0   \n","21 GRAMS                                          0   \n","3:10 TO YUMA                                      0   \n","A BEAUTIFUL MIND                                  1   \n","...                                             ...   \n","WHITE OLEANDER                                    0   \n","WILD                                              0   \n","WINTER'S BONE                                     0   \n","YOU CAN COUNT ON ME                               0   \n","ZERO DARK THIRTY                                  0   \n","\n","                     sag_winner_MALE SUPPORT IN A MOTION PICTURE   \\\n","film                                                                \n","12 YEARS A SLAVE                                                0   \n","127 HOURS                                                       0   \n","21 GRAMS                                                        0   \n","3:10 TO YUMA                                                    0   \n","A BEAUTIFUL MIND                                                0   \n","...                                                           ...   \n","WHITE OLEANDER                                                  0   \n","WILD                                                            0   \n","WINTER'S BONE                                                   0   \n","YOU CAN COUNT ON ME                                             0   \n","ZERO DARK THIRTY                                                0   \n","\n","                     sag_winner_SUPPORTING ROLE - MALE  \n","film                                                    \n","12 YEARS A SLAVE                                     0  \n","127 HOURS                                            0  \n","21 GRAMS                                             0  \n","3:10 TO YUMA                                         0  \n","A BEAUTIFUL MIND                                     0  \n","...                                                ...  \n","WHITE OLEANDER                                       0  \n","WILD                                                 0  \n","WINTER'S BONE                                        0  \n","YOU CAN COUNT ON ME                                  0  \n","ZERO DARK THIRTY                                     0  \n","\n","[304 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-3b146898-949f-47ff-af2e-529ab7722238\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>sag_nominee_CAST IN A MOTION PICTURE</th>\n","      <th>sag_nominee_LEADING ROLE - FEMALE</th>\n","      <th>sag_nominee_SUPPORTING ROLE - FEMALE</th>\n","      <th>sag_nominee_LEADING ROLE - MALE</th>\n","      <th>sag_nominee_MALE SUPPORT IN A MOTION PICTURE</th>\n","      <th>sag_nominee_SUPPORTING ROLE - MALE</th>\n","      <th>sag_winner_CAST IN A MOTION PICTURE</th>\n","      <th>sag_winner_LEADING ROLE - FEMALE</th>\n","      <th>sag_winner_SUPPORTING ROLE - FEMALE</th>\n","      <th>sag_winner_LEADING ROLE - MALE</th>\n","      <th>sag_winner_MALE SUPPORT IN A MOTION PICTURE</th>\n","      <th>sag_winner_SUPPORTING ROLE - MALE</th>\n","    </tr>\n","    <tr>\n","      <th>film</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>12 YEARS A SLAVE</th>\n","      <td>2014 - 20th Annual</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>127 HOURS</th>\n","      <td>2011 - 17th Annual</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21 GRAMS</th>\n","      <td>2004 - 10th Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3:10 TO YUMA</th>\n","      <td>2008 - 14th Annual</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>A BEAUTIFUL MIND</th>\n","      <td>2002 - 8th Annual</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>WHITE OLEANDER</th>\n","      <td>2003 - 9th Annual</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>WILD</th>\n","      <td>2015 - 21st Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>WINTER'S BONE</th>\n","      <td>2011 - 17th Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>YOU CAN COUNT ON ME</th>\n","      <td>2001 - 7th Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ZERO DARK THIRTY</th>\n","      <td>2013 - 19th Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>304 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b146898-949f-47ff-af2e-529ab7722238')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b146898-949f-47ff-af2e-529ab7722238 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b146898-949f-47ff-af2e-529ab7722238');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-26b9839a-bd6c-45db-aa54-b11a80c97f58\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26b9839a-bd6c-45db-aa54-b11a80c97f58')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-26b9839a-bd6c-45db-aa54-b11a80c97f58 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_fc321a1f-4454-4501-bd0e-b0526972b662\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sag_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fc321a1f-4454-4501-bd0e-b0526972b662 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sag_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":70}]},{"cell_type":"markdown","source":["## Matching Golden Globe, Oscar nominations, and SAG Awards with IMDb dataset through ID matching\n","\n"],"metadata":{"id":"v2SEX43MTqQ8"}},{"cell_type":"code","source":["oscars_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"jrR2ccltT4dH","executionInfo":{"status":"ok","timestamp":1702242392196,"user_tz":480,"elapsed":497,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"0654b88b-9572-4ba7-a991-7bfcdfb010c7"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              year  oscars_nominee_CINEMATOGRAPHY  \\\n","count  1965.000000                    1965.000000   \n","mean   1984.108397                       0.167939   \n","std      25.998217                       0.373907   \n","min    1927.000000                       0.000000   \n","25%    1965.000000                       0.000000   \n","50%    1988.000000                       0.000000   \n","75%    2006.000000                       0.000000   \n","max    2022.000000                       1.000000   \n","\n","       oscars_winner_CINEMATOGRAPHY  oscars_nominee_DIRECTING  \\\n","count                   1965.000000               1965.000000   \n","mean                       0.034606                  0.235115   \n","std                        0.182825                  0.424178   \n","min                        0.000000                  0.000000   \n","25%                        0.000000                  0.000000   \n","50%                        0.000000                  0.000000   \n","75%                        0.000000                  0.000000   \n","max                        1.000000                  1.000000   \n","\n","       oscars_winner_DIRECTING  oscars_nominee_FILM EDITING  \\\n","count              1965.000000                  1965.000000   \n","mean                  0.047837                     0.224936   \n","std                   0.213476                     0.417647   \n","min                   0.000000                     0.000000   \n","25%                   0.000000                     0.000000   \n","50%                   0.000000                     0.000000   \n","75%                   0.000000                     0.000000   \n","max                   1.000000                     1.000000   \n","\n","       oscars_winner_FILM EDITING  oscars_nominee_ACTOR IN A SUPPORTING ROLE  \\\n","count                 1965.000000                                1965.000000   \n","mean                     0.045293                                   0.208651   \n","std                      0.207998                                   0.406448   \n","min                      0.000000                                   0.000000   \n","25%                      0.000000                                   0.000000   \n","50%                      0.000000                                   0.000000   \n","75%                      0.000000                                   0.000000   \n","max                      1.000000                                   1.000000   \n","\n","       oscars_winner_ACTOR IN A SUPPORTING ROLE  \\\n","count                               1965.000000   \n","mean                                   0.044275   \n","std                                    0.205757   \n","min                                    0.000000   \n","25%                                    0.000000   \n","50%                                    0.000000   \n","75%                                    0.000000   \n","max                                    1.000000   \n","\n","       oscars_nominee_ACTRESS IN A SUPPORTING ROLE  ...  \\\n","count                                  1965.000000  ...   \n","mean                                      0.202036  ...   \n","std                                       0.401621  ...   \n","min                                       0.000000  ...   \n","25%                                       0.000000  ...   \n","50%                                       0.000000  ...   \n","75%                                       0.000000  ...   \n","max                                       1.000000  ...   \n","\n","       oscars_nominee_VISUAL EFFECTS  oscars_winner_VISUAL EFFECTS  \\\n","count                    1965.000000                   1965.000000   \n","mean                        0.076336                      0.021374   \n","std                         0.265602                      0.144665   \n","min                         0.000000                      0.000000   \n","25%                         0.000000                      0.000000   \n","50%                         0.000000                      0.000000   \n","75%                         0.000000                      0.000000   \n","max                         1.000000                      1.000000   \n","\n","       oscars_nominee_ANIMATED FEATURE FILM  \\\n","count                           1965.000000   \n","mean                               0.047837   \n","std                                0.213476   \n","min                                0.000000   \n","25%                                0.000000   \n","50%                                0.000000   \n","75%                                0.000000   \n","max                                1.000000   \n","\n","       oscars_winner_ANIMATED FEATURE FILM  \\\n","count                          1965.000000   \n","mean                              0.011196   \n","std                               0.105244   \n","min                               0.000000   \n","25%                               0.000000   \n","50%                               0.000000   \n","75%                               0.000000   \n","max                               1.000000   \n","\n","       oscars_nominee_WRITING (Adapted Screenplay)  \\\n","count                                  1965.000000   \n","mean                                      0.053435   \n","std                                       0.224957   \n","min                                       0.000000   \n","25%                                       0.000000   \n","50%                                       0.000000   \n","75%                                       0.000000   \n","max                                       1.000000   \n","\n","       oscars_winner_WRITING (Adapted Screenplay)  \\\n","count                                 1965.000000   \n","mean                                     0.010687   \n","std                                      0.102850   \n","min                                      0.000000   \n","25%                                      0.000000   \n","50%                                      0.000000   \n","75%                                      0.000000   \n","max                                      1.000000   \n","\n","       oscars_nominee_PRODUCTION DESIGN  oscars_winner_PRODUCTION DESIGN  \\\n","count                       1965.000000                      1965.000000   \n","mean                           0.027990                         0.005598   \n","std                            0.164986                         0.074629   \n","min                            0.000000                         0.000000   \n","25%                            0.000000                         0.000000   \n","50%                            0.000000                         0.000000   \n","75%                            0.000000                         0.000000   \n","max                            1.000000                         1.000000   \n","\n","       oscars_nominee_DOCUMENTARY SHORT FILM  \\\n","count                            1965.000000   \n","mean                                0.002545   \n","std                                 0.050392   \n","min                                 0.000000   \n","25%                                 0.000000   \n","50%                                 0.000000   \n","75%                                 0.000000   \n","max                                 1.000000   \n","\n","       oscars_winner_DOCUMENTARY SHORT FILM  \n","count                           1965.000000  \n","mean                               0.000509  \n","std                                0.022559  \n","min                                0.000000  \n","25%                                0.000000  \n","50%                                0.000000  \n","75%                                0.000000  \n","max                                1.000000  \n","\n","[8 rows x 37 columns]"],"text/html":["\n","  <div id=\"df-93f54a8f-9fd6-4635-a3b4-0bbde26632f6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY</th>\n","      <th>oscars_winner_CINEMATOGRAPHY</th>\n","      <th>oscars_nominee_DIRECTING</th>\n","      <th>oscars_winner_DIRECTING</th>\n","      <th>oscars_nominee_FILM EDITING</th>\n","      <th>oscars_winner_FILM EDITING</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>oscars_winner_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>oscars_nominee_ACTRESS IN A SUPPORTING ROLE</th>\n","      <th>...</th>\n","      <th>oscars_nominee_VISUAL EFFECTS</th>\n","      <th>oscars_winner_VISUAL EFFECTS</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN</th>\n","      <th>oscars_winner_PRODUCTION DESIGN</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>...</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","      <td>1965.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1984.108397</td>\n","      <td>0.167939</td>\n","      <td>0.034606</td>\n","      <td>0.235115</td>\n","      <td>0.047837</td>\n","      <td>0.224936</td>\n","      <td>0.045293</td>\n","      <td>0.208651</td>\n","      <td>0.044275</td>\n","      <td>0.202036</td>\n","      <td>...</td>\n","      <td>0.076336</td>\n","      <td>0.021374</td>\n","      <td>0.047837</td>\n","      <td>0.011196</td>\n","      <td>0.053435</td>\n","      <td>0.010687</td>\n","      <td>0.027990</td>\n","      <td>0.005598</td>\n","      <td>0.002545</td>\n","      <td>0.000509</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>25.998217</td>\n","      <td>0.373907</td>\n","      <td>0.182825</td>\n","      <td>0.424178</td>\n","      <td>0.213476</td>\n","      <td>0.417647</td>\n","      <td>0.207998</td>\n","      <td>0.406448</td>\n","      <td>0.205757</td>\n","      <td>0.401621</td>\n","      <td>...</td>\n","      <td>0.265602</td>\n","      <td>0.144665</td>\n","      <td>0.213476</td>\n","      <td>0.105244</td>\n","      <td>0.224957</td>\n","      <td>0.102850</td>\n","      <td>0.164986</td>\n","      <td>0.074629</td>\n","      <td>0.050392</td>\n","      <td>0.022559</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1927.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1965.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1988.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2006.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2022.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 37 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93f54a8f-9fd6-4635-a3b4-0bbde26632f6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-93f54a8f-9fd6-4635-a3b4-0bbde26632f6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-93f54a8f-9fd6-4635-a3b4-0bbde26632f6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0bc94296-935b-4051-bd10-cdddf4deb25c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0bc94296-935b-4051-bd10-cdddf4deb25c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0bc94296-935b-4051-bd10-cdddf4deb25c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["gg_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":753},"id":"EpHnH7GfT-IQ","executionInfo":{"status":"ok","timestamp":1702024123733,"user_tz":480,"elapsed":5,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"f1424c25-6c5a-4ae5-8e17-1acb153c7616"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          year_film  gg_nominee_Best Motion Picture - Drama  \\\n","film                                                                          \n"," Remains of the Day, The       1993                                       1   \n","$1,000,000 Duck                1971                                       0   \n","'Round Midnight                1986                                       0   \n","'night, Mother                 1986                                       0   \n","(500) Days of Summer           2009                                       0   \n","...                             ...                                     ...   \n","Zero Dark Thirty \\t            2012                                       1   \n","Zoot Suit                      1981                                       0   \n","Zootopia                       2016                                       0   \n","Zorba The Greek                1964                                       1   \n","Zorro, The Gay Blade           1981                                       0   \n","\n","                          gg_winner_Best Motion Picture - Drama  \\\n","film                                                              \n"," Remains of the Day, The                                      0   \n","$1,000,000 Duck                                               0   \n","'Round Midnight                                               0   \n","'night, Mother                                                0   \n","(500) Days of Summer                                          0   \n","...                                                         ...   \n","Zero Dark Thirty \\t                                           0   \n","Zoot Suit                                                     0   \n","Zootopia                                                      0   \n","Zorba The Greek                                               0   \n","Zorro, The Gay Blade                                          0   \n","\n","                          gg_nominee_Best Motion Picture - Musical or Comedy  \\\n","film                                                                           \n"," Remains of the Day, The                                                  0    \n","$1,000,000 Duck                                                           0    \n","'Round Midnight                                                           0    \n","'night, Mother                                                            0    \n","(500) Days of Summer                                                      1    \n","...                                                                     ...    \n","Zero Dark Thirty \\t                                                       0    \n","Zoot Suit                                                                 1    \n","Zootopia                                                                  0    \n","Zorba The Greek                                                           0    \n","Zorro, The Gay Blade                                                      0    \n","\n","                          gg_winner_Best Motion Picture - Musical or Comedy  \\\n","film                                                                          \n"," Remains of the Day, The                                                  0   \n","$1,000,000 Duck                                                           0   \n","'Round Midnight                                                           0   \n","'night, Mother                                                            0   \n","(500) Days of Summer                                                      0   \n","...                                                                     ...   \n","Zero Dark Thirty \\t                                                       0   \n","Zoot Suit                                                                 0   \n","Zootopia                                                                  0   \n","Zorba The Greek                                                           0   \n","Zorro, The Gay Blade                                                      0   \n","\n","                          gg_nominee_Best Performance by an Actress in a Motion Picture - Drama  \\\n","film                                                                                              \n"," Remains of the Day, The                                                  1                       \n","$1,000,000 Duck                                                           0                       \n","'Round Midnight                                                           0                       \n","'night, Mother                                                            1                       \n","(500) Days of Summer                                                      0                       \n","...                                                                     ...                       \n","Zero Dark Thirty \\t                                                       1                       \n","Zoot Suit                                                                 0                       \n","Zootopia                                                                  0                       \n","Zorba The Greek                                                           0                       \n","Zorro, The Gay Blade                                                      0                       \n","\n","                          gg_winner_Best Performance by an Actress in a Motion Picture - Drama  \\\n","film                                                                                             \n"," Remains of the Day, The                                                  0                      \n","$1,000,000 Duck                                                           0                      \n","'Round Midnight                                                           0                      \n","'night, Mother                                                            0                      \n","(500) Days of Summer                                                      0                      \n","...                                                                     ...                      \n","Zero Dark Thirty \\t                                                       1                      \n","Zoot Suit                                                                 0                      \n","Zootopia                                                                  0                      \n","Zorba The Greek                                                           0                      \n","Zorro, The Gay Blade                                                      0                      \n","\n","                          gg_nominee_Best Performance by an Actor in a Motion Picture - Drama  \\\n","film                                                                                            \n"," Remains of the Day, The                                                  1                     \n","$1,000,000 Duck                                                           0                     \n","'Round Midnight                                                           1                     \n","'night, Mother                                                            0                     \n","(500) Days of Summer                                                      0                     \n","...                                                                     ...                     \n","Zero Dark Thirty \\t                                                       0                     \n","Zoot Suit                                                                 0                     \n","Zootopia                                                                  0                     \n","Zorba The Greek                                                           1                     \n","Zorro, The Gay Blade                                                      0                     \n","\n","                          gg_winner_Best Performance by an Actor in a Motion Picture - Drama  \\\n","film                                                                                           \n"," Remains of the Day, The                                                  0                    \n","$1,000,000 Duck                                                           0                    \n","'Round Midnight                                                           0                    \n","'night, Mother                                                            0                    \n","(500) Days of Summer                                                      0                    \n","...                                                                     ...                    \n","Zero Dark Thirty \\t                                                       0                    \n","Zoot Suit                                                                 0                    \n","Zootopia                                                                  0                    \n","Zorba The Greek                                                           0                    \n","Zorro, The Gay Blade                                                      0                    \n","\n","                          gg_nominee_Best Performance by an Actor in a Motion Picture - Musical or Comedy  \\\n","film                                                                                                        \n"," Remains of the Day, The                                                  0                                 \n","$1,000,000 Duck                                                           1                                 \n","'Round Midnight                                                           0                                 \n","'night, Mother                                                            0                                 \n","(500) Days of Summer                                                      1                                 \n","...                                                                     ...                                 \n","Zero Dark Thirty \\t                                                       0                                 \n","Zoot Suit                                                                 0                                 \n","Zootopia                                                                  0                                 \n","Zorba The Greek                                                           0                                 \n","Zorro, The Gay Blade                                                      1                                 \n","\n","                          ...  \\\n","film                      ...   \n"," Remains of the Day, The  ...   \n","$1,000,000 Duck           ...   \n","'Round Midnight           ...   \n","'night, Mother            ...   \n","(500) Days of Summer      ...   \n","...                       ...   \n","Zero Dark Thirty \\t       ...   \n","Zoot Suit                 ...   \n","Zootopia                  ...   \n","Zorba The Greek           ...   \n","Zorro, The Gay Blade      ...   \n","\n","                          gg_nominee_Best Original Score - Motion Picture  \\\n","film                                                                        \n"," Remains of the Day, The                                                0   \n","$1,000,000 Duck                                                         0   \n","'Round Midnight                                                         1   \n","'night, Mother                                                          0   \n","(500) Days of Summer                                                    0   \n","...                                                                   ...   \n","Zero Dark Thirty \\t                                                     0   \n","Zoot Suit                                                               0   \n","Zootopia                                                                0   \n","Zorba The Greek                                                         1   \n","Zorro, The Gay Blade                                                    0   \n","\n","                          gg_winner_Best Original Score - Motion Picture  \\\n","film                                                                       \n"," Remains of the Day, The                                               0   \n","$1,000,000 Duck                                                        0   \n","'Round Midnight                                                        0   \n","'night, Mother                                                         0   \n","(500) Days of Summer                                                   0   \n","...                                                                  ...   \n","Zero Dark Thirty \\t                                                    0   \n","Zoot Suit                                                              0   \n","Zootopia                                                               0   \n","Zorba The Greek                                                        0   \n","Zorro, The Gay Blade                                                   0   \n","\n","                          gg_nominee_Best Motion Picture - Foreign Language  \\\n","film                                                                          \n"," Remains of the Day, The                                                  0   \n","$1,000,000 Duck                                                           0   \n","'Round Midnight                                                           0   \n","'night, Mother                                                            0   \n","(500) Days of Summer                                                      0   \n","...                                                                     ...   \n","Zero Dark Thirty \\t                                                       0   \n","Zoot Suit                                                                 0   \n","Zootopia                                                                  0   \n","Zorba The Greek                                                           0   \n","Zorro, The Gay Blade                                                      0   \n","\n","                          gg_winner_Best Motion Picture - Foreign Language  \\\n","film                                                                         \n"," Remains of the Day, The                                                 0   \n","$1,000,000 Duck                                                          0   \n","'Round Midnight                                                          0   \n","'night, Mother                                                           0   \n","(500) Days of Summer                                                     0   \n","...                                                                    ...   \n","Zero Dark Thirty \\t                                                      0   \n","Zoot Suit                                                                0   \n","Zootopia                                                                 0   \n","Zorba The Greek                                                          0   \n","Zorro, The Gay Blade                                                     0   \n","\n","                          gg_nominee_Best Original Song - Motion Picture  \\\n","film                                                                       \n"," Remains of the Day, The                                               0   \n","$1,000,000 Duck                                                        0   \n","'Round Midnight                                                        0   \n","'night, Mother                                                         0   \n","(500) Days of Summer                                                   0   \n","...                                                                  ...   \n","Zero Dark Thirty \\t                                                    0   \n","Zoot Suit                                                              0   \n","Zootopia                                                               0   \n","Zorba The Greek                                                        0   \n","Zorro, The Gay Blade                                                   0   \n","\n","                          gg_winner_Best Original Song - Motion Picture  \\\n","film                                                                      \n"," Remains of the Day, The                                              0   \n","$1,000,000 Duck                                                       0   \n","'Round Midnight                                                       0   \n","'night, Mother                                                        0   \n","(500) Days of Summer                                                  0   \n","...                                                                 ...   \n","Zero Dark Thirty \\t                                                   0   \n","Zoot Suit                                                             0   \n","Zootopia                                                              0   \n","Zorba The Greek                                                       0   \n","Zorro, The Gay Blade                                                  0   \n","\n","                          gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","film                                                                                                          \n"," Remains of the Day, The                                                  0                                   \n","$1,000,000 Duck                                                           0                                   \n","'Round Midnight                                                           0                                   \n","'night, Mother                                                            0                                   \n","(500) Days of Summer                                                      0                                   \n","...                                                                     ...                                   \n","Zero Dark Thirty \\t                                                       0                                   \n","Zoot Suit                                                                 0                                   \n","Zootopia                                                                  0                                   \n","Zorba The Greek                                                           0                                   \n","Zorro, The Gay Blade                                                      0                                   \n","\n","                          gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","film                                                                                                         \n"," Remains of the Day, The                                                  0                                  \n","$1,000,000 Duck                                                           0                                  \n","'Round Midnight                                                           0                                  \n","'night, Mother                                                            0                                  \n","(500) Days of Summer                                                      0                                  \n","...                                                                     ...                                  \n","Zero Dark Thirty \\t                                                       0                                  \n","Zoot Suit                                                                 0                                  \n","Zootopia                                                                  0                                  \n","Zorba The Greek                                                           0                                  \n","Zorro, The Gay Blade                                                      0                                  \n","\n","                          gg_nominee_Best Motion Picture - Animated  \\\n","film                                                                  \n"," Remains of the Day, The                                          0   \n","$1,000,000 Duck                                                   0   \n","'Round Midnight                                                   0   \n","'night, Mother                                                    0   \n","(500) Days of Summer                                              0   \n","...                                                             ...   \n","Zero Dark Thirty \\t                                               0   \n","Zoot Suit                                                         0   \n","Zootopia                                                          1   \n","Zorba The Greek                                                   0   \n","Zorro, The Gay Blade                                              0   \n","\n","                          gg_winner_Best Motion Picture - Animated  \n","film                                                                \n"," Remains of the Day, The                                         0  \n","$1,000,000 Duck                                                  0  \n","'Round Midnight                                                  0  \n","'night, Mother                                                   0  \n","(500) Days of Summer                                             0  \n","...                                                            ...  \n","Zero Dark Thirty \\t                                              0  \n","Zoot Suit                                                        0  \n","Zootopia                                                         1  \n","Zorba The Greek                                                  0  \n","Zorro, The Gay Blade                                             0  \n","\n","[1990 rows x 29 columns]"],"text/html":["\n","  <div id=\"df-63efbe27-b349-409f-b4ee-e455e3af4c11\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_film</th>\n","      <th>gg_nominee_Best Motion Picture - Drama</th>\n","      <th>gg_winner_Best Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Drama</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Performance by an Actor in a Motion Picture - Drama</th>\n","      <th>gg_winner_Best Performance by an Actor in a Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Performance by an Actor in a Motion Picture - Musical or Comedy</th>\n","      <th>...</th>\n","      <th>gg_nominee_Best Original Score - Motion Picture</th>\n","      <th>gg_winner_Best Original Score - Motion Picture</th>\n","      <th>gg_nominee_Best Motion Picture - Foreign Language</th>\n","      <th>gg_winner_Best Motion Picture - Foreign Language</th>\n","      <th>gg_nominee_Best Original Song - Motion Picture</th>\n","      <th>gg_winner_Best Original Song - Motion Picture</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Motion Picture - Animated</th>\n","      <th>gg_winner_Best Motion Picture - Animated</th>\n","    </tr>\n","    <tr>\n","      <th>film</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Remains of the Day, The</th>\n","      <td>1993</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>$1,000,000 Duck</th>\n","      <td>1971</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>'Round Midnight</th>\n","      <td>1986</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>'night, Mother</th>\n","      <td>1986</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>(500) Days of Summer</th>\n","      <td>2009</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Zero Dark Thirty \\t</th>\n","      <td>2012</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zoot Suit</th>\n","      <td>1981</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zootopia</th>\n","      <td>2016</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Zorba The Greek</th>\n","      <td>1964</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zorro, The Gay Blade</th>\n","      <td>1981</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1990 rows × 29 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63efbe27-b349-409f-b4ee-e455e3af4c11')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-63efbe27-b349-409f-b4ee-e455e3af4c11 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-63efbe27-b349-409f-b4ee-e455e3af4c11');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7bfe53cb-b524-41db-be3b-45b43103813e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7bfe53cb-b524-41db-be3b-45b43103813e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7bfe53cb-b524-41db-be3b-45b43103813e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5eabef31-fc72-4e1b-bf92-229b363e0246\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('gg_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5eabef31-fc72-4e1b-bf92-229b363e0246 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('gg_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["sag_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":857},"id":"pI1dXib-T_ZE","executionInfo":{"status":"ok","timestamp":1702024123733,"user_tz":480,"elapsed":4,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"eff41cb2-792b-4a18-c938-80db0aea11cc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                   year  sag_nominee_CAST IN A MOTION PICTURE  \\\n","film                                                                            \n","12 YEARS A SLAVE     2014 - 20th Annual                                     1   \n","127 HOURS            2011 - 17th Annual                                     0   \n","21 GRAMS             2004 - 10th Annual                                     0   \n","3:10 TO YUMA         2008 - 14th Annual                                     1   \n","A BEAUTIFUL MIND      2002 - 8th Annual                                     1   \n","...                                 ...                                   ...   \n","WHITE OLEANDER        2003 - 9th Annual                                     0   \n","WILD                 2015 - 21st Annual                                     0   \n","WINTER'S BONE        2011 - 17th Annual                                     0   \n","YOU CAN COUNT ON ME   2001 - 7th Annual                                     0   \n","ZERO DARK THIRTY     2013 - 19th Annual                                     0   \n","\n","                     sag_nominee_LEADING ROLE - FEMALE  \\\n","film                                                     \n","12 YEARS A SLAVE                                     0   \n","127 HOURS                                            0   \n","21 GRAMS                                             1   \n","3:10 TO YUMA                                         0   \n","A BEAUTIFUL MIND                                     1   \n","...                                                ...   \n","WHITE OLEANDER                                       0   \n","WILD                                                 1   \n","WINTER'S BONE                                        1   \n","YOU CAN COUNT ON ME                                  1   \n","ZERO DARK THIRTY                                     1   \n","\n","                     sag_nominee_SUPPORTING ROLE - FEMALE  \\\n","film                                                        \n","12 YEARS A SLAVE                                        1   \n","127 HOURS                                               0   \n","21 GRAMS                                                0   \n","3:10 TO YUMA                                            0   \n","A BEAUTIFUL MIND                                        0   \n","...                                                   ...   \n","WHITE OLEANDER                                          1   \n","WILD                                                    0   \n","WINTER'S BONE                                           0   \n","YOU CAN COUNT ON ME                                     0   \n","ZERO DARK THIRTY                                        0   \n","\n","                     sag_nominee_LEADING ROLE - MALE  \\\n","film                                                   \n","12 YEARS A SLAVE                                   1   \n","127 HOURS                                          1   \n","21 GRAMS                                           0   \n","3:10 TO YUMA                                       0   \n","A BEAUTIFUL MIND                                   1   \n","...                                              ...   \n","WHITE OLEANDER                                     0   \n","WILD                                               0   \n","WINTER'S BONE                                      0   \n","YOU CAN COUNT ON ME                                0   \n","ZERO DARK THIRTY                                   0   \n","\n","                     sag_nominee_MALE SUPPORT IN A MOTION PICTURE   \\\n","film                                                                 \n","12 YEARS A SLAVE                                                 0   \n","127 HOURS                                                        0   \n","21 GRAMS                                                         0   \n","3:10 TO YUMA                                                     0   \n","A BEAUTIFUL MIND                                                 0   \n","...                                                            ...   \n","WHITE OLEANDER                                                   0   \n","WILD                                                             0   \n","WINTER'S BONE                                                    0   \n","YOU CAN COUNT ON ME                                              0   \n","ZERO DARK THIRTY                                                 0   \n","\n","                     sag_nominee_SUPPORTING ROLE - MALE  \\\n","film                                                      \n","12 YEARS A SLAVE                                      0   \n","127 HOURS                                             0   \n","21 GRAMS                                              0   \n","3:10 TO YUMA                                          0   \n","A BEAUTIFUL MIND                                      0   \n","...                                                 ...   \n","WHITE OLEANDER                                        0   \n","WILD                                                  0   \n","WINTER'S BONE                                         0   \n","YOU CAN COUNT ON ME                                   0   \n","ZERO DARK THIRTY                                      0   \n","\n","                     sag_winner_CAST IN A MOTION PICTURE  \\\n","film                                                       \n","12 YEARS A SLAVE                                       0   \n","127 HOURS                                              0   \n","21 GRAMS                                               0   \n","3:10 TO YUMA                                           0   \n","A BEAUTIFUL MIND                                       0   \n","...                                                  ...   \n","WHITE OLEANDER                                         0   \n","WILD                                                   0   \n","WINTER'S BONE                                          0   \n","YOU CAN COUNT ON ME                                    0   \n","ZERO DARK THIRTY                                       0   \n","\n","                     sag_winner_LEADING ROLE - FEMALE  \\\n","film                                                    \n","12 YEARS A SLAVE                                    0   \n","127 HOURS                                           0   \n","21 GRAMS                                            0   \n","3:10 TO YUMA                                        0   \n","A BEAUTIFUL MIND                                    0   \n","...                                               ...   \n","WHITE OLEANDER                                      0   \n","WILD                                                0   \n","WINTER'S BONE                                       0   \n","YOU CAN COUNT ON ME                                 0   \n","ZERO DARK THIRTY                                    0   \n","\n","                     sag_winner_SUPPORTING ROLE - FEMALE  \\\n","film                                                       \n","12 YEARS A SLAVE                                       1   \n","127 HOURS                                              0   \n","21 GRAMS                                               0   \n","3:10 TO YUMA                                           0   \n","A BEAUTIFUL MIND                                       0   \n","...                                                  ...   \n","WHITE OLEANDER                                         0   \n","WILD                                                   0   \n","WINTER'S BONE                                          0   \n","YOU CAN COUNT ON ME                                    0   \n","ZERO DARK THIRTY                                       0   \n","\n","                     sag_winner_LEADING ROLE - MALE  \\\n","film                                                  \n","12 YEARS A SLAVE                                  0   \n","127 HOURS                                         0   \n","21 GRAMS                                          0   \n","3:10 TO YUMA                                      0   \n","A BEAUTIFUL MIND                                  1   \n","...                                             ...   \n","WHITE OLEANDER                                    0   \n","WILD                                              0   \n","WINTER'S BONE                                     0   \n","YOU CAN COUNT ON ME                               0   \n","ZERO DARK THIRTY                                  0   \n","\n","                     sag_winner_MALE SUPPORT IN A MOTION PICTURE   \\\n","film                                                                \n","12 YEARS A SLAVE                                                0   \n","127 HOURS                                                       0   \n","21 GRAMS                                                        0   \n","3:10 TO YUMA                                                    0   \n","A BEAUTIFUL MIND                                                0   \n","...                                                           ...   \n","WHITE OLEANDER                                                  0   \n","WILD                                                            0   \n","WINTER'S BONE                                                   0   \n","YOU CAN COUNT ON ME                                             0   \n","ZERO DARK THIRTY                                                0   \n","\n","                     sag_winner_SUPPORTING ROLE - MALE  \n","film                                                    \n","12 YEARS A SLAVE                                     0  \n","127 HOURS                                            0  \n","21 GRAMS                                             0  \n","3:10 TO YUMA                                         0  \n","A BEAUTIFUL MIND                                     0  \n","...                                                ...  \n","WHITE OLEANDER                                       0  \n","WILD                                                 0  \n","WINTER'S BONE                                        0  \n","YOU CAN COUNT ON ME                                  0  \n","ZERO DARK THIRTY                                     0  \n","\n","[304 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-d01f2b56-f68b-4761-8429-70533254c827\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>sag_nominee_CAST IN A MOTION PICTURE</th>\n","      <th>sag_nominee_LEADING ROLE - FEMALE</th>\n","      <th>sag_nominee_SUPPORTING ROLE - FEMALE</th>\n","      <th>sag_nominee_LEADING ROLE - MALE</th>\n","      <th>sag_nominee_MALE SUPPORT IN A MOTION PICTURE</th>\n","      <th>sag_nominee_SUPPORTING ROLE - MALE</th>\n","      <th>sag_winner_CAST IN A MOTION PICTURE</th>\n","      <th>sag_winner_LEADING ROLE - FEMALE</th>\n","      <th>sag_winner_SUPPORTING ROLE - FEMALE</th>\n","      <th>sag_winner_LEADING ROLE - MALE</th>\n","      <th>sag_winner_MALE SUPPORT IN A MOTION PICTURE</th>\n","      <th>sag_winner_SUPPORTING ROLE - MALE</th>\n","    </tr>\n","    <tr>\n","      <th>film</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>12 YEARS A SLAVE</th>\n","      <td>2014 - 20th Annual</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>127 HOURS</th>\n","      <td>2011 - 17th Annual</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21 GRAMS</th>\n","      <td>2004 - 10th Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3:10 TO YUMA</th>\n","      <td>2008 - 14th Annual</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>A BEAUTIFUL MIND</th>\n","      <td>2002 - 8th Annual</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>WHITE OLEANDER</th>\n","      <td>2003 - 9th Annual</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>WILD</th>\n","      <td>2015 - 21st Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>WINTER'S BONE</th>\n","      <td>2011 - 17th Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>YOU CAN COUNT ON ME</th>\n","      <td>2001 - 7th Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ZERO DARK THIRTY</th>\n","      <td>2013 - 19th Annual</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>304 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d01f2b56-f68b-4761-8429-70533254c827')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d01f2b56-f68b-4761-8429-70533254c827 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d01f2b56-f68b-4761-8429-70533254c827');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1cf05be9-77da-4d7c-8acc-7d14a4dbef1f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1cf05be9-77da-4d7c-8acc-7d14a4dbef1f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1cf05be9-77da-4d7c-8acc-7d14a4dbef1f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_758eb505-4bdd-4036-83a8-636f6bc236b8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sag_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_758eb505-4bdd-4036-83a8-636f6bc236b8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sag_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["!pip install IMDbPY"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lqSs0i9XUERW","executionInfo":{"status":"ok","timestamp":1702024131408,"user_tz":480,"elapsed":7678,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"dbd65b9a-9dcd-40b8-cbf8-5c54d9bd926c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting IMDbPY\n","  Downloading IMDbPY-2022.7.9-py3-none-any.whl (1.2 kB)\n","Collecting cinemagoer (from IMDbPY)\n","  Downloading cinemagoer-2023.5.1-py3-none-any.whl (297 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m297.2/297.2 kB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: SQLAlchemy in /usr/local/lib/python3.10/dist-packages (from cinemagoer->IMDbPY) (2.0.23)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from cinemagoer->IMDbPY) (4.9.3)\n","Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy->cinemagoer->IMDbPY) (4.5.0)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy->cinemagoer->IMDbPY) (3.0.1)\n","Installing collected packages: cinemagoer, IMDbPY\n","Successfully installed IMDbPY-2022.7.9 cinemagoer-2023.5.1\n"]}]},{"cell_type":"code","source":["from imdb import IMDb\n","\n","def get_imdb_id(movie_name):\n","    try:\n","        ia = IMDb()\n","        search_results = ia.search_movie(movie_name)\n","        if search_results:\n","            imdb_id = search_results[0].movieID\n","            print(f\"Fetched IMDb ID for '{movie_name}': {imdb_id}\")\n","            return imdb_id\n","        else:\n","            print(f\"No IMDb ID found for '{movie_name}'\")\n","            return None\n","    except Exception as e:\n","        print(f\"Error fetching IMDb ID for '{movie_name}': {str(e)}\")\n","        return None\n","\n","# Assuming 'gg_df', 'sag_df', 'oscars_df' are your DataFrames\n","dataframes = {'gg_df': gg_df, 'sag_df': sag_df, 'oscars_df': oscars_df}\n","\n","for df_name, df in dataframes.items():\n","    # Skip DataFrame if 'imdb_id' column already has any value\n","    if 'imdb_id' not in df.columns:\n","        df['imdb_id'] = None\n","\n","    try:\n","        # Only fetch IMDb IDs for rows where 'imdb_id' is not already present\n","        df['imdb_id'] = df.apply(lambda row: get_imdb_id(row.name) if pd.isna(row['imdb_id']) else row['imdb_id'], axis=1)\n","\n","        # Save the DataFrame with IMDb IDs\n","        df.to_csv(f'/content/datasets/{df_name}_with_imdb.csv', index=False)\n","    except Exception as e:\n","        print(f\"Error processing DataFrame '{df_name}': {str(e)}\")\n","\n","# Optionally, you can concatenate the DataFrames after processing all of them\n","# merged_df = pd.concat(dataframes.values(), axis=0, ignore_index=True)\n","# Save the merged DataFrame to a file\n","# merged_df.to_csv('/content/datasets/merged_df_with_imdb.csv', index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"ir5yRs3kVzNj","executionInfo":{"status":"error","timestamp":1702024191116,"user_tz":480,"elapsed":59710,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"57069d79-ff07-4cff-9f00-5ed900a0cc8b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fetched IMDb ID for ' Remains of the Day, The': 0107943\n","Fetched IMDb ID for '$1,000,000 Duck': 0066728\n","Fetched IMDb ID for ''Round Midnight': 0090557\n","Fetched IMDb ID for ''night, Mother': 0117093\n","Fetched IMDb ID for '(500) Days of Summer': 1022603\n","Fetched IMDb ID for '10': 23289160\n","Fetched IMDb ID for '101 Dalmatians': 0115433\n","Fetched IMDb ID for '12 Angry Men (1957)': 0050083\n","Fetched IMDb ID for '12 Years a Slave': 2024544\n","Fetched IMDb ID for '127 Hours': 1542344\n","Fetched IMDb ID for '1492: Conquest Of Paradise': 0103594\n","Fetched IMDb ID for '1776': 0068156\n","Fetched IMDb ID for '1917': 8579674\n","Fetched IMDb ID for '20th Century Women': 4385888\n","Fetched IMDb ID for '25th Hour': 0307901\n","Fetched IMDb ID for '40 Carats': 0070068\n","Fetched IMDb ID for '5 Fingers': 0044314\n","Fetched IMDb ID for '50/50': 2322441\n","Fetched IMDb ID for '8 Mile': 0298203\n","Fetched IMDb ID for '99 Homes': 2891174\n","Fetched IMDb ID for 'A Beautiful Mind': 0268978\n","Fetched IMDb ID for 'A Bug's Life': 0120623\n","Fetched IMDb ID for 'A History of Violence': 0399146\n","Fetched IMDb ID for 'A Man And A Woman': 0079520\n","Fetched IMDb ID for 'A Man Could Get Killed': 0060662\n","Fetched IMDb ID for 'A Most Violent Year': 2937898\n","Fetched IMDb ID for 'A Place In The Sun': 0043924\n","Fetched IMDb ID for 'A Single Man': 1315981\n","Fetched IMDb ID for 'A Streetcar Named Desire (1951)': 0044081\n","Fetched IMDb ID for 'A Thousand Acres': 0120323\n","Fetched IMDb ID for 'A Walk in the Clouds': 0114887\n","Fetched IMDb ID for 'A. I.: Artificial Intelligence': 9447174\n","Fetched IMDb ID for 'About Schmidt': 0257360\n","Fetched IMDb ID for 'About a Boy': 0276751\n","Fetched IMDb ID for 'Absence of Malice': 0081974\n","Fetched IMDb ID for 'Absent-Minded Professor, The': 0054594\n","Fetched IMDb ID for 'Accidental Tourist, The': 0094606\n","Fetched IMDb ID for 'Accused, The': 0094608\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-75-b6be8a5b30b8>\u001b[0m in \u001b[0;36m<cell line: 21>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     26\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m         \u001b[0;31m# Only fetch IMDb IDs for rows where 'imdb_id' is not already present\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m         \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'imdb_id'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mget_imdb_id\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'imdb_id'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'imdb_id'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m         \u001b[0;31m# Save the DataFrame with IMDb IDs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, func, axis, raw, result_type, args, **kwargs)\u001b[0m\n\u001b[1;32m   9566\u001b[0m             \u001b[0mkwargs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   9567\u001b[0m         )\n\u001b[0;32m-> 9568\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"apply\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   9569\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   9570\u001b[0m     def applymap(\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/apply.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    762\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_raw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    763\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 764\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_standard\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    765\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    766\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0magg\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/apply.py\u001b[0m in \u001b[0;36mapply_standard\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    889\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    890\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mapply_standard\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 891\u001b[0;31m         \u001b[0mresults\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mres_index\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_series_generator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    892\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    893\u001b[0m         \u001b[0;31m# wrap results\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/apply.py\u001b[0m in \u001b[0;36mapply_series_generator\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    905\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mseries_gen\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    906\u001b[0m                 \u001b[0;31m# ignore SettingWithCopy here in case the user mutates\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 907\u001b[0;31m                 \u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    908\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mABCSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    909\u001b[0m                     \u001b[0;31m# If we have a view on v, we need to make a copy because\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-75-b6be8a5b30b8>\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(row)\u001b[0m\n\u001b[1;32m     26\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m         \u001b[0;31m# Only fetch IMDb IDs for rows where 'imdb_id' is not already present\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m         \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'imdb_id'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mget_imdb_id\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'imdb_id'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'imdb_id'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m         \u001b[0;31m# Save the DataFrame with IMDb IDs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-75-b6be8a5b30b8>\u001b[0m in \u001b[0;36mget_imdb_id\u001b[0;34m(movie_name)\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m         \u001b[0mia\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mIMDb\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m         \u001b[0msearch_results\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mia\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msearch_movie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmovie_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0msearch_results\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m             \u001b[0mimdb_id\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msearch_results\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmovieID\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/imdb/__init__.py\u001b[0m in \u001b[0;36msearch_movie\u001b[0;34m(self, title, results, _episodes)\u001b[0m\n\u001b[1;32m    448\u001b[0m             \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m20\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    449\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0m_episodes\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 450\u001b[0;31m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_search_movie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    451\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    452\u001b[0m             \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_search_episode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/imdb/parser/http/__init__.py\u001b[0m in \u001b[0;36m_search_movie\u001b[0;34m(self, title, results)\u001b[0m\n\u001b[1;32m    419\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_search_movie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtitle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 421\u001b[0;31m         \u001b[0mcont\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_search_content\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'tt'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtitle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    422\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msmProxy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msearch_movie_parser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcont\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    423\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/imdb/parser/http/__init__.py\u001b[0m in \u001b[0;36m_get_search_content\u001b[0;34m(self, kind, ton, results)\u001b[0m\n\u001b[1;32m    407\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mkind\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'ep'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    408\u001b[0m             \u001b[0mparams\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m's=ep&'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m's=tt&ttype=ep&'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 409\u001b[0;31m         \u001b[0mcont\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_retrieve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0murls\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'find'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    410\u001b[0m         \u001b[0;31m# print 'URL:', imdbURL_find % params\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    411\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcont\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Your search returned more than'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m \u001b[0;32mor\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/imdb/parser/http/__init__.py\u001b[0m in \u001b[0;36m_retrieve\u001b[0;34m(self, url, size, _noCookies)\u001b[0m\n\u001b[1;32m    390\u001b[0m         \u001b[0;34m\"\"\"Retrieve the given URL.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    391\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_http_logger\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdebug\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'fetching url %s (size: %d)'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 392\u001b[0;31m         \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0murlOpener\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mretrieve_unicode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    393\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mPY2\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    394\u001b[0m             \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mret\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'utf-8'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/imdb/parser/http/__init__.py\u001b[0m in \u001b[0;36mretrieve_unicode\u001b[0;34m(self, url, size)\u001b[0m\n\u001b[1;32m    231\u001b[0m             \u001b[0muopener\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_opener\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mhandlers\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    232\u001b[0m             \u001b[0muopener\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maddheaders\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maddheaders\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 233\u001b[0;31m             \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0muopener\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    234\u001b[0m             \u001b[0mcontent\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    235\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_last_url\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36mopen\u001b[0;34m(self, fullurl, data, timeout)\u001b[0m\n\u001b[1;32m    517\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    518\u001b[0m         \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maudit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'urllib.Request'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfull_url\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mheaders\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 519\u001b[0;31m         \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_open\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreq\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    520\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    521\u001b[0m         \u001b[0;31m# post-process response\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36m_open\u001b[0;34m(self, req, data)\u001b[0m\n\u001b[1;32m    534\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    535\u001b[0m         \u001b[0mprotocol\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 536\u001b[0;31m         result = self._call_chain(self.handle_open, protocol, protocol +\n\u001b[0m\u001b[1;32m    537\u001b[0m                                   '_open', req)\n\u001b[1;32m    538\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36m_call_chain\u001b[0;34m(self, chain, kind, meth_name, *args)\u001b[0m\n\u001b[1;32m    494\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mhandler\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mhandlers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    495\u001b[0m             \u001b[0mfunc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandler\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmeth_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 496\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    497\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    498\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36mhttps_open\u001b[0;34m(self, req)\u001b[0m\n\u001b[1;32m   1389\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1390\u001b[0m         \u001b[0;32mdef\u001b[0m \u001b[0mhttps_open\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreq\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1391\u001b[0;31m             return self.do_open(http.client.HTTPSConnection, req,\n\u001b[0m\u001b[1;32m   1392\u001b[0m                 context=self._context, check_hostname=self._check_hostname)\n\u001b[1;32m   1393\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/urllib/request.py\u001b[0m in \u001b[0;36mdo_open\u001b[0;34m(self, http_class, req, **http_conn_args)\u001b[0m\n\u001b[1;32m   1350\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mOSError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;31m# timeout error\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1351\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mURLError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1352\u001b[0;31m             \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetresponse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1353\u001b[0m         \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1354\u001b[0m             \u001b[0mh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/http/client.py\u001b[0m in \u001b[0;36mgetresponse\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1373\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1374\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1375\u001b[0;31m                 \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbegin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1376\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mConnectionError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1377\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/http/client.py\u001b[0m in \u001b[0;36mbegin\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    316\u001b[0m         \u001b[0;31m# read until we get a non-100 response\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    317\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 318\u001b[0;31m             \u001b[0mversion\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatus\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreason\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_read_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    319\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mstatus\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mCONTINUE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    320\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/http/client.py\u001b[0m in \u001b[0;36m_read_status\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    277\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    278\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_read_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 279\u001b[0;31m         \u001b[0mline\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreadline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_MAXLINE\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"iso-8859-1\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    280\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0m_MAXLINE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    281\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mLineTooLong\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"status line\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/socket.py\u001b[0m in \u001b[0;36mreadinto\u001b[0;34m(self, b)\u001b[0m\n\u001b[1;32m    703\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    704\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 705\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_into\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    706\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    707\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_timeout_occurred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/ssl.py\u001b[0m in \u001b[0;36mrecv_into\u001b[0;34m(self, buffer, nbytes, flags)\u001b[0m\n\u001b[1;32m   1301\u001b[0m                   \u001b[0;34m\"non-zero flags not allowed in calls to recv_into() on %s\"\u001b[0m \u001b[0;34m%\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1302\u001b[0m                   self.__class__)\n\u001b[0;32m-> 1303\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnbytes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbuffer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1304\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1305\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_into\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbuffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnbytes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/ssl.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, len, buffer)\u001b[0m\n\u001b[1;32m   1157\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1158\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mbuffer\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1159\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sslobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbuffer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1160\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1161\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sslobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["# Save the DataFrames to files (adjust the file paths as needed)\n","gg_df.to_csv('/content/datasets/gg_df_dirty.csv', index=True)\n","sag_df.to_csv('/content/datasets/sag_df_dirty.csv', index=True)\n","oscars_df.to_csv('/content/datasets/oscars_df_dirty.csv', index=True)"],"metadata":{"id":"Xx-iP9DVbVmN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Combining Awards Datasets with Features"],"metadata":{"id":"yqn03Ga0Uiw7"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"DJEgYHgxVKxt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SVYq5vh-VLLq","executionInfo":{"status":"ok","timestamp":1702020581629,"user_tz":480,"elapsed":15726,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"bf9379e9-f337-4373-e355-37109b8c0477"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["gg_df = pd.read_csv(\"/content/drive/MyDrive/CS6140 Project - Oscars Prediction/datasets (dirty)/gg_df_dirty.csv\")\n","oscars_df = pd.read_csv(\"/content/drive/MyDrive/CS6140 Project - Oscars Prediction/datasets (dirty)/oscars_df_dirty.csv\")\n","sag_df = pd.read_csv(\"/content/drive/MyDrive/CS6140 Project - Oscars Prediction/datasets (dirty)/sag_df_dirty.csv\")"],"metadata":{"id":"WdOoHLx5Usxk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gg_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":694},"id":"CR9dC4n0V5Ye","executionInfo":{"status":"ok","timestamp":1702020753040,"user_tz":480,"elapsed":575,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"5494259b-74a0-4a8a-ce43-78bee3be067b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          film  year_film  \\\n","0      Remains of the Day, The       1993   \n","1              $1,000,000 Duck       1971   \n","2              'Round Midnight       1986   \n","3               'night, Mother       1986   \n","4         (500) Days of Summer       2009   \n","...                        ...        ...   \n","1985       Zero Dark Thirty \\t       2012   \n","1986                 Zoot Suit       1981   \n","1987                  Zootopia       2016   \n","1988           Zorba The Greek       1964   \n","1989      Zorro, The Gay Blade       1981   \n","\n","      gg_nominee_Best Motion Picture - Drama  \\\n","0                                          1   \n","1                                          0   \n","2                                          0   \n","3                                          0   \n","4                                          0   \n","...                                      ...   \n","1985                                       1   \n","1986                                       0   \n","1987                                       0   \n","1988                                       1   \n","1989                                       0   \n","\n","      gg_winner_Best Motion Picture - Drama  \\\n","0                                         0   \n","1                                         0   \n","2                                         0   \n","3                                         0   \n","4                                         0   \n","...                                     ...   \n","1985                                      0   \n","1986                                      0   \n","1987                                      0   \n","1988                                      0   \n","1989                                      0   \n","\n","      gg_nominee_Best Motion Picture - Musical or Comedy  \\\n","0                                                     0    \n","1                                                     0    \n","2                                                     0    \n","3                                                     0    \n","4                                                     1    \n","...                                                 ...    \n","1985                                                  0    \n","1986                                                  1    \n","1987                                                  0    \n","1988                                                  0    \n","1989                                                  0    \n","\n","      gg_winner_Best Motion Picture - Musical or Comedy  \\\n","0                                                     0   \n","1                                                     0   \n","2                                                     0   \n","3                                                     0   \n","4                                                     0   \n","...                                                 ...   \n","1985                                                  0   \n","1986                                                  0   \n","1987                                                  0   \n","1988                                                  0   \n","1989                                                  0   \n","\n","      gg_nominee_Best Performance by an Actress in a Motion Picture - Drama  \\\n","0                                                     1                       \n","1                                                     0                       \n","2                                                     0                       \n","3                                                     1                       \n","4                                                     0                       \n","...                                                 ...                       \n","1985                                                  1                       \n","1986                                                  0                       \n","1987                                                  0                       \n","1988                                                  0                       \n","1989                                                  0                       \n","\n","      gg_winner_Best Performance by an Actress in a Motion Picture - Drama  \\\n","0                                                     0                      \n","1                                                     0                      \n","2                                                     0                      \n","3                                                     0                      \n","4                                                     0                      \n","...                                                 ...                      \n","1985                                                  1                      \n","1986                                                  0                      \n","1987                                                  0                      \n","1988                                                  0                      \n","1989                                                  0                      \n","\n","      gg_nominee_Best Performance by an Actor in a Motion Picture - Drama  \\\n","0                                                     1                     \n","1                                                     0                     \n","2                                                     1                     \n","3                                                     0                     \n","4                                                     0                     \n","...                                                 ...                     \n","1985                                                  0                     \n","1986                                                  0                     \n","1987                                                  0                     \n","1988                                                  1                     \n","1989                                                  0                     \n","\n","      gg_winner_Best Performance by an Actor in a Motion Picture - Drama  ...  \\\n","0                                                     0                   ...   \n","1                                                     0                   ...   \n","2                                                     0                   ...   \n","3                                                     0                   ...   \n","4                                                     0                   ...   \n","...                                                 ...                   ...   \n","1985                                                  0                   ...   \n","1986                                                  0                   ...   \n","1987                                                  0                   ...   \n","1988                                                  0                   ...   \n","1989                                                  0                   ...   \n","\n","      gg_winner_Best Original Score - Motion Picture  \\\n","0                                                  0   \n","1                                                  0   \n","2                                                  0   \n","3                                                  0   \n","4                                                  0   \n","...                                              ...   \n","1985                                               0   \n","1986                                               0   \n","1987                                               0   \n","1988                                               0   \n","1989                                               0   \n","\n","      gg_nominee_Best Motion Picture - Foreign Language  \\\n","0                                                     0   \n","1                                                     0   \n","2                                                     0   \n","3                                                     0   \n","4                                                     0   \n","...                                                 ...   \n","1985                                                  0   \n","1986                                                  0   \n","1987                                                  0   \n","1988                                                  0   \n","1989                                                  0   \n","\n","      gg_winner_Best Motion Picture - Foreign Language  \\\n","0                                                    0   \n","1                                                    0   \n","2                                                    0   \n","3                                                    0   \n","4                                                    0   \n","...                                                ...   \n","1985                                                 0   \n","1986                                                 0   \n","1987                                                 0   \n","1988                                                 0   \n","1989                                                 0   \n","\n","      gg_nominee_Best Original Song - Motion Picture  \\\n","0                                                  0   \n","1                                                  0   \n","2                                                  0   \n","3                                                  0   \n","4                                                  0   \n","...                                              ...   \n","1985                                               0   \n","1986                                               0   \n","1987                                               0   \n","1988                                               0   \n","1989                                               0   \n","\n","      gg_winner_Best Original Song - Motion Picture  \\\n","0                                                 0   \n","1                                                 0   \n","2                                                 0   \n","3                                                 0   \n","4                                                 0   \n","...                                             ...   \n","1985                                              0   \n","1986                                              0   \n","1987                                              0   \n","1988                                              0   \n","1989                                              0   \n","\n","      gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","0                                                     0                                   \n","1                                                     0                                   \n","2                                                     0                                   \n","3                                                     0                                   \n","4                                                     0                                   \n","...                                                 ...                                   \n","1985                                                  0                                   \n","1986                                                  0                                   \n","1987                                                  0                                   \n","1988                                                  0                                   \n","1989                                                  0                                   \n","\n","      gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy  \\\n","0                                                     0                                  \n","1                                                     0                                  \n","2                                                     0                                  \n","3                                                     0                                  \n","4                                                     0                                  \n","...                                                 ...                                  \n","1985                                                  0                                  \n","1986                                                  0                                  \n","1987                                                  0                                  \n","1988                                                  0                                  \n","1989                                                  0                                  \n","\n","      gg_nominee_Best Motion Picture - Animated  \\\n","0                                             0   \n","1                                             0   \n","2                                             0   \n","3                                             0   \n","4                                             0   \n","...                                         ...   \n","1985                                          0   \n","1986                                          0   \n","1987                                          1   \n","1988                                          0   \n","1989                                          0   \n","\n","      gg_winner_Best Motion Picture - Animated    imdb_id  \n","0                                            0   107943.0  \n","1                                            0    66728.0  \n","2                                            0    90557.0  \n","3                                            0   117093.0  \n","4                                            0  1022603.0  \n","...                                        ...        ...  \n","1985                                         0  1790885.0  \n","1986                                         0    83365.0  \n","1987                                         1  2948356.0  \n","1988                                         0    57831.0  \n","1989                                         0    83366.0  \n","\n","[1990 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-59114d47-f105-4db6-994f-81cf0cd3951a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>film</th>\n","      <th>year_film</th>\n","      <th>gg_nominee_Best Motion Picture - Drama</th>\n","      <th>gg_winner_Best Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Drama</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Drama</th>\n","      <th>gg_nominee_Best Performance by an Actor in a Motion Picture - Drama</th>\n","      <th>gg_winner_Best Performance by an Actor in a Motion Picture - Drama</th>\n","      <th>...</th>\n","      <th>gg_winner_Best Original Score - Motion Picture</th>\n","      <th>gg_nominee_Best Motion Picture - Foreign Language</th>\n","      <th>gg_winner_Best Motion Picture - Foreign Language</th>\n","      <th>gg_nominee_Best Original Song - Motion Picture</th>\n","      <th>gg_winner_Best Original Song - Motion Picture</th>\n","      <th>gg_nominee_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_winner_Best Performance by an Actress in a Motion Picture - Musical or Comedy</th>\n","      <th>gg_nominee_Best Motion Picture - Animated</th>\n","      <th>gg_winner_Best Motion Picture - Animated</th>\n","      <th>imdb_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Remains of the Day, The</td>\n","      <td>1993</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>107943.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>$1,000,000 Duck</td>\n","      <td>1971</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>66728.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>'Round Midnight</td>\n","      <td>1986</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>90557.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>'night, Mother</td>\n","      <td>1986</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>117093.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(500) Days of Summer</td>\n","      <td>2009</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1022603.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1985</th>\n","      <td>Zero Dark Thirty \\t</td>\n","      <td>2012</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1790885.0</td>\n","    </tr>\n","    <tr>\n","      <th>1986</th>\n","      <td>Zoot Suit</td>\n","      <td>1981</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>83365.0</td>\n","    </tr>\n","    <tr>\n","      <th>1987</th>\n","      <td>Zootopia</td>\n","      <td>2016</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2948356.0</td>\n","    </tr>\n","    <tr>\n","      <th>1988</th>\n","      <td>Zorba The Greek</td>\n","      <td>1964</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>57831.0</td>\n","    </tr>\n","    <tr>\n","      <th>1989</th>\n","      <td>Zorro, The Gay Blade</td>\n","      <td>1981</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>83366.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1990 rows × 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59114d47-f105-4db6-994f-81cf0cd3951a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-59114d47-f105-4db6-994f-81cf0cd3951a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-59114d47-f105-4db6-994f-81cf0cd3951a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6375e42c-8da9-49ff-b070-218452d3d38e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6375e42c-8da9-49ff-b070-218452d3d38e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6375e42c-8da9-49ff-b070-218452d3d38e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Assuming 'gg_df', 'sag_df', 'oscars_df' are your DataFrames\n","dataframes = {'gg_df': gg_df, 'sag_df': sag_df, 'oscars_df': oscars_df}\n","\n","for df_name, df in dataframes.items():\n","    # Filter rows where 'imdb_id' is null\n","    movies_with_no_imdb_id = df[df['imdb_id'].isnull()]['film'].tolist()\n","\n","    # Print the list of movies with no IMDb ID\n","    print(f\"Movies in '{df_name}' with no IMDb ID:\")\n","    for movie in movies_with_no_imdb_id:\n","        print(movie)\n","    print(\"\\n\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"haoOELHB0qJD","executionInfo":{"status":"ok","timestamp":1702020897849,"user_tz":480,"elapsed":178,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"5ee0349b-8162-4b9c-d90b-8e1520651488"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Movies in 'gg_df' with no IMDb ID:\n","\n","\n","Movies in 'sag_df' with no IMDb ID:\n","\n","\n","Movies in 'oscars_df' with no IMDb ID:\n","\n","\n"]}]},{"cell_type":"code","source":["gg_df = gg_df.dropna(subset=['imdb_id'])"],"metadata":{"id":"G17bwaYLWOvP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Assuming 'gg_df', 'sag_df', 'oscars_df' are your DataFrames\n","dataframes = {'gg_df': gg_df, 'sag_df': sag_df, 'oscars_df': oscars_df}\n","\n","for df_name, df in dataframes.items():\n","    # Find duplicate IMDb IDs within each DataFrame\n","    duplicates_within_dataframe = df[df['imdb_id'].duplicated(keep=False) & ~df['imdb_id'].isnull()]\n","\n","    # Print the count and list of duplicate IMDb IDs within each DataFrame\n","    if not duplicates_within_dataframe.empty:\n","        print(f\"Total duplicates in '{df_name}' IMDb IDs: {len(duplicates_within_dataframe)}\")\n","        print(\"Movies with duplicate IMDb IDs:\")\n","        for idx, row in duplicates_within_dataframe.iterrows():\n","            print(f\"Movie: {row['film']}, IMDb ID: {row['imdb_id']}\")\n","        print(\"\\n\")\n","    else:\n","        print(f\"No duplicates found in '{df_name}' IMDb IDs.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5KkCEm7m1EUL","executionInfo":{"status":"ok","timestamp":1702021096908,"user_tz":480,"elapsed":303,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"b9ae357e-015d-4634-c5ce-e32c8d974509"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total duplicates in 'gg_df' IMDb IDs: 46\n","Movies with duplicate IMDb IDs:\n","Movie: 50/50, IMDb ID: 2322441.0\n","Movie: America, America, IMDb ID: 87843.0\n","Movie: Arthur, IMDb ID: 1430607.0\n","Movie: Arthur Christmas, IMDb ID: 1430607.0\n","Movie: Auntie Mame, IMDb ID: 51383.0\n","Movie: Bridge on the River Kwai, The, IMDb ID: 50212.0\n","Movie: Country, IMDb ID: 477348.0\n","Movie: Farewell, The, IMDb ID: 8637428.0\n","Movie: Fifty Shades of Grey, IMDb ID: 2322441.0\n","Movie: Ford v Ferrari, IMDb ID: 1950186.0\n","Movie: Frances, IMDb ID: 2347569.0\n","Movie: Frances Ha, IMDb ID: 2347569.0\n","Movie: Gandhi, IMDb ID: 83987.0\n","Movie: In America, IMDb ID: 87843.0\n","Movie: India, Richard Attenborough, IMDb ID: 83987.0\n","Movie: Italy, Franco Zeffirelli, IMDb ID: 61407.0\n","Movie: Italy, Nikita Mikhalkov, IMDb ID: 112098.0\n","Movie: Jackie, IMDb ID: 119396.0\n","Movie: Jackie Brown, IMDb ID: 119396.0\n","Movie: Le Mans, IMDb ID: 1950186.0\n","Movie: Lion King, The, IMDb ID: 110357.0\n","Movie: Mame, IMDb ID: 51383.0\n","Movie: Manchurian Candidate (2004), The, IMDb ID: 368008.0\n","Movie: Manchurian Candidate, The, IMDb ID: 368008.0\n","Movie: Mexico, Alejandro González Iñárritu, IMDb ID: 7161082.0\n","Movie: Mona Lisa, IMDb ID: 304415.0\n","Movie: Mona Lisa Smile, IMDb ID: 304415.0\n","Movie: No Country for Old Men, IMDb ID: 477348.0\n","Movie: Once Upon a Time in America, IMDb ID: 87843.0\n","Movie: Pride, IMDb ID: 414387.0\n","Movie: Pride & Prejudice, IMDb ID: 414387.0\n","Movie: River, The, IMDb ID: 50212.0\n","Movie: Russia, Nikita Mikhalkov, IMDb ID: 112098.0\n","Movie: Sabrina, IMDb ID: 114319.0\n","Movie: Sabrina (1995), IMDb ID: 114319.0\n","Movie: Spain, Mexico, Alejandro González Iñárritu, IMDb ID: 7161082.0\n","Movie: Star and Stripes Forever, IMDb ID: 45187.0\n","Movie: Stars and Stripes Forever, IMDb ID: 45187.0\n","Movie: Taming of the Shrew, The, IMDb ID: 61407.0\n","Movie: The Hunger Games, IMDb ID: 10545296.0\n","Movie: The Lion King, IMDb ID: 110357.0\n","Movie: Tribute, IMDb ID: 10545296.0\n","Movie: USA, Lulu Wang, IMDb ID: 8637428.0\n","Movie: Wall Street, IMDb ID: 993846.0\n","Movie: Wall-E, IMDb ID: 993846.0\n","Movie: Wolf of Wall Street, The, IMDb ID: 993846.0\n","\n","\n","Total duplicates in 'sag_df' IMDb IDs: 12\n","Movies with duplicate IMDb IDs:\n","Movie: A STAR IS BORN, IMDb ID: 1517451\n","Movie: A STAR IS BORN , IMDb ID: 1517451\n","Movie: AMERICAN HUSLE, IMDb ID: 1800241\n","Movie: AMERICAN HUSTLE, IMDb ID: 1800241\n","Movie: AUGUST  OSAGE COUNTY, IMDb ID: 1322269\n","Movie: AUGUST: OSAGE COUNTY, IMDb ID: 1322269\n","Movie: BOHEMIAN RHAPSODY, IMDb ID: 1727824\n","Movie: BOHEMIAN RHAPSODY , IMDb ID: 1727824\n","Movie: THE ENGLISH PATENT, IMDb ID: 116209\n","Movie: THE ENGLISH PATIENT, IMDb ID: 116209\n","Movie: THE GREEN  MILE, IMDb ID: 120689\n","Movie: THE GREEN MILE, IMDb ID: 120689\n","\n","\n","Total duplicates in 'oscars_df' IMDb IDs: 37\n","Movies with duplicate IMDb IDs:\n","Movie: Air Force, IMDb ID: 118571\n","Movie: Air Force One, IMDb ID: 118571\n","Movie: America America, IMDb ID: 87843\n","Movie: Anna Christie, IMDb ID: 20641\n","Movie: Anna Christie;, IMDb ID: 20641\n","Movie: Buster, IMDb ID: 6412452\n","Movie: Cimarron, IMDb ID: 166813\n","Movie: Country, IMDb ID: 477348\n","Movie: Guillermo del Toro's Pinocchio, IMDb ID: 1488589\n","Movie: In America, IMDb ID: 87843\n","Movie: Jackie, IMDb ID: 119396\n","Movie: Jackie Brown, IMDb ID: 119396\n","Movie: Les Miserables, IMDb ID: 1707386\n","Movie: Les Misérables, IMDb ID: 1707386\n","Movie: Mary Queen of Scots, IMDb ID: 2328900\n","Movie: Mary, Queen of Scots, IMDb ID: 2328900\n","Movie: Maverick, IMDb ID: 1745960\n","Movie: No Country for Old Men, IMDb ID: 477348\n","Movie: Pinocchio, IMDb ID: 1488589\n","Movie: Pirates, IMDb ID: 325980\n","Movie: Pirates of the Caribbean: The Curse of the Black Pearl, IMDb ID: 325980\n","Movie: Puss in Boots, IMDb ID: 3915174\n","Movie: Puss in Boots: The Last Wish, IMDb ID: 3915174\n","Movie: Spirit: Stallion of the Cimarron, IMDb ID: 166813\n","Movie: Star Trek, IMDb ID: 60028\n","Movie: Star!, IMDb ID: 60028\n","Movie: Sunset, IMDb ID: 43014\n","Movie: Sunset Blvd., IMDb ID: 43014\n","Movie: The Ballad of Buster Scruggs, IMDb ID: 6412452\n","Movie: The Candidate, IMDb ID: 368008\n","Movie: The Manchurian Candidate, IMDb ID: 368008\n","Movie: The War of the Worlds, IMDb ID: 9686194\n","Movie: The Wolf of Wall Street, IMDb ID: 993846\n","Movie: Top Gun: Maverick, IMDb ID: 1745960\n","Movie: WALL-E, IMDb ID: 993846\n","Movie: Wall Street, IMDb ID: 993846\n","Movie: War of the Worlds, IMDb ID: 9686194\n","\n","\n"]}]},{"cell_type":"code","source":["# Assuming 'gg_df', 'sag_df', 'oscars_df' are your DataFrames\n","dataframes = {'gg_df': gg_df, 'sag_df': sag_df, 'oscars_df': oscars_df}\n","\n","for df_name, df in dataframes.items():\n","    # Find and keep only the last entry for each duplicate IMDb ID within each DataFrame\n","    df_no_duplicates = df[~df['imdb_id'].duplicated(keep='last') | df['imdb_id'].isnull()]\n","\n","    # Print the count of removed duplicates and save the cleaned DataFrame\n","    removed_duplicates_count = len(df) - len(df_no_duplicates)\n","    print(f\"Removed {removed_duplicates_count} duplicates in '{df_name}' IMDb IDs.\")\n","\n","    # Save the cleaned DataFrame to a new CSV file\n","    df_no_duplicates.to_csv(f'/content/drive/MyDrive/CS6140 Project - Oscars Prediction/datasets (post-cleaning)/{df_name}_cleaned.csv', index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yGKBDEmZWywk","executionInfo":{"status":"ok","timestamp":1702021228946,"user_tz":480,"elapsed":225,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"0d7791f3-dc5f-4551-f7ce-e2c566b5667f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Removed 24 duplicates in 'gg_df' IMDb IDs.\n","Removed 6 duplicates in 'sag_df' IMDb IDs.\n","Removed 19 duplicates in 'oscars_df' IMDb IDs.\n"]}]},{"cell_type":"code","source":["features_df = pd.read_csv(\"/content/drive/MyDrive/CS6140 Project - Oscars Prediction/datasets (post-cleaning)/features.csv\")\n","features_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":390},"id":"Vt3WSRZgX3Ih","executionInfo":{"status":"error","timestamp":1702024265198,"user_tz":480,"elapsed":182,"user":{"displayName":"Macarious Hui","userId":"10231635956274128337"}},"outputId":"b10f701e-af46-4d1f-8322-6d82b7616d2c"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-76-1d83445874f4>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfeatures_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/drive/MyDrive/CS6140 Project - Oscars Prediction/datasets (post-cleaning)/features.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mfeatures_df\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m                     \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew_arg_name\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_arg_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mF\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    948\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 950\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    951\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    952\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    603\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    604\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 605\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    606\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    607\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1440\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1441\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1442\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1443\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1444\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1733\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1734\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1735\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1736\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1737\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    854\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    855\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 856\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    857\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    858\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/CS6140 Project - Oscars Prediction/datasets (post-cleaning)/features.csv'"]}]},{"cell_type":"markdown","source":["# Debugging"],"metadata":{"id":"t4gtsutdjsrD"}},{"cell_type":"code","source":["oscars_previous_df = pd.read_csv('/content/oscars_df_cleaned.csv')"],"metadata":{"id":"1a6CI18jjv9J","executionInfo":{"status":"ok","timestamp":1702242544776,"user_tz":480,"elapsed":137,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["oscars_previous_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RsEtZ9BVj2HV","executionInfo":{"status":"ok","timestamp":1702242907569,"user_tz":480,"elapsed":344,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"0d0b18e7-3d8c-44ce-82c8-3c6b339d8877"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['film', 'year', 'film.1', 'oscars_nominee_CINEMATOGRAPHY',\n","       'oscars_winner_CINEMATOGRAPHY', 'oscars_nominee_DIRECTING',\n","       'oscars_winner_DIRECTING', 'oscars_nominee_FILM EDITING',\n","       'oscars_winner_FILM EDITING',\n","       'oscars_nominee_ACTOR IN A SUPPORTING ROLE',\n","       'oscars_winner_ACTOR IN A SUPPORTING ROLE',\n","       'oscars_nominee_ACTRESS IN A SUPPORTING ROLE',\n","       'oscars_winner_ACTRESS IN A SUPPORTING ROLE',\n","       'oscars_nominee_MUSIC (Original Score)',\n","       'oscars_winner_MUSIC (Original Score)',\n","       'oscars_nominee_WRITING (Original Screenplay)',\n","       'oscars_winner_WRITING (Original Screenplay)',\n","       'oscars_nominee_COSTUME DESIGN', 'oscars_winner_COSTUME DESIGN',\n","       'oscars_nominee_SOUND', 'oscars_winner_SOUND',\n","       'oscars_nominee_BEST PICTURE', 'oscars_winner_BEST PICTURE',\n","       'oscars_nominee_MUSIC (Original Song)',\n","       'oscars_winner_MUSIC (Original Song)',\n","       'oscars_nominee_ACTOR IN A LEADING ROLE',\n","       'oscars_winner_ACTOR IN A LEADING ROLE',\n","       'oscars_nominee_ACTRESS IN A LEADING ROLE',\n","       'oscars_winner_ACTRESS IN A LEADING ROLE',\n","       'oscars_nominee_VISUAL EFFECTS', 'oscars_winner_VISUAL EFFECTS',\n","       'oscars_nominee_ANIMATED FEATURE FILM',\n","       'oscars_winner_ANIMATED FEATURE FILM',\n","       'oscars_nominee_WRITING (Adapted Screenplay)',\n","       'oscars_winner_WRITING (Adapted Screenplay)',\n","       'oscars_nominee_PRODUCTION DESIGN', 'oscars_winner_PRODUCTION DESIGN',\n","       'oscars_nominee_DOCUMENTARY SHORT FILM',\n","       'oscars_winner_DOCUMENTARY SHORT FILM', 'imdb_id'],\n","      dtype='object')"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["oscars_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":640},"id":"IQrsjeA_lXhc","executionInfo":{"status":"ok","timestamp":1702242913030,"user_tz":480,"elapsed":185,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"8ab5466f-bc98-4cf3-cac5-222835f3a575"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        year                    film  \\\n","film                                                   \n","'Round Midnight         1986         'Round Midnight   \n","...And Justice for All  1979  ...And Justice for All   \n","10                      1979                      10   \n","102 Dalmatians          2000          102 Dalmatians   \n","12 Angry Men            1957            12 Angry Men   \n","...                      ...                     ...   \n","Zelig                   1983                   Zelig   \n","Zero Dark Thirty        2012        Zero Dark Thirty   \n","Zootopia                2016                Zootopia   \n","Zorba the Greek         1964         Zorba the Greek   \n","tick, tick...BOOM!      2021      tick, tick...BOOM!   \n","\n","                        oscars_nominee_CINEMATOGRAPHY  \\\n","film                                                    \n","'Round Midnight                                     0   \n","...And Justice for All                              0   \n","10                                                  0   \n","102 Dalmatians                                      0   \n","12 Angry Men                                        0   \n","...                                               ...   \n","Zelig                                               1   \n","Zero Dark Thirty                                    0   \n","Zootopia                                            0   \n","Zorba the Greek                                     0   \n","tick, tick...BOOM!                                  0   \n","\n","                        oscars_winner_CINEMATOGRAPHY  \\\n","film                                                   \n","'Round Midnight                                    0   \n","...And Justice for All                             0   \n","10                                                 0   \n","102 Dalmatians                                     0   \n","12 Angry Men                                       0   \n","...                                              ...   \n","Zelig                                              0   \n","Zero Dark Thirty                                   0   \n","Zootopia                                           0   \n","Zorba the Greek                                    0   \n","tick, tick...BOOM!                                 0   \n","\n","                        oscars_nominee_DIRECTING  oscars_winner_DIRECTING  \\\n","film                                                                        \n","'Round Midnight                                0                        0   \n","...And Justice for All                         0                        0   \n","10                                             0                        0   \n","102 Dalmatians                                 0                        0   \n","12 Angry Men                                   1                        0   \n","...                                          ...                      ...   \n","Zelig                                          0                        0   \n","Zero Dark Thirty                               0                        0   \n","Zootopia                                       0                        0   \n","Zorba the Greek                                1                        0   \n","tick, tick...BOOM!                             0                        0   \n","\n","                        oscars_nominee_FILM EDITING  \\\n","film                                                  \n","'Round Midnight                                   0   \n","...And Justice for All                            0   \n","10                                                0   \n","102 Dalmatians                                    0   \n","12 Angry Men                                      0   \n","...                                             ...   \n","Zelig                                             0   \n","Zero Dark Thirty                                  1   \n","Zootopia                                          0   \n","Zorba the Greek                                   0   \n","tick, tick...BOOM!                                1   \n","\n","                        oscars_winner_FILM EDITING  \\\n","film                                                 \n","'Round Midnight                                  0   \n","...And Justice for All                           0   \n","10                                               0   \n","102 Dalmatians                                   0   \n","12 Angry Men                                     0   \n","...                                            ...   \n","Zelig                                            0   \n","Zero Dark Thirty                                 0   \n","Zootopia                                         0   \n","Zorba the Greek                                  0   \n","tick, tick...BOOM!                               0   \n","\n","                        oscars_nominee_ACTOR IN A SUPPORTING ROLE  \\\n","film                                                                \n","'Round Midnight                                                 0   \n","...And Justice for All                                          0   \n","10                                                              0   \n","102 Dalmatians                                                  0   \n","12 Angry Men                                                    0   \n","...                                                           ...   \n","Zelig                                                           0   \n","Zero Dark Thirty                                                0   \n","Zootopia                                                        0   \n","Zorba the Greek                                                 0   \n","tick, tick...BOOM!                                              0   \n","\n","                        oscars_winner_ACTOR IN A SUPPORTING ROLE  ...  \\\n","film                                                              ...   \n","'Round Midnight                                                0  ...   \n","...And Justice for All                                         0  ...   \n","10                                                             0  ...   \n","102 Dalmatians                                                 0  ...   \n","12 Angry Men                                                   0  ...   \n","...                                                          ...  ...   \n","Zelig                                                          0  ...   \n","Zero Dark Thirty                                               0  ...   \n","Zootopia                                                       0  ...   \n","Zorba the Greek                                                0  ...   \n","tick, tick...BOOM!                                             0  ...   \n","\n","                        oscars_nominee_VISUAL EFFECTS  \\\n","film                                                    \n","'Round Midnight                                     0   \n","...And Justice for All                              0   \n","10                                                  0   \n","102 Dalmatians                                      0   \n","12 Angry Men                                        0   \n","...                                               ...   \n","Zelig                                               0   \n","Zero Dark Thirty                                    0   \n","Zootopia                                            0   \n","Zorba the Greek                                     0   \n","tick, tick...BOOM!                                  0   \n","\n","                        oscars_winner_VISUAL EFFECTS  \\\n","film                                                   \n","'Round Midnight                                    0   \n","...And Justice for All                             0   \n","10                                                 0   \n","102 Dalmatians                                     0   \n","12 Angry Men                                       0   \n","...                                              ...   \n","Zelig                                              0   \n","Zero Dark Thirty                                   0   \n","Zootopia                                           0   \n","Zorba the Greek                                    0   \n","tick, tick...BOOM!                                 0   \n","\n","                        oscars_nominee_ANIMATED FEATURE FILM  \\\n","film                                                           \n","'Round Midnight                                            0   \n","...And Justice for All                                     0   \n","10                                                         0   \n","102 Dalmatians                                             0   \n","12 Angry Men                                               0   \n","...                                                      ...   \n","Zelig                                                      0   \n","Zero Dark Thirty                                           0   \n","Zootopia                                                   1   \n","Zorba the Greek                                            0   \n","tick, tick...BOOM!                                         0   \n","\n","                        oscars_winner_ANIMATED FEATURE FILM  \\\n","film                                                          \n","'Round Midnight                                           0   \n","...And Justice for All                                    0   \n","10                                                        0   \n","102 Dalmatians                                            0   \n","12 Angry Men                                              0   \n","...                                                     ...   \n","Zelig                                                     0   \n","Zero Dark Thirty                                          0   \n","Zootopia                                                  1   \n","Zorba the Greek                                           0   \n","tick, tick...BOOM!                                        0   \n","\n","                        oscars_nominee_WRITING (Adapted Screenplay)  \\\n","film                                                                  \n","'Round Midnight                                                   0   \n","...And Justice for All                                            0   \n","10                                                                0   \n","102 Dalmatians                                                    0   \n","12 Angry Men                                                      0   \n","...                                                             ...   \n","Zelig                                                             0   \n","Zero Dark Thirty                                                  0   \n","Zootopia                                                          0   \n","Zorba the Greek                                                   0   \n","tick, tick...BOOM!                                                0   \n","\n","                        oscars_winner_WRITING (Adapted Screenplay)  \\\n","film                                                                 \n","'Round Midnight                                                  0   \n","...And Justice for All                                           0   \n","10                                                               0   \n","102 Dalmatians                                                   0   \n","12 Angry Men                                                     0   \n","...                                                            ...   \n","Zelig                                                            0   \n","Zero Dark Thirty                                                 0   \n","Zootopia                                                         0   \n","Zorba the Greek                                                  0   \n","tick, tick...BOOM!                                               0   \n","\n","                        oscars_nominee_PRODUCTION DESIGN  \\\n","film                                                       \n","'Round Midnight                                        0   \n","...And Justice for All                                 0   \n","10                                                     0   \n","102 Dalmatians                                         0   \n","12 Angry Men                                           0   \n","...                                                  ...   \n","Zelig                                                  0   \n","Zero Dark Thirty                                       0   \n","Zootopia                                               0   \n","Zorba the Greek                                        0   \n","tick, tick...BOOM!                                     0   \n","\n","                        oscars_winner_PRODUCTION DESIGN  \\\n","film                                                      \n","'Round Midnight                                       0   \n","...And Justice for All                                0   \n","10                                                    0   \n","102 Dalmatians                                        0   \n","12 Angry Men                                          0   \n","...                                                 ...   \n","Zelig                                                 0   \n","Zero Dark Thirty                                      0   \n","Zootopia                                              0   \n","Zorba the Greek                                       0   \n","tick, tick...BOOM!                                    0   \n","\n","                        oscars_nominee_DOCUMENTARY SHORT FILM  \\\n","film                                                            \n","'Round Midnight                                             0   \n","...And Justice for All                                      0   \n","10                                                          0   \n","102 Dalmatians                                              0   \n","12 Angry Men                                                0   \n","...                                                       ...   \n","Zelig                                                       0   \n","Zero Dark Thirty                                            0   \n","Zootopia                                                    0   \n","Zorba the Greek                                             0   \n","tick, tick...BOOM!                                          0   \n","\n","                        oscars_winner_DOCUMENTARY SHORT FILM  \n","film                                                          \n","'Round Midnight                                            0  \n","...And Justice for All                                     0  \n","10                                                         0  \n","102 Dalmatians                                             0  \n","12 Angry Men                                               0  \n","...                                                      ...  \n","Zelig                                                      0  \n","Zero Dark Thirty                                           0  \n","Zootopia                                                   0  \n","Zorba the Greek                                            0  \n","tick, tick...BOOM!                                         0  \n","\n","[1965 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-f2647319-ee43-46d0-a869-fd559ef3ad68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>film</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY</th>\n","      <th>oscars_winner_CINEMATOGRAPHY</th>\n","      <th>oscars_nominee_DIRECTING</th>\n","      <th>oscars_winner_DIRECTING</th>\n","      <th>oscars_nominee_FILM EDITING</th>\n","      <th>oscars_winner_FILM EDITING</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>oscars_winner_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>...</th>\n","      <th>oscars_nominee_VISUAL EFFECTS</th>\n","      <th>oscars_winner_VISUAL EFFECTS</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN</th>\n","      <th>oscars_winner_PRODUCTION DESIGN</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM</th>\n","    </tr>\n","    <tr>\n","      <th>film</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>'Round Midnight</th>\n","      <td>1986</td>\n","      <td>'Round Midnight</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...And Justice for All</th>\n","      <td>1979</td>\n","      <td>...And Justice for All</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1979</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>102 Dalmatians</th>\n","      <td>2000</td>\n","      <td>102 Dalmatians</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12 Angry Men</th>\n","      <td>1957</td>\n","      <td>12 Angry Men</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Zelig</th>\n","      <td>1983</td>\n","      <td>Zelig</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zero Dark Thirty</th>\n","      <td>2012</td>\n","      <td>Zero Dark Thirty</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zootopia</th>\n","      <td>2016</td>\n","      <td>Zootopia</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zorba the Greek</th>\n","      <td>1964</td>\n","      <td>Zorba the Greek</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>tick, tick...BOOM!</th>\n","      <td>2021</td>\n","      <td>tick, tick...BOOM!</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1965 rows × 38 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2647319-ee43-46d0-a869-fd559ef3ad68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f2647319-ee43-46d0-a869-fd559ef3ad68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f2647319-ee43-46d0-a869-fd559ef3ad68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dd858072-4939-4edf-ac07-e296d516b209\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd858072-4939-4edf-ac07-e296d516b209')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dd858072-4939-4edf-ac07-e296d516b209 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["oscars_previous_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":592},"id":"K_hhvjV8lfIs","executionInfo":{"status":"ok","timestamp":1702243258619,"user_tz":480,"elapsed":170,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"1fa1a9ba-5f83-4d2b-82b5-9fc16c86e4c8"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        film  year                  film.1  \\\n","0            'Round Midnight  1986         'Round Midnight   \n","1     ...And Justice for All  1979  ...And Justice for All   \n","2                         10  1979                      10   \n","3             102 Dalmatians  2000          102 Dalmatians   \n","4               12 Angry Men  1957            12 Angry Men   \n","...                      ...   ...                     ...   \n","1941                   Zelig  1983                   Zelig   \n","1942        Zero Dark Thirty  2012        Zero Dark Thirty   \n","1943                Zootopia  2016                Zootopia   \n","1944         Zorba the Greek  1964         Zorba the Greek   \n","1945      tick, tick...BOOM!  2021      tick, tick...BOOM!   \n","\n","      oscars_nominee_CINEMATOGRAPHY  oscars_winner_CINEMATOGRAPHY  \\\n","0                                 0                             0   \n","1                                 0                             0   \n","2                                 0                             0   \n","3                                 0                             0   \n","4                                 0                             0   \n","...                             ...                           ...   \n","1941                              1                             0   \n","1942                              0                             0   \n","1943                              0                             0   \n","1944                              0                             0   \n","1945                              0                             0   \n","\n","      oscars_nominee_DIRECTING  oscars_winner_DIRECTING  \\\n","0                            0                        0   \n","1                            0                        0   \n","2                            0                        0   \n","3                            0                        0   \n","4                            1                        0   \n","...                        ...                      ...   \n","1941                         0                        0   \n","1942                         0                        0   \n","1943                         0                        0   \n","1944                         1                        0   \n","1945                         0                        0   \n","\n","      oscars_nominee_FILM EDITING  oscars_winner_FILM EDITING  \\\n","0                               0                           0   \n","1                               0                           0   \n","2                               0                           0   \n","3                               0                           0   \n","4                               0                           0   \n","...                           ...                         ...   \n","1941                            0                           0   \n","1942                            1                           0   \n","1943                            0                           0   \n","1944                            0                           0   \n","1945                            1                           0   \n","\n","      oscars_nominee_ACTOR IN A SUPPORTING ROLE  ...  \\\n","0                                             0  ...   \n","1                                             0  ...   \n","2                                             0  ...   \n","3                                             0  ...   \n","4                                             0  ...   \n","...                                         ...  ...   \n","1941                                          0  ...   \n","1942                                          0  ...   \n","1943                                          0  ...   \n","1944                                          0  ...   \n","1945                                          0  ...   \n","\n","      oscars_winner_VISUAL EFFECTS  oscars_nominee_ANIMATED FEATURE FILM  \\\n","0                                0                                     0   \n","1                                0                                     0   \n","2                                0                                     0   \n","3                                0                                     0   \n","4                                0                                     0   \n","...                            ...                                   ...   \n","1941                             0                                     0   \n","1942                             0                                     0   \n","1943                             0                                     1   \n","1944                             0                                     0   \n","1945                             0                                     0   \n","\n","      oscars_winner_ANIMATED FEATURE FILM  \\\n","0                                       0   \n","1                                       0   \n","2                                       0   \n","3                                       0   \n","4                                       0   \n","...                                   ...   \n","1941                                    0   \n","1942                                    0   \n","1943                                    1   \n","1944                                    0   \n","1945                                    0   \n","\n","      oscars_nominee_WRITING (Adapted Screenplay)  \\\n","0                                             NaN   \n","1                                             NaN   \n","2                                             NaN   \n","3                                             NaN   \n","4                                             NaN   \n","...                                           ...   \n","1941                                          NaN   \n","1942                                          NaN   \n","1943                                          NaN   \n","1944                                          NaN   \n","1945                                          NaN   \n","\n","      oscars_winner_WRITING (Adapted Screenplay)  \\\n","0                                            NaN   \n","1                                            NaN   \n","2                                            NaN   \n","3                                            NaN   \n","4                                            NaN   \n","...                                          ...   \n","1941                                         NaN   \n","1942                                         NaN   \n","1943                                         NaN   \n","1944                                         NaN   \n","1945                                         NaN   \n","\n","      oscars_nominee_PRODUCTION DESIGN  oscars_winner_PRODUCTION DESIGN  \\\n","0                                    0                                0   \n","1                                    0                                0   \n","2                                    0                                0   \n","3                                    0                                0   \n","4                                    0                                0   \n","...                                ...                              ...   \n","1941                                 0                                0   \n","1942                                 0                                0   \n","1943                                 0                                0   \n","1944                                 0                                0   \n","1945                                 0                                0   \n","\n","      oscars_nominee_DOCUMENTARY SHORT FILM  \\\n","0                                       NaN   \n","1                                       NaN   \n","2                                       NaN   \n","3                                       NaN   \n","4                                       NaN   \n","...                                     ...   \n","1941                                    NaN   \n","1942                                    NaN   \n","1943                                    NaN   \n","1944                                    NaN   \n","1945                                    NaN   \n","\n","      oscars_winner_DOCUMENTARY SHORT FILM   imdb_id  \n","0                                      NaN     90557  \n","1                                      NaN     78718  \n","2                                      NaN  23289160  \n","3                                      NaN    211181  \n","4                                      NaN     50083  \n","...                                    ...       ...  \n","1941                                   NaN     86637  \n","1942                                   NaN   1790885  \n","1943                                   NaN   2948356  \n","1944                                   NaN     57831  \n","1945                                   NaN   8721424  \n","\n","[1946 rows x 40 columns]"],"text/html":["\n","  <div id=\"df-967fd13f-9450-4ec2-9f38-91bbfd5ccc84\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>film</th>\n","      <th>year</th>\n","      <th>film.1</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY</th>\n","      <th>oscars_winner_CINEMATOGRAPHY</th>\n","      <th>oscars_nominee_DIRECTING</th>\n","      <th>oscars_winner_DIRECTING</th>\n","      <th>oscars_nominee_FILM EDITING</th>\n","      <th>oscars_winner_FILM EDITING</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>...</th>\n","      <th>oscars_winner_VISUAL EFFECTS</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN</th>\n","      <th>oscars_winner_PRODUCTION DESIGN</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM</th>\n","      <th>imdb_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>'Round Midnight</td>\n","      <td>1986</td>\n","      <td>'Round Midnight</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>90557</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>...And Justice for All</td>\n","      <td>1979</td>\n","      <td>...And Justice for All</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>78718</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10</td>\n","      <td>1979</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>23289160</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>102 Dalmatians</td>\n","      <td>2000</td>\n","      <td>102 Dalmatians</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>211181</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12 Angry Men</td>\n","      <td>1957</td>\n","      <td>12 Angry Men</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>50083</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1941</th>\n","      <td>Zelig</td>\n","      <td>1983</td>\n","      <td>Zelig</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>86637</td>\n","    </tr>\n","    <tr>\n","      <th>1942</th>\n","      <td>Zero Dark Thirty</td>\n","      <td>2012</td>\n","      <td>Zero Dark Thirty</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1790885</td>\n","    </tr>\n","    <tr>\n","      <th>1943</th>\n","      <td>Zootopia</td>\n","      <td>2016</td>\n","      <td>Zootopia</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2948356</td>\n","    </tr>\n","    <tr>\n","      <th>1944</th>\n","      <td>Zorba the Greek</td>\n","      <td>1964</td>\n","      <td>Zorba the Greek</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>57831</td>\n","    </tr>\n","    <tr>\n","      <th>1945</th>\n","      <td>tick, tick...BOOM!</td>\n","      <td>2021</td>\n","      <td>tick, tick...BOOM!</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8721424</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1946 rows × 40 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-967fd13f-9450-4ec2-9f38-91bbfd5ccc84')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-967fd13f-9450-4ec2-9f38-91bbfd5ccc84 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-967fd13f-9450-4ec2-9f38-91bbfd5ccc84');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dcbaccd6-d45f-4dba-8c45-610ce2a1073e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dcbaccd6-d45f-4dba-8c45-610ce2a1073e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dcbaccd6-d45f-4dba-8c45-610ce2a1073e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["oscars_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":640},"id":"nujeYi1-mv6Q","executionInfo":{"status":"ok","timestamp":1702243437389,"user_tz":480,"elapsed":261,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"359c3217-a407-487f-bc89-c80e2682eb91"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        year                    film  \\\n","film                                                   \n","'Round Midnight         1986         'Round Midnight   \n","...And Justice for All  1979  ...And Justice for All   \n","10                      1979                      10   \n","102 Dalmatians          2000          102 Dalmatians   \n","12 Angry Men            1957            12 Angry Men   \n","...                      ...                     ...   \n","Zelig                   1983                   Zelig   \n","Zero Dark Thirty        2012        Zero Dark Thirty   \n","Zootopia                2016                Zootopia   \n","Zorba the Greek         1964         Zorba the Greek   \n","tick, tick...BOOM!      2021      tick, tick...BOOM!   \n","\n","                        oscars_nominee_CINEMATOGRAPHY  \\\n","film                                                    \n","'Round Midnight                                     0   \n","...And Justice for All                              0   \n","10                                                  0   \n","102 Dalmatians                                      0   \n","12 Angry Men                                        0   \n","...                                               ...   \n","Zelig                                               1   \n","Zero Dark Thirty                                    0   \n","Zootopia                                            0   \n","Zorba the Greek                                     0   \n","tick, tick...BOOM!                                  0   \n","\n","                        oscars_winner_CINEMATOGRAPHY  \\\n","film                                                   \n","'Round Midnight                                    0   \n","...And Justice for All                             0   \n","10                                                 0   \n","102 Dalmatians                                     0   \n","12 Angry Men                                       0   \n","...                                              ...   \n","Zelig                                              0   \n","Zero Dark Thirty                                   0   \n","Zootopia                                           0   \n","Zorba the Greek                                    0   \n","tick, tick...BOOM!                                 0   \n","\n","                        oscars_nominee_DIRECTING  oscars_winner_DIRECTING  \\\n","film                                                                        \n","'Round Midnight                                0                        0   \n","...And Justice for All                         0                        0   \n","10                                             0                        0   \n","102 Dalmatians                                 0                        0   \n","12 Angry Men                                   1                        0   \n","...                                          ...                      ...   \n","Zelig                                          0                        0   \n","Zero Dark Thirty                               0                        0   \n","Zootopia                                       0                        0   \n","Zorba the Greek                                1                        0   \n","tick, tick...BOOM!                             0                        0   \n","\n","                        oscars_nominee_FILM EDITING  \\\n","film                                                  \n","'Round Midnight                                   0   \n","...And Justice for All                            0   \n","10                                                0   \n","102 Dalmatians                                    0   \n","12 Angry Men                                      0   \n","...                                             ...   \n","Zelig                                             0   \n","Zero Dark Thirty                                  1   \n","Zootopia                                          0   \n","Zorba the Greek                                   0   \n","tick, tick...BOOM!                                1   \n","\n","                        oscars_winner_FILM EDITING  \\\n","film                                                 \n","'Round Midnight                                  0   \n","...And Justice for All                           0   \n","10                                               0   \n","102 Dalmatians                                   0   \n","12 Angry Men                                     0   \n","...                                            ...   \n","Zelig                                            0   \n","Zero Dark Thirty                                 0   \n","Zootopia                                         0   \n","Zorba the Greek                                  0   \n","tick, tick...BOOM!                               0   \n","\n","                        oscars_nominee_ACTOR IN A SUPPORTING ROLE  \\\n","film                                                                \n","'Round Midnight                                                 0   \n","...And Justice for All                                          0   \n","10                                                              0   \n","102 Dalmatians                                                  0   \n","12 Angry Men                                                    0   \n","...                                                           ...   \n","Zelig                                                           0   \n","Zero Dark Thirty                                                0   \n","Zootopia                                                        0   \n","Zorba the Greek                                                 0   \n","tick, tick...BOOM!                                              0   \n","\n","                        oscars_winner_ACTOR IN A SUPPORTING ROLE  ...  \\\n","film                                                              ...   \n","'Round Midnight                                                0  ...   \n","...And Justice for All                                         0  ...   \n","10                                                             0  ...   \n","102 Dalmatians                                                 0  ...   \n","12 Angry Men                                                   0  ...   \n","...                                                          ...  ...   \n","Zelig                                                          0  ...   \n","Zero Dark Thirty                                               0  ...   \n","Zootopia                                                       0  ...   \n","Zorba the Greek                                                0  ...   \n","tick, tick...BOOM!                                             0  ...   \n","\n","                        oscars_nominee_VISUAL EFFECTS  \\\n","film                                                    \n","'Round Midnight                                     0   \n","...And Justice for All                              0   \n","10                                                  0   \n","102 Dalmatians                                      0   \n","12 Angry Men                                        0   \n","...                                               ...   \n","Zelig                                               0   \n","Zero Dark Thirty                                    0   \n","Zootopia                                            0   \n","Zorba the Greek                                     0   \n","tick, tick...BOOM!                                  0   \n","\n","                        oscars_winner_VISUAL EFFECTS  \\\n","film                                                   \n","'Round Midnight                                    0   \n","...And Justice for All                             0   \n","10                                                 0   \n","102 Dalmatians                                     0   \n","12 Angry Men                                       0   \n","...                                              ...   \n","Zelig                                              0   \n","Zero Dark Thirty                                   0   \n","Zootopia                                           0   \n","Zorba the Greek                                    0   \n","tick, tick...BOOM!                                 0   \n","\n","                        oscars_nominee_ANIMATED FEATURE FILM  \\\n","film                                                           \n","'Round Midnight                                            0   \n","...And Justice for All                                     0   \n","10                                                         0   \n","102 Dalmatians                                             0   \n","12 Angry Men                                               0   \n","...                                                      ...   \n","Zelig                                                      0   \n","Zero Dark Thirty                                           0   \n","Zootopia                                                   1   \n","Zorba the Greek                                            0   \n","tick, tick...BOOM!                                         0   \n","\n","                        oscars_winner_ANIMATED FEATURE FILM  \\\n","film                                                          \n","'Round Midnight                                           0   \n","...And Justice for All                                    0   \n","10                                                        0   \n","102 Dalmatians                                            0   \n","12 Angry Men                                              0   \n","...                                                     ...   \n","Zelig                                                     0   \n","Zero Dark Thirty                                          0   \n","Zootopia                                                  1   \n","Zorba the Greek                                           0   \n","tick, tick...BOOM!                                        0   \n","\n","                        oscars_nominee_WRITING (Adapted Screenplay)  \\\n","film                                                                  \n","'Round Midnight                                                   0   \n","...And Justice for All                                            0   \n","10                                                                0   \n","102 Dalmatians                                                    0   \n","12 Angry Men                                                      0   \n","...                                                             ...   \n","Zelig                                                             0   \n","Zero Dark Thirty                                                  0   \n","Zootopia                                                          0   \n","Zorba the Greek                                                   0   \n","tick, tick...BOOM!                                                0   \n","\n","                        oscars_winner_WRITING (Adapted Screenplay)  \\\n","film                                                                 \n","'Round Midnight                                                  0   \n","...And Justice for All                                           0   \n","10                                                               0   \n","102 Dalmatians                                                   0   \n","12 Angry Men                                                     0   \n","...                                                            ...   \n","Zelig                                                            0   \n","Zero Dark Thirty                                                 0   \n","Zootopia                                                         0   \n","Zorba the Greek                                                  0   \n","tick, tick...BOOM!                                               0   \n","\n","                        oscars_nominee_PRODUCTION DESIGN  \\\n","film                                                       \n","'Round Midnight                                        0   \n","...And Justice for All                                 0   \n","10                                                     0   \n","102 Dalmatians                                         0   \n","12 Angry Men                                           0   \n","...                                                  ...   \n","Zelig                                                  0   \n","Zero Dark Thirty                                       0   \n","Zootopia                                               0   \n","Zorba the Greek                                        0   \n","tick, tick...BOOM!                                     0   \n","\n","                        oscars_winner_PRODUCTION DESIGN  \\\n","film                                                      \n","'Round Midnight                                       0   \n","...And Justice for All                                0   \n","10                                                    0   \n","102 Dalmatians                                        0   \n","12 Angry Men                                          0   \n","...                                                 ...   \n","Zelig                                                 0   \n","Zero Dark Thirty                                      0   \n","Zootopia                                              0   \n","Zorba the Greek                                       0   \n","tick, tick...BOOM!                                    0   \n","\n","                        oscars_nominee_DOCUMENTARY SHORT FILM  \\\n","film                                                            \n","'Round Midnight                                             0   \n","...And Justice for All                                      0   \n","10                                                          0   \n","102 Dalmatians                                              0   \n","12 Angry Men                                                0   \n","...                                                       ...   \n","Zelig                                                       0   \n","Zero Dark Thirty                                            0   \n","Zootopia                                                    0   \n","Zorba the Greek                                             0   \n","tick, tick...BOOM!                                          0   \n","\n","                        oscars_winner_DOCUMENTARY SHORT FILM  \n","film                                                          \n","'Round Midnight                                            0  \n","...And Justice for All                                     0  \n","10                                                         0  \n","102 Dalmatians                                             0  \n","12 Angry Men                                               0  \n","...                                                      ...  \n","Zelig                                                      0  \n","Zero Dark Thirty                                           0  \n","Zootopia                                                   0  \n","Zorba the Greek                                            0  \n","tick, tick...BOOM!                                         0  \n","\n","[1965 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-dee546f9-3908-4010-90e8-6baac6b865b8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>film</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY</th>\n","      <th>oscars_winner_CINEMATOGRAPHY</th>\n","      <th>oscars_nominee_DIRECTING</th>\n","      <th>oscars_winner_DIRECTING</th>\n","      <th>oscars_nominee_FILM EDITING</th>\n","      <th>oscars_winner_FILM EDITING</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>oscars_winner_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>...</th>\n","      <th>oscars_nominee_VISUAL EFFECTS</th>\n","      <th>oscars_winner_VISUAL EFFECTS</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN</th>\n","      <th>oscars_winner_PRODUCTION DESIGN</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM</th>\n","    </tr>\n","    <tr>\n","      <th>film</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>'Round Midnight</th>\n","      <td>1986</td>\n","      <td>'Round Midnight</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...And Justice for All</th>\n","      <td>1979</td>\n","      <td>...And Justice for All</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1979</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>102 Dalmatians</th>\n","      <td>2000</td>\n","      <td>102 Dalmatians</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12 Angry Men</th>\n","      <td>1957</td>\n","      <td>12 Angry Men</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Zelig</th>\n","      <td>1983</td>\n","      <td>Zelig</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zero Dark Thirty</th>\n","      <td>2012</td>\n","      <td>Zero Dark Thirty</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zootopia</th>\n","      <td>2016</td>\n","      <td>Zootopia</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Zorba the Greek</th>\n","      <td>1964</td>\n","      <td>Zorba the Greek</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>tick, tick...BOOM!</th>\n","      <td>2021</td>\n","      <td>tick, tick...BOOM!</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1965 rows × 38 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dee546f9-3908-4010-90e8-6baac6b865b8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dee546f9-3908-4010-90e8-6baac6b865b8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dee546f9-3908-4010-90e8-6baac6b865b8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fff00758-f6d3-4677-82a1-6eec2a73394b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fff00758-f6d3-4677-82a1-6eec2a73394b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fff00758-f6d3-4677-82a1-6eec2a73394b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["merged_df = pd.merge(oscars_previous_df_reset, oscars_df_reset, left_index=True, right_index=True, how='left', suffixes=('_previous', '_current'))\n","merged_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"_SAUMleppn8Y","executionInfo":{"status":"ok","timestamp":1702244429180,"user_tz":480,"elapsed":1277,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"c5123522-9f5c-4351-eee9-aad441c2bf5b"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       year_previous  oscars_nominee_CINEMATOGRAPHY_previous  \\\n","count    1946.000000                             1946.000000   \n","mean     1984.126927                                0.168037   \n","std        25.946094                                0.373995   \n","min      1927.000000                                0.000000   \n","25%      1965.000000                                0.000000   \n","50%      1988.000000                                0.000000   \n","75%      2006.000000                                0.000000   \n","max      2022.000000                                1.000000   \n","\n","       oscars_winner_CINEMATOGRAPHY_previous  \\\n","count                            1946.000000   \n","mean                                0.034943   \n","std                                 0.183684   \n","min                                 0.000000   \n","25%                                 0.000000   \n","50%                                 0.000000   \n","75%                                 0.000000   \n","max                                 1.000000   \n","\n","       oscars_nominee_DIRECTING_previous  oscars_winner_DIRECTING_previous  \\\n","count                        1946.000000                       1946.000000   \n","mean                            0.235868                          0.048304   \n","std                             0.424649                          0.214463   \n","min                             0.000000                          0.000000   \n","25%                             0.000000                          0.000000   \n","50%                             0.000000                          0.000000   \n","75%                             0.000000                          0.000000   \n","max                             1.000000                          1.000000   \n","\n","       oscars_nominee_FILM EDITING_previous  \\\n","count                           1946.000000   \n","mean                               0.225591   \n","std                                0.418078   \n","min                                0.000000   \n","25%                                0.000000   \n","50%                                0.000000   \n","75%                                0.000000   \n","max                                1.000000   \n","\n","       oscars_winner_FILM EDITING_previous  \\\n","count                          1946.000000   \n","mean                              0.045221   \n","std                               0.207842   \n","min                               0.000000   \n","25%                               0.000000   \n","50%                               0.000000   \n","75%                               0.000000   \n","max                               1.000000   \n","\n","       oscars_nominee_ACTOR IN A SUPPORTING ROLE_previous  \\\n","count                                        1946.000000    \n","mean                                            0.210175    \n","std                                             0.407537    \n","min                                             0.000000    \n","25%                                             0.000000    \n","50%                                             0.000000    \n","75%                                             0.000000    \n","max                                             1.000000    \n","\n","       oscars_winner_ACTOR IN A SUPPORTING ROLE_previous  \\\n","count                                        1946.000000   \n","mean                                            0.044707   \n","std                                             0.206713   \n","min                                             0.000000   \n","25%                                             0.000000   \n","50%                                             0.000000   \n","75%                                             0.000000   \n","max                                             1.000000   \n","\n","       oscars_nominee_ACTRESS IN A SUPPORTING ROLE_previous  ...  \\\n","count                                        1946.000000     ...   \n","mean                                            0.204008     ...   \n","std                                             0.403079     ...   \n","min                                             0.000000     ...   \n","25%                                             0.000000     ...   \n","50%                                             0.000000     ...   \n","75%                                             0.000000     ...   \n","max                                             1.000000     ...   \n","\n","       oscars_nominee_VISUAL EFFECTS_current  \\\n","count                            1946.000000   \n","mean                                0.076567   \n","std                                 0.265972   \n","min                                 0.000000   \n","25%                                 0.000000   \n","50%                                 0.000000   \n","75%                                 0.000000   \n","max                                 1.000000   \n","\n","       oscars_winner_VISUAL EFFECTS_current  \\\n","count                           1946.000000   \n","mean                               0.021583   \n","std                                0.145354   \n","min                                0.000000   \n","25%                                0.000000   \n","50%                                0.000000   \n","75%                                0.000000   \n","max                                1.000000   \n","\n","       oscars_nominee_ANIMATED FEATURE FILM_current  \\\n","count                                   1946.000000   \n","mean                                       0.046763   \n","std                                        0.211184   \n","min                                        0.000000   \n","25%                                        0.000000   \n","50%                                        0.000000   \n","75%                                        0.000000   \n","max                                        1.000000   \n","\n","       oscars_winner_ANIMATED FEATURE FILM_current  \\\n","count                                  1946.000000   \n","mean                                      0.010277   \n","std                                       0.100882   \n","min                                       0.000000   \n","25%                                       0.000000   \n","50%                                       0.000000   \n","75%                                       0.000000   \n","max                                       1.000000   \n","\n","       oscars_nominee_WRITING (Adapted Screenplay)_current  \\\n","count                                        1946.000000     \n","mean                                            0.053443     \n","std                                             0.224973     \n","min                                             0.000000     \n","25%                                             0.000000     \n","50%                                             0.000000     \n","75%                                             0.000000     \n","max                                             1.000000     \n","\n","       oscars_winner_WRITING (Adapted Screenplay)_current  \\\n","count                                        1946.000000    \n","mean                                            0.010791    \n","std                                             0.103346    \n","min                                             0.000000    \n","25%                                             0.000000    \n","50%                                             0.000000    \n","75%                                             0.000000    \n","max                                             1.000000    \n","\n","       oscars_nominee_PRODUCTION DESIGN_current  \\\n","count                               1946.000000   \n","mean                                   0.028263   \n","std                                    0.165766   \n","min                                    0.000000   \n","25%                                    0.000000   \n","50%                                    0.000000   \n","75%                                    0.000000   \n","max                                    1.000000   \n","\n","       oscars_winner_PRODUCTION DESIGN_current  \\\n","count                              1946.000000   \n","mean                                  0.005653   \n","std                                   0.074990   \n","min                                   0.000000   \n","25%                                   0.000000   \n","50%                                   0.000000   \n","75%                                   0.000000   \n","max                                   1.000000   \n","\n","       oscars_nominee_DOCUMENTARY SHORT FILM_current  \\\n","count                                    1946.000000   \n","mean                                        0.002569   \n","std                                         0.050637   \n","min                                         0.000000   \n","25%                                         0.000000   \n","50%                                         0.000000   \n","75%                                         0.000000   \n","max                                         1.000000   \n","\n","       oscars_winner_DOCUMENTARY SHORT FILM_current  \n","count                                   1946.000000  \n","mean                                       0.000514  \n","std                                        0.022669  \n","min                                        0.000000  \n","25%                                        0.000000  \n","50%                                        0.000000  \n","75%                                        0.000000  \n","max                                        1.000000  \n","\n","[8 rows x 75 columns]"],"text/html":["\n","  <div id=\"df-ed03c0df-b8f9-4716-b124-fcefda2cadeb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_previous</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY_previous</th>\n","      <th>oscars_winner_CINEMATOGRAPHY_previous</th>\n","      <th>oscars_nominee_DIRECTING_previous</th>\n","      <th>oscars_winner_DIRECTING_previous</th>\n","      <th>oscars_nominee_FILM EDITING_previous</th>\n","      <th>oscars_winner_FILM EDITING_previous</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE_previous</th>\n","      <th>oscars_winner_ACTOR IN A SUPPORTING ROLE_previous</th>\n","      <th>oscars_nominee_ACTRESS IN A SUPPORTING ROLE_previous</th>\n","      <th>...</th>\n","      <th>oscars_nominee_VISUAL EFFECTS_current</th>\n","      <th>oscars_winner_VISUAL EFFECTS_current</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM_current</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM_current</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)_current</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)_current</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN_current</th>\n","      <th>oscars_winner_PRODUCTION DESIGN_current</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM_current</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM_current</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>...</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1984.126927</td>\n","      <td>0.168037</td>\n","      <td>0.034943</td>\n","      <td>0.235868</td>\n","      <td>0.048304</td>\n","      <td>0.225591</td>\n","      <td>0.045221</td>\n","      <td>0.210175</td>\n","      <td>0.044707</td>\n","      <td>0.204008</td>\n","      <td>...</td>\n","      <td>0.076567</td>\n","      <td>0.021583</td>\n","      <td>0.046763</td>\n","      <td>0.010277</td>\n","      <td>0.053443</td>\n","      <td>0.010791</td>\n","      <td>0.028263</td>\n","      <td>0.005653</td>\n","      <td>0.002569</td>\n","      <td>0.000514</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>25.946094</td>\n","      <td>0.373995</td>\n","      <td>0.183684</td>\n","      <td>0.424649</td>\n","      <td>0.214463</td>\n","      <td>0.418078</td>\n","      <td>0.207842</td>\n","      <td>0.407537</td>\n","      <td>0.206713</td>\n","      <td>0.403079</td>\n","      <td>...</td>\n","      <td>0.265972</td>\n","      <td>0.145354</td>\n","      <td>0.211184</td>\n","      <td>0.100882</td>\n","      <td>0.224973</td>\n","      <td>0.103346</td>\n","      <td>0.165766</td>\n","      <td>0.074990</td>\n","      <td>0.050637</td>\n","      <td>0.022669</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1927.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1965.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1988.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2006.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2022.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 75 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed03c0df-b8f9-4716-b124-fcefda2cadeb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed03c0df-b8f9-4716-b124-fcefda2cadeb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed03c0df-b8f9-4716-b124-fcefda2cadeb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3b90949a-c4a7-4322-9b26-300c5d29cab1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3b90949a-c4a7-4322-9b26-300c5d29cab1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3b90949a-c4a7-4322-9b26-300c5d29cab1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["merged_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vAO6twUKpyly","executionInfo":{"status":"ok","timestamp":1702244443169,"user_tz":480,"elapsed":158,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"d0166a4e-c288-456a-eb52-034d62450dc2"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['year_previous', 'film.1', 'oscars_nominee_CINEMATOGRAPHY_previous',\n","       'oscars_winner_CINEMATOGRAPHY_previous',\n","       'oscars_nominee_DIRECTING_previous', 'oscars_winner_DIRECTING_previous',\n","       'oscars_nominee_FILM EDITING_previous',\n","       'oscars_winner_FILM EDITING_previous',\n","       'oscars_nominee_ACTOR IN A SUPPORTING ROLE_previous',\n","       'oscars_winner_ACTOR IN A SUPPORTING ROLE_previous',\n","       'oscars_nominee_ACTRESS IN A SUPPORTING ROLE_previous',\n","       'oscars_winner_ACTRESS IN A SUPPORTING ROLE_previous',\n","       'oscars_nominee_MUSIC (Original Score)_previous',\n","       'oscars_winner_MUSIC (Original Score)_previous',\n","       'oscars_nominee_WRITING (Original Screenplay)_previous',\n","       'oscars_winner_WRITING (Original Screenplay)_previous',\n","       'oscars_nominee_COSTUME DESIGN_previous',\n","       'oscars_winner_COSTUME DESIGN_previous',\n","       'oscars_nominee_SOUND_previous', 'oscars_winner_SOUND_previous',\n","       'oscars_nominee_BEST PICTURE_previous',\n","       'oscars_winner_BEST PICTURE_previous',\n","       'oscars_nominee_MUSIC (Original Song)_previous',\n","       'oscars_winner_MUSIC (Original Song)_previous',\n","       'oscars_nominee_ACTOR IN A LEADING ROLE_previous',\n","       'oscars_winner_ACTOR IN A LEADING ROLE_previous',\n","       'oscars_nominee_ACTRESS IN A LEADING ROLE_previous',\n","       'oscars_winner_ACTRESS IN A LEADING ROLE_previous',\n","       'oscars_nominee_VISUAL EFFECTS_previous',\n","       'oscars_winner_VISUAL EFFECTS_previous',\n","       'oscars_nominee_ANIMATED FEATURE FILM_previous',\n","       'oscars_winner_ANIMATED FEATURE FILM_previous',\n","       'oscars_nominee_WRITING (Adapted Screenplay)_previous',\n","       'oscars_winner_WRITING (Adapted Screenplay)_previous',\n","       'oscars_nominee_PRODUCTION DESIGN_previous',\n","       'oscars_winner_PRODUCTION DESIGN_previous',\n","       'oscars_nominee_DOCUMENTARY SHORT FILM_previous',\n","       'oscars_winner_DOCUMENTARY SHORT FILM_previous', 'imdb_id',\n","       'year_current', 'film', 'oscars_nominee_CINEMATOGRAPHY_current',\n","       'oscars_winner_CINEMATOGRAPHY_current',\n","       'oscars_nominee_DIRECTING_current', 'oscars_winner_DIRECTING_current',\n","       'oscars_nominee_FILM EDITING_current',\n","       'oscars_winner_FILM EDITING_current',\n","       'oscars_nominee_ACTOR IN A SUPPORTING ROLE_current',\n","       'oscars_winner_ACTOR IN A SUPPORTING ROLE_current',\n","       'oscars_nominee_ACTRESS IN A SUPPORTING ROLE_current',\n","       'oscars_winner_ACTRESS IN A SUPPORTING ROLE_current',\n","       'oscars_nominee_MUSIC (Original Score)_current',\n","       'oscars_winner_MUSIC (Original Score)_current',\n","       'oscars_nominee_WRITING (Original Screenplay)_current',\n","       'oscars_winner_WRITING (Original Screenplay)_current',\n","       'oscars_nominee_COSTUME DESIGN_current',\n","       'oscars_winner_COSTUME DESIGN_current', 'oscars_nominee_SOUND_current',\n","       'oscars_winner_SOUND_current', 'oscars_nominee_BEST PICTURE_current',\n","       'oscars_winner_BEST PICTURE_current',\n","       'oscars_nominee_MUSIC (Original Song)_current',\n","       'oscars_winner_MUSIC (Original Song)_current',\n","       'oscars_nominee_ACTOR IN A LEADING ROLE_current',\n","       'oscars_winner_ACTOR IN A LEADING ROLE_current',\n","       'oscars_nominee_ACTRESS IN A LEADING ROLE_current',\n","       'oscars_winner_ACTRESS IN A LEADING ROLE_current',\n","       'oscars_nominee_VISUAL EFFECTS_current',\n","       'oscars_winner_VISUAL EFFECTS_current',\n","       'oscars_nominee_ANIMATED FEATURE FILM_current',\n","       'oscars_winner_ANIMATED FEATURE FILM_current',\n","       'oscars_nominee_WRITING (Adapted Screenplay)_current',\n","       'oscars_winner_WRITING (Adapted Screenplay)_current',\n","       'oscars_nominee_PRODUCTION DESIGN_current',\n","       'oscars_winner_PRODUCTION DESIGN_current',\n","       'oscars_nominee_DOCUMENTARY SHORT FILM_current',\n","       'oscars_winner_DOCUMENTARY SHORT FILM_current'],\n","      dtype='object')"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["columns_to_update = [\n","    'oscars_nominee_WRITING (Adapted Screenplay)',\n","    'oscars_winner_WRITING (Adapted Screenplay)',\n","    'oscars_nominee_DOCUMENTARY SHORT FILM',\n","    'oscars_winner_DOCUMENTARY SHORT FILM',\n","    'oscars_nominee_MUSIC (Original Song)',\n","    'oscars_winner_MUSIC (Original Song)',\n","    'oscars_nominee_WRITING (Original Screenplay)',\n","    'oscars_winner_WRITING (Original Screenplay)'\n","]"],"metadata":{"id":"U5OW6oNDrTXm","executionInfo":{"status":"ok","timestamp":1702244466611,"user_tz":480,"elapsed":204,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["for column in columns_to_update:\n","    # Adjust the column names to match\n","    current_column = f'{column}_current'\n","    previous_column = f'{column}_previous'\n","\n","    merged_df[previous_column] = merged_df[current_column]"],"metadata":{"id":"zikdTXUbqIxc","executionInfo":{"status":"ok","timestamp":1702244470930,"user_tz":480,"elapsed":169,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["# Drop all columns with \"_current\" suffix\n","columns_to_drop_current = [col for col in merged_df.columns if col.endswith('_current')]\n","merged_df = merged_df.drop(columns=columns_to_drop_current)\n","\n","# Rename columns to remove \"_previous\" suffix\n","merged_df.columns = [col.replace('_previous', '') for col in merged_df.columns]\n"],"metadata":{"id":"pNoG-OQWqJ_a","executionInfo":{"status":"ok","timestamp":1702244478264,"user_tz":480,"elapsed":165,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["merged_df.to_csv('corrected2_oscars_df_cleaned.csv', index=True)"],"metadata":{"id":"IxgH6M9rqezh","executionInfo":{"status":"ok","timestamp":1702244496294,"user_tz":480,"elapsed":361,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["merged_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"lO-lFMzuqvIq","executionInfo":{"status":"ok","timestamp":1702244480903,"user_tz":480,"elapsed":137,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"1304b899-5189-4e47-a5b4-754a54e030b1"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              year  oscars_nominee_CINEMATOGRAPHY  \\\n","count  1946.000000                    1946.000000   \n","mean   1984.126927                       0.168037   \n","std      25.946094                       0.373995   \n","min    1927.000000                       0.000000   \n","25%    1965.000000                       0.000000   \n","50%    1988.000000                       0.000000   \n","75%    2006.000000                       0.000000   \n","max    2022.000000                       1.000000   \n","\n","       oscars_winner_CINEMATOGRAPHY  oscars_nominee_DIRECTING  \\\n","count                   1946.000000               1946.000000   \n","mean                       0.034943                  0.235868   \n","std                        0.183684                  0.424649   \n","min                        0.000000                  0.000000   \n","25%                        0.000000                  0.000000   \n","50%                        0.000000                  0.000000   \n","75%                        0.000000                  0.000000   \n","max                        1.000000                  1.000000   \n","\n","       oscars_winner_DIRECTING  oscars_nominee_FILM EDITING  \\\n","count              1946.000000                  1946.000000   \n","mean                  0.048304                     0.225591   \n","std                   0.214463                     0.418078   \n","min                   0.000000                     0.000000   \n","25%                   0.000000                     0.000000   \n","50%                   0.000000                     0.000000   \n","75%                   0.000000                     0.000000   \n","max                   1.000000                     1.000000   \n","\n","       oscars_winner_FILM EDITING  oscars_nominee_ACTOR IN A SUPPORTING ROLE  \\\n","count                 1946.000000                                1946.000000   \n","mean                     0.045221                                   0.210175   \n","std                      0.207842                                   0.407537   \n","min                      0.000000                                   0.000000   \n","25%                      0.000000                                   0.000000   \n","50%                      0.000000                                   0.000000   \n","75%                      0.000000                                   0.000000   \n","max                      1.000000                                   1.000000   \n","\n","       oscars_winner_ACTOR IN A SUPPORTING ROLE  \\\n","count                               1946.000000   \n","mean                                   0.044707   \n","std                                    0.206713   \n","min                                    0.000000   \n","25%                                    0.000000   \n","50%                                    0.000000   \n","75%                                    0.000000   \n","max                                    1.000000   \n","\n","       oscars_nominee_ACTRESS IN A SUPPORTING ROLE  ...  \\\n","count                                  1946.000000  ...   \n","mean                                      0.204008  ...   \n","std                                       0.403079  ...   \n","min                                       0.000000  ...   \n","25%                                       0.000000  ...   \n","50%                                       0.000000  ...   \n","75%                                       0.000000  ...   \n","max                                       1.000000  ...   \n","\n","       oscars_winner_VISUAL EFFECTS  oscars_nominee_ANIMATED FEATURE FILM  \\\n","count                   1946.000000                           1946.000000   \n","mean                       0.021583                              0.046763   \n","std                        0.145354                              0.211184   \n","min                        0.000000                              0.000000   \n","25%                        0.000000                              0.000000   \n","50%                        0.000000                              0.000000   \n","75%                        0.000000                              0.000000   \n","max                        1.000000                              1.000000   \n","\n","       oscars_winner_ANIMATED FEATURE FILM  \\\n","count                          1946.000000   \n","mean                              0.010277   \n","std                               0.100882   \n","min                               0.000000   \n","25%                               0.000000   \n","50%                               0.000000   \n","75%                               0.000000   \n","max                               1.000000   \n","\n","       oscars_nominee_WRITING (Adapted Screenplay)  \\\n","count                                  1946.000000   \n","mean                                      0.053443   \n","std                                       0.224973   \n","min                                       0.000000   \n","25%                                       0.000000   \n","50%                                       0.000000   \n","75%                                       0.000000   \n","max                                       1.000000   \n","\n","       oscars_winner_WRITING (Adapted Screenplay)  \\\n","count                                 1946.000000   \n","mean                                     0.010791   \n","std                                      0.103346   \n","min                                      0.000000   \n","25%                                      0.000000   \n","50%                                      0.000000   \n","75%                                      0.000000   \n","max                                      1.000000   \n","\n","       oscars_nominee_PRODUCTION DESIGN  oscars_winner_PRODUCTION DESIGN  \\\n","count                       1946.000000                      1946.000000   \n","mean                           0.028263                         0.005653   \n","std                            0.165766                         0.074990   \n","min                            0.000000                         0.000000   \n","25%                            0.000000                         0.000000   \n","50%                            0.000000                         0.000000   \n","75%                            0.000000                         0.000000   \n","max                            1.000000                         1.000000   \n","\n","       oscars_nominee_DOCUMENTARY SHORT FILM  \\\n","count                            1946.000000   \n","mean                                0.002569   \n","std                                 0.050637   \n","min                                 0.000000   \n","25%                                 0.000000   \n","50%                                 0.000000   \n","75%                                 0.000000   \n","max                                 1.000000   \n","\n","       oscars_winner_DOCUMENTARY SHORT FILM       imdb_id  \n","count                           1946.000000  1.946000e+03  \n","mean                               0.000514  1.568935e+06  \n","std                                0.022669  3.603073e+06  \n","min                                0.000000  1.780600e+04  \n","25%                                0.000000  6.783350e+04  \n","50%                                0.000000  1.098305e+05  \n","75%                                0.000000  1.125396e+06  \n","max                                1.000000  2.989519e+07  \n","\n","[8 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-a55cb640-18e8-4db8-a11d-7ac28fec1516\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY</th>\n","      <th>oscars_winner_CINEMATOGRAPHY</th>\n","      <th>oscars_nominee_DIRECTING</th>\n","      <th>oscars_winner_DIRECTING</th>\n","      <th>oscars_nominee_FILM EDITING</th>\n","      <th>oscars_winner_FILM EDITING</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>oscars_winner_ACTOR IN A SUPPORTING ROLE</th>\n","      <th>oscars_nominee_ACTRESS IN A SUPPORTING ROLE</th>\n","      <th>...</th>\n","      <th>oscars_winner_VISUAL EFFECTS</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN</th>\n","      <th>oscars_winner_PRODUCTION DESIGN</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM</th>\n","      <th>imdb_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>...</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1.946000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1984.126927</td>\n","      <td>0.168037</td>\n","      <td>0.034943</td>\n","      <td>0.235868</td>\n","      <td>0.048304</td>\n","      <td>0.225591</td>\n","      <td>0.045221</td>\n","      <td>0.210175</td>\n","      <td>0.044707</td>\n","      <td>0.204008</td>\n","      <td>...</td>\n","      <td>0.021583</td>\n","      <td>0.046763</td>\n","      <td>0.010277</td>\n","      <td>0.053443</td>\n","      <td>0.010791</td>\n","      <td>0.028263</td>\n","      <td>0.005653</td>\n","      <td>0.002569</td>\n","      <td>0.000514</td>\n","      <td>1.568935e+06</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>25.946094</td>\n","      <td>0.373995</td>\n","      <td>0.183684</td>\n","      <td>0.424649</td>\n","      <td>0.214463</td>\n","      <td>0.418078</td>\n","      <td>0.207842</td>\n","      <td>0.407537</td>\n","      <td>0.206713</td>\n","      <td>0.403079</td>\n","      <td>...</td>\n","      <td>0.145354</td>\n","      <td>0.211184</td>\n","      <td>0.100882</td>\n","      <td>0.224973</td>\n","      <td>0.103346</td>\n","      <td>0.165766</td>\n","      <td>0.074990</td>\n","      <td>0.050637</td>\n","      <td>0.022669</td>\n","      <td>3.603073e+06</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1927.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.780600e+04</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1965.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>6.783350e+04</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1988.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.098305e+05</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2006.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.125396e+06</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2022.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>2.989519e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 38 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a55cb640-18e8-4db8-a11d-7ac28fec1516')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a55cb640-18e8-4db8-a11d-7ac28fec1516 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a55cb640-18e8-4db8-a11d-7ac28fec1516');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6d89ba8b-4bf4-4227-a64b-5acdde277fbf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6d89ba8b-4bf4-4227-a64b-5acdde277fbf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6d89ba8b-4bf4-4227-a64b-5acdde277fbf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["print(oscars_previous_df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SKn2HRTPo78G","executionInfo":{"status":"ok","timestamp":1702243846542,"user_tz":480,"elapsed":3,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"a77e5789-d6ab-45c2-9a35-01000d9ac160"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['film', 'year', 'film.1', 'oscars_nominee_CINEMATOGRAPHY',\n","       'oscars_winner_CINEMATOGRAPHY', 'oscars_nominee_DIRECTING',\n","       'oscars_winner_DIRECTING', 'oscars_nominee_FILM EDITING',\n","       'oscars_winner_FILM EDITING',\n","       'oscars_nominee_ACTOR IN A SUPPORTING ROLE',\n","       'oscars_winner_ACTOR IN A SUPPORTING ROLE',\n","       'oscars_nominee_ACTRESS IN A SUPPORTING ROLE',\n","       'oscars_winner_ACTRESS IN A SUPPORTING ROLE',\n","       'oscars_nominee_MUSIC (Original Score)',\n","       'oscars_winner_MUSIC (Original Score)',\n","       'oscars_nominee_WRITING (Original Screenplay)',\n","       'oscars_winner_WRITING (Original Screenplay)',\n","       'oscars_nominee_COSTUME DESIGN', 'oscars_winner_COSTUME DESIGN',\n","       'oscars_nominee_SOUND', 'oscars_winner_SOUND',\n","       'oscars_nominee_BEST PICTURE', 'oscars_winner_BEST PICTURE',\n","       'oscars_nominee_MUSIC (Original Song)',\n","       'oscars_winner_MUSIC (Original Song)',\n","       'oscars_nominee_ACTOR IN A LEADING ROLE',\n","       'oscars_winner_ACTOR IN A LEADING ROLE',\n","       'oscars_nominee_ACTRESS IN A LEADING ROLE',\n","       'oscars_winner_ACTRESS IN A LEADING ROLE',\n","       'oscars_nominee_VISUAL EFFECTS', 'oscars_winner_VISUAL EFFECTS',\n","       'oscars_nominee_ANIMATED FEATURE FILM',\n","       'oscars_winner_ANIMATED FEATURE FILM',\n","       'oscars_nominee_WRITING (Adapted Screenplay)',\n","       'oscars_winner_WRITING (Adapted Screenplay)',\n","       'oscars_nominee_PRODUCTION DESIGN', 'oscars_winner_PRODUCTION DESIGN',\n","       'oscars_nominee_DOCUMENTARY SHORT FILM',\n","       'oscars_winner_DOCUMENTARY SHORT FILM', 'imdb_id'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["# Print the columns of the merged DataFrame to identify the correct names\n","print(merged_df.columns)\n","\n","# Update values in oscars_previous_df with corresponding values from oscars_df\n","for column in columns_to_update:\n","    # Adjust the column names to match\n","    current_column = f'{column}_current'\n","    previous_column = column if f'{column}_previous' in merged_df.columns else f'{column}_previous'\n","\n","    # Check if the columns exist in the merged DataFrame before updating\n","    if previous_column in merged_df.columns:\n","        oscars_previous_df[column] = merged_df[previous_column]\n","    else:\n","        print(f\"Warning: {previous_column} not found in the merged DataFrame.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gg_9-09uoANW","executionInfo":{"status":"ok","timestamp":1702243601475,"user_tz":480,"elapsed":251,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"c7111b7e-132f-455a-ff0f-6d3c55ff725b"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['year_previous', 'film.1', 'oscars_nominee_CINEMATOGRAPHY_previous',\n","       'oscars_winner_CINEMATOGRAPHY_previous',\n","       'oscars_nominee_DIRECTING_previous', 'oscars_winner_DIRECTING_previous',\n","       'oscars_nominee_FILM EDITING_previous',\n","       'oscars_winner_FILM EDITING_previous',\n","       'oscars_nominee_ACTOR IN A SUPPORTING ROLE_previous',\n","       'oscars_winner_ACTOR IN A SUPPORTING ROLE_previous',\n","       'oscars_nominee_ACTRESS IN A SUPPORTING ROLE_previous',\n","       'oscars_winner_ACTRESS IN A SUPPORTING ROLE_previous',\n","       'oscars_nominee_MUSIC (Original Score)_previous',\n","       'oscars_winner_MUSIC (Original Score)_previous',\n","       'oscars_nominee_WRITING (Original Screenplay)_previous',\n","       'oscars_winner_WRITING (Original Screenplay)_previous',\n","       'oscars_nominee_COSTUME DESIGN_previous',\n","       'oscars_winner_COSTUME DESIGN_previous',\n","       'oscars_nominee_SOUND_previous', 'oscars_winner_SOUND_previous',\n","       'oscars_nominee_BEST PICTURE_previous',\n","       'oscars_winner_BEST PICTURE_previous',\n","       'oscars_nominee_MUSIC (Original Song)_previous',\n","       'oscars_winner_MUSIC (Original Song)_previous',\n","       'oscars_nominee_ACTOR IN A LEADING ROLE_previous',\n","       'oscars_winner_ACTOR IN A LEADING ROLE_previous',\n","       'oscars_nominee_ACTRESS IN A LEADING ROLE_previous',\n","       'oscars_winner_ACTRESS IN A LEADING ROLE_previous',\n","       'oscars_nominee_VISUAL EFFECTS_previous',\n","       'oscars_winner_VISUAL EFFECTS_previous',\n","       'oscars_nominee_ANIMATED FEATURE FILM_previous',\n","       'oscars_winner_ANIMATED FEATURE FILM_previous',\n","       'oscars_nominee_WRITING (Adapted Screenplay)_previous',\n","       'oscars_winner_WRITING (Adapted Screenplay)_previous',\n","       'oscars_nominee_PRODUCTION DESIGN_previous',\n","       'oscars_winner_PRODUCTION DESIGN_previous',\n","       'oscars_nominee_DOCUMENTARY SHORT FILM_previous',\n","       'oscars_winner_DOCUMENTARY SHORT FILM_previous', 'imdb_id',\n","       'year_current', 'film', 'oscars_nominee_CINEMATOGRAPHY_current',\n","       'oscars_winner_CINEMATOGRAPHY_current',\n","       'oscars_nominee_DIRECTING_current', 'oscars_winner_DIRECTING_current',\n","       'oscars_nominee_FILM EDITING_current',\n","       'oscars_winner_FILM EDITING_current',\n","       'oscars_nominee_ACTOR IN A SUPPORTING ROLE_current',\n","       'oscars_winner_ACTOR IN A SUPPORTING ROLE_current',\n","       'oscars_nominee_ACTRESS IN A SUPPORTING ROLE_current',\n","       'oscars_winner_ACTRESS IN A SUPPORTING ROLE_current',\n","       'oscars_nominee_MUSIC (Original Score)_current',\n","       'oscars_winner_MUSIC (Original Score)_current',\n","       'oscars_nominee_WRITING (Original Screenplay)_current',\n","       'oscars_winner_WRITING (Original Screenplay)_current',\n","       'oscars_nominee_COSTUME DESIGN_current',\n","       'oscars_winner_COSTUME DESIGN_current', 'oscars_nominee_SOUND_current',\n","       'oscars_winner_SOUND_current', 'oscars_nominee_BEST PICTURE_current',\n","       'oscars_winner_BEST PICTURE_current',\n","       'oscars_nominee_MUSIC (Original Song)_current',\n","       'oscars_winner_MUSIC (Original Song)_current',\n","       'oscars_nominee_ACTOR IN A LEADING ROLE_current',\n","       'oscars_winner_ACTOR IN A LEADING ROLE_current',\n","       'oscars_nominee_ACTRESS IN A LEADING ROLE_current',\n","       'oscars_winner_ACTRESS IN A LEADING ROLE_current',\n","       'oscars_nominee_VISUAL EFFECTS_current',\n","       'oscars_winner_VISUAL EFFECTS_current',\n","       'oscars_nominee_ANIMATED FEATURE FILM_current',\n","       'oscars_winner_ANIMATED FEATURE FILM_current',\n","       'oscars_nominee_WRITING (Adapted Screenplay)_current',\n","       'oscars_winner_WRITING (Adapted Screenplay)_current',\n","       'oscars_nominee_PRODUCTION DESIGN_current',\n","       'oscars_winner_PRODUCTION DESIGN_current',\n","       'oscars_nominee_DOCUMENTARY SHORT FILM_current',\n","       'oscars_winner_DOCUMENTARY SHORT FILM_current'],\n","      dtype='object')\n","Warning: oscars_nominee_WRITING (Adapted Screenplay) not found in the merged DataFrame.\n","Warning: oscars_winner_WRITING (Adapted Screenplay) not found in the merged DataFrame.\n","Warning: oscars_nominee_DOCUMENTARY SHORT FILM not found in the merged DataFrame.\n","Warning: oscars_winner_DOCUMENTARY SHORT FILM not found in the merged DataFrame.\n","Warning: oscars_nominee_MUSIC (Original Song) not found in the merged DataFrame.\n","Warning: oscars_winner_MUSIC (Original Song) not found in the merged DataFrame.\n","Warning: oscars_nominee_WRITING (Original Screenplay) not found in the merged DataFrame.\n","Warning: oscars_winner_WRITING (Original Screenplay) not found in the merged DataFrame.\n"]}]},{"cell_type":"code","source":["print(merged_df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UO0lBpR2oJTF","executionInfo":{"status":"ok","timestamp":1702243638546,"user_tz":480,"elapsed":171,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"aac61336-dee1-40a2-823f-87100b960e9f"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['year_previous', 'film.1', 'oscars_nominee_CINEMATOGRAPHY_previous',\n","       'oscars_winner_CINEMATOGRAPHY_previous',\n","       'oscars_nominee_DIRECTING_previous', 'oscars_winner_DIRECTING_previous',\n","       'oscars_nominee_FILM EDITING_previous',\n","       'oscars_winner_FILM EDITING_previous',\n","       'oscars_nominee_ACTOR IN A SUPPORTING ROLE_previous',\n","       'oscars_winner_ACTOR IN A SUPPORTING ROLE_previous',\n","       'oscars_nominee_ACTRESS IN A SUPPORTING ROLE_previous',\n","       'oscars_winner_ACTRESS IN A SUPPORTING ROLE_previous',\n","       'oscars_nominee_MUSIC (Original Score)_previous',\n","       'oscars_winner_MUSIC (Original Score)_previous',\n","       'oscars_nominee_WRITING (Original Screenplay)_previous',\n","       'oscars_winner_WRITING (Original Screenplay)_previous',\n","       'oscars_nominee_COSTUME DESIGN_previous',\n","       'oscars_winner_COSTUME DESIGN_previous',\n","       'oscars_nominee_SOUND_previous', 'oscars_winner_SOUND_previous',\n","       'oscars_nominee_BEST PICTURE_previous',\n","       'oscars_winner_BEST PICTURE_previous',\n","       'oscars_nominee_MUSIC (Original Song)_previous',\n","       'oscars_winner_MUSIC (Original Song)_previous',\n","       'oscars_nominee_ACTOR IN A LEADING ROLE_previous',\n","       'oscars_winner_ACTOR IN A LEADING ROLE_previous',\n","       'oscars_nominee_ACTRESS IN A LEADING ROLE_previous',\n","       'oscars_winner_ACTRESS IN A LEADING ROLE_previous',\n","       'oscars_nominee_VISUAL EFFECTS_previous',\n","       'oscars_winner_VISUAL EFFECTS_previous',\n","       'oscars_nominee_ANIMATED FEATURE FILM_previous',\n","       'oscars_winner_ANIMATED FEATURE FILM_previous',\n","       'oscars_nominee_WRITING (Adapted Screenplay)_previous',\n","       'oscars_winner_WRITING (Adapted Screenplay)_previous',\n","       'oscars_nominee_PRODUCTION DESIGN_previous',\n","       'oscars_winner_PRODUCTION DESIGN_previous',\n","       'oscars_nominee_DOCUMENTARY SHORT FILM_previous',\n","       'oscars_winner_DOCUMENTARY SHORT FILM_previous', 'imdb_id',\n","       'year_current', 'film', 'oscars_nominee_CINEMATOGRAPHY_current',\n","       'oscars_winner_CINEMATOGRAPHY_current',\n","       'oscars_nominee_DIRECTING_current', 'oscars_winner_DIRECTING_current',\n","       'oscars_nominee_FILM EDITING_current',\n","       'oscars_winner_FILM EDITING_current',\n","       'oscars_nominee_ACTOR IN A SUPPORTING ROLE_current',\n","       'oscars_winner_ACTOR IN A SUPPORTING ROLE_current',\n","       'oscars_nominee_ACTRESS IN A SUPPORTING ROLE_current',\n","       'oscars_winner_ACTRESS IN A SUPPORTING ROLE_current',\n","       'oscars_nominee_MUSIC (Original Score)_current',\n","       'oscars_winner_MUSIC (Original Score)_current',\n","       'oscars_nominee_WRITING (Original Screenplay)_current',\n","       'oscars_winner_WRITING (Original Screenplay)_current',\n","       'oscars_nominee_COSTUME DESIGN_current',\n","       'oscars_winner_COSTUME DESIGN_current', 'oscars_nominee_SOUND_current',\n","       'oscars_winner_SOUND_current', 'oscars_nominee_BEST PICTURE_current',\n","       'oscars_winner_BEST PICTURE_current',\n","       'oscars_nominee_MUSIC (Original Song)_current',\n","       'oscars_winner_MUSIC (Original Song)_current',\n","       'oscars_nominee_ACTOR IN A LEADING ROLE_current',\n","       'oscars_winner_ACTOR IN A LEADING ROLE_current',\n","       'oscars_nominee_ACTRESS IN A LEADING ROLE_current',\n","       'oscars_winner_ACTRESS IN A LEADING ROLE_current',\n","       'oscars_nominee_VISUAL EFFECTS_current',\n","       'oscars_winner_VISUAL EFFECTS_current',\n","       'oscars_nominee_ANIMATED FEATURE FILM_current',\n","       'oscars_winner_ANIMATED FEATURE FILM_current',\n","       'oscars_nominee_WRITING (Adapted Screenplay)_current',\n","       'oscars_winner_WRITING (Adapted Screenplay)_current',\n","       'oscars_nominee_PRODUCTION DESIGN_current',\n","       'oscars_winner_PRODUCTION DESIGN_current',\n","       'oscars_nominee_DOCUMENTARY SHORT FILM_current',\n","       'oscars_winner_DOCUMENTARY SHORT FILM_current'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["merged_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"vSv77shXmh5z","executionInfo":{"status":"ok","timestamp":1702243357623,"user_tz":480,"elapsed":540,"user":{"displayName":"Victor Wu","userId":"17032740492318721266"}},"outputId":"4d709d3c-f42a-40b8-c702-f3c3600a20ab"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       year_previous  oscars_nominee_CINEMATOGRAPHY_previous  \\\n","count    1946.000000                             1946.000000   \n","mean     1984.126927                                0.168037   \n","std        25.946094                                0.373995   \n","min      1927.000000                                0.000000   \n","25%      1965.000000                                0.000000   \n","50%      1988.000000                                0.000000   \n","75%      2006.000000                                0.000000   \n","max      2022.000000                                1.000000   \n","\n","       oscars_winner_CINEMATOGRAPHY_previous  \\\n","count                            1946.000000   \n","mean                                0.034943   \n","std                                 0.183684   \n","min                                 0.000000   \n","25%                                 0.000000   \n","50%                                 0.000000   \n","75%                                 0.000000   \n","max                                 1.000000   \n","\n","       oscars_nominee_DIRECTING_previous  oscars_winner_DIRECTING_previous  \\\n","count                        1946.000000                       1946.000000   \n","mean                            0.235868                          0.048304   \n","std                             0.424649                          0.214463   \n","min                             0.000000                          0.000000   \n","25%                             0.000000                          0.000000   \n","50%                             0.000000                          0.000000   \n","75%                             0.000000                          0.000000   \n","max                             1.000000                          1.000000   \n","\n","       oscars_nominee_FILM EDITING_previous  \\\n","count                           1946.000000   \n","mean                               0.225591   \n","std                                0.418078   \n","min                                0.000000   \n","25%                                0.000000   \n","50%                                0.000000   \n","75%                                0.000000   \n","max                                1.000000   \n","\n","       oscars_winner_FILM EDITING_previous  \\\n","count                          1946.000000   \n","mean                              0.045221   \n","std                               0.207842   \n","min                               0.000000   \n","25%                               0.000000   \n","50%                               0.000000   \n","75%                               0.000000   \n","max                               1.000000   \n","\n","       oscars_nominee_ACTOR IN A SUPPORTING ROLE_previous  \\\n","count                                        1946.000000    \n","mean                                            0.210175    \n","std                                             0.407537    \n","min                                             0.000000    \n","25%                                             0.000000    \n","50%                                             0.000000    \n","75%                                             0.000000    \n","max                                             1.000000    \n","\n","       oscars_winner_ACTOR IN A SUPPORTING ROLE_previous  \\\n","count                                        1946.000000   \n","mean                                            0.044707   \n","std                                             0.206713   \n","min                                             0.000000   \n","25%                                             0.000000   \n","50%                                             0.000000   \n","75%                                             0.000000   \n","max                                             1.000000   \n","\n","       oscars_nominee_ACTRESS IN A SUPPORTING ROLE_previous  ...  \\\n","count                                        1946.000000     ...   \n","mean                                            0.204008     ...   \n","std                                             0.403079     ...   \n","min                                             0.000000     ...   \n","25%                                             0.000000     ...   \n","50%                                             0.000000     ...   \n","75%                                             0.000000     ...   \n","max                                             1.000000     ...   \n","\n","       oscars_nominee_VISUAL EFFECTS_current  \\\n","count                                    0.0   \n","mean                                     NaN   \n","std                                      NaN   \n","min                                      NaN   \n","25%                                      NaN   \n","50%                                      NaN   \n","75%                                      NaN   \n","max                                      NaN   \n","\n","       oscars_winner_VISUAL EFFECTS_current  \\\n","count                                   0.0   \n","mean                                    NaN   \n","std                                     NaN   \n","min                                     NaN   \n","25%                                     NaN   \n","50%                                     NaN   \n","75%                                     NaN   \n","max                                     NaN   \n","\n","       oscars_nominee_ANIMATED FEATURE FILM_current  \\\n","count                                           0.0   \n","mean                                            NaN   \n","std                                             NaN   \n","min                                             NaN   \n","25%                                             NaN   \n","50%                                             NaN   \n","75%                                             NaN   \n","max                                             NaN   \n","\n","       oscars_winner_ANIMATED FEATURE FILM_current  \\\n","count                                          0.0   \n","mean                                           NaN   \n","std                                            NaN   \n","min                                            NaN   \n","25%                                            NaN   \n","50%                                            NaN   \n","75%                                            NaN   \n","max                                            NaN   \n","\n","       oscars_nominee_WRITING (Adapted Screenplay)_current  \\\n","count                                                0.0     \n","mean                                                 NaN     \n","std                                                  NaN     \n","min                                                  NaN     \n","25%                                                  NaN     \n","50%                                                  NaN     \n","75%                                                  NaN     \n","max                                                  NaN     \n","\n","       oscars_winner_WRITING (Adapted Screenplay)_current  \\\n","count                                                0.0    \n","mean                                                 NaN    \n","std                                                  NaN    \n","min                                                  NaN    \n","25%                                                  NaN    \n","50%                                                  NaN    \n","75%                                                  NaN    \n","max                                                  NaN    \n","\n","       oscars_nominee_PRODUCTION DESIGN_current  \\\n","count                                       0.0   \n","mean                                        NaN   \n","std                                         NaN   \n","min                                         NaN   \n","25%                                         NaN   \n","50%                                         NaN   \n","75%                                         NaN   \n","max                                         NaN   \n","\n","       oscars_winner_PRODUCTION DESIGN_current  \\\n","count                                      0.0   \n","mean                                       NaN   \n","std                                        NaN   \n","min                                        NaN   \n","25%                                        NaN   \n","50%                                        NaN   \n","75%                                        NaN   \n","max                                        NaN   \n","\n","       oscars_nominee_DOCUMENTARY SHORT FILM_current  \\\n","count                                            0.0   \n","mean                                             NaN   \n","std                                              NaN   \n","min                                              NaN   \n","25%                                              NaN   \n","50%                                              NaN   \n","75%                                              NaN   \n","max                                              NaN   \n","\n","       oscars_winner_DOCUMENTARY SHORT FILM_current  \n","count                                           0.0  \n","mean                                            NaN  \n","std                                             NaN  \n","min                                             NaN  \n","25%                                             NaN  \n","50%                                             NaN  \n","75%                                             NaN  \n","max                                             NaN  \n","\n","[8 rows x 75 columns]"],"text/html":["\n","  <div id=\"df-7ddba9bd-732d-4d9a-bb76-a188112b3d0d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year_previous</th>\n","      <th>oscars_nominee_CINEMATOGRAPHY_previous</th>\n","      <th>oscars_winner_CINEMATOGRAPHY_previous</th>\n","      <th>oscars_nominee_DIRECTING_previous</th>\n","      <th>oscars_winner_DIRECTING_previous</th>\n","      <th>oscars_nominee_FILM EDITING_previous</th>\n","      <th>oscars_winner_FILM EDITING_previous</th>\n","      <th>oscars_nominee_ACTOR IN A SUPPORTING ROLE_previous</th>\n","      <th>oscars_winner_ACTOR IN A SUPPORTING ROLE_previous</th>\n","      <th>oscars_nominee_ACTRESS IN A SUPPORTING ROLE_previous</th>\n","      <th>...</th>\n","      <th>oscars_nominee_VISUAL EFFECTS_current</th>\n","      <th>oscars_winner_VISUAL EFFECTS_current</th>\n","      <th>oscars_nominee_ANIMATED FEATURE FILM_current</th>\n","      <th>oscars_winner_ANIMATED FEATURE FILM_current</th>\n","      <th>oscars_nominee_WRITING (Adapted Screenplay)_current</th>\n","      <th>oscars_winner_WRITING (Adapted Screenplay)_current</th>\n","      <th>oscars_nominee_PRODUCTION DESIGN_current</th>\n","      <th>oscars_winner_PRODUCTION DESIGN_current</th>\n","      <th>oscars_nominee_DOCUMENTARY SHORT FILM_current</th>\n","      <th>oscars_winner_DOCUMENTARY SHORT FILM_current</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>1946.000000</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1984.126927</td>\n","      <td>0.168037</td>\n","      <td>0.034943</td>\n","      <td>0.235868</td>\n","      <td>0.048304</td>\n","      <td>0.225591</td>\n","      <td>0.045221</td>\n","      <td>0.210175</td>\n","      <td>0.044707</td>\n","      <td>0.204008</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>25.946094</td>\n","      <td>0.373995</td>\n","      <td>0.183684</td>\n","      <td>0.424649</td>\n","      <td>0.214463</td>\n","      <td>0.418078</td>\n","      <td>0.207842</td>\n","      <td>0.407537</td>\n","      <td>0.206713</td>\n","      <td>0.403079</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1927.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1965.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1988.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2006.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2022.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 75 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ddba9bd-732d-4d9a-bb76-a188112b3d0d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ddba9bd-732d-4d9a-bb76-a188112b3d0d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ddba9bd-732d-4d9a-bb76-a188112b3d0d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c97cc58b-c676-4623-8d83-f828b55a3e05\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c97cc58b-c676-4623-8d83-f828b55a3e05')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c97cc58b-c676-4623-8d83-f828b55a3e05 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":45},{"output_type":"stream","name":"stdout","text":["Warning: Total number of columns (75) exceeds max_columns (20) limiting to first (20) columns.\n"]}]},{"cell_type":"code","source":["# Drop the redundant columns from the merge\n","columns_to_drop = [f'{column}_current' for column in columns_to_update]\n","oscars_previous_df = oscars_previous_df.drop(columns=columns_to_drop)\n","\n","# Rename columns to remove \"_previous\" suffix\n","oscars_previous_df.columns = [column.replace('_previous', '') for column in oscars_previous_df.columns]\n","\n","# Now, oscars_previous_df has been updated with values from oscars_df, and columns have been renamed\n"],"metadata":{"id":"2nxLpu42mgXB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"PeJTeSkTlG7G"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}